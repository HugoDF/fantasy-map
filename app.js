(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var pSlice = Array.prototype.slice;
var objectKeys = require('./lib/keys.js');
var isArguments = require('./lib/is_arguments.js');

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return typeof a === typeof b;
}

},{"./lib/is_arguments.js":2,"./lib/keys.js":3}],2:[function(require,module,exports){
var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};

},{}],3:[function(require,module,exports){
exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}

},{}],4:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @typechecks
 */

var emptyFunction = require('./emptyFunction');

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if ("build" !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;
},{"./emptyFunction":11}],5:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;
},{}],6:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;
},{}],7:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var camelize = require('./camelize');

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;
},{"./camelize":6}],8:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

var isTextNode = require('./isTextNode');

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;
},{"./isTextNode":21}],9:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var invariant = require('./invariant');

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? "build" !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ? "build" !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ? "build" !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ? "build" !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return(
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;
},{"./invariant":19}],10:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = require('./ExecutionEnvironment');

var createArrayFromMixed = require('./createArrayFromMixed');
var getMarkupWrap = require('./getMarkupWrap');
var invariant = require('./invariant');

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ? "build" !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ? "build" !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;
},{"./ExecutionEnvironment":5,"./createArrayFromMixed":9,"./getMarkupWrap":15,"./invariant":19}],11:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
},{}],12:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyObject = {};

if ("build" !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
},{}],13:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;
},{}],14:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 */
function getActiveElement() /*?DOMElement*/{
  if (typeof document === 'undefined') {
    return null;
  }
  try {
    return document.activeElement || document.body;
  } catch (e) {
    return document.body;
  }
}

module.exports = getActiveElement;
},{}],15:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = require('./ExecutionEnvironment');

var invariant = require('./invariant');

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ? "build" !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;
},{"./ExecutionEnvironment":5,"./invariant":19}],16:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */

function getUnboundedScrollPosition(scrollable) {
  if (scrollable === window) {
    return {
      x: window.pageXOffset || document.documentElement.scrollLeft,
      y: window.pageYOffset || document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;
},{}],17:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;
},{}],18:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var hyphenate = require('./hyphenate');

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;
},{"./hyphenate":17}],19:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

function invariant(condition, format, a, b, c, d, e, f) {
  if ("build" !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
},{}],20:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
},{}],21:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isNode = require('./isNode');

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;
},{"./isNode":20}],22:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks static-only
 */

'use strict';

var invariant = require('./invariant');

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function keyMirror(obj) {
  var ret = {};
  var key;
  !(obj instanceof Object && !Array.isArray(obj)) ? "build" !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;
},{"./invariant":19}],23:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/**
 * Allows extraction of a minified key. Let's the build system minify keys
 * without losing the ability to dynamically use key strings as values
 * themselves. Pass in an object with a single key/val pair and it will return
 * you the string key of that single record. Suppose you want to grab the
 * value for a key 'className' inside of an object. Key/val minification may
 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
 * reuse those resolutions.
 */
var keyOf = function keyOf(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};

module.exports = keyOf;
},{}],24:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * Executes the provided `callback` once for each enumerable own property in the
 * object and constructs a new object from the results. The `callback` is
 * invoked with three arguments:
 *
 *  - the property value
 *  - the property name
 *  - the object being traversed
 *
 * Properties that are added after the call to `mapObject` will not be visited
 * by `callback`. If the values of existing properties are changed, the value
 * passed to `callback` will be the value at the time `mapObject` visits them.
 * Properties that are deleted before being visited are not visited.
 *
 * @grep function objectMap()
 * @grep function objMap()
 *
 * @param {?object} object
 * @param {function} callback
 * @param {*} context
 * @return {?object}
 */
function mapObject(object, callback, context) {
  if (!object) {
    return null;
  }
  var result = {};
  for (var name in object) {
    if (hasOwnProperty.call(object, name)) {
      result[name] = callback.call(context, object[name], name, object);
    }
  }
  return result;
}

module.exports = mapObject;
},{}],25:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @typechecks static-only
 */

'use strict';

/**
 * Memoizes the return value of a function that accepts one string argument.
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;
},{}],26:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var ExecutionEnvironment = require('./ExecutionEnvironment');

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};
},{"./ExecutionEnvironment":5}],27:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var performance = require('./performance');

var performanceNow;

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;
},{"./performance":26}],28:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return x !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
},{}],29:[function(require,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyFunction = require('./emptyFunction');

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if ("build" !== 'production') {
  warning = function warning(condition, format) {
    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    }
  };
}

module.exports = warning;
},{"./emptyFunction":11}],30:[function(require,module,exports){
/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
'use strict';

var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    arguments: true,
    arity: true
};

var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
        var keys = Object.getOwnPropertyNames(sourceComponent);

        /* istanbul ignore else */
        if (isGetOwnPropertySymbolsAvailable) {
            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
        }

        for (var i = 0; i < keys.length; ++i) {
            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
                try {
                    targetComponent[keys[i]] = sourceComponent[keys[i]];
                } catch (error) {

                }
            }
        }
    }

    return targetComponent;
};

},{}],31:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition, format, a, b, c, d, e, f) {
  if ("build" !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

module.exports = invariant;

},{}],32:[function(require,module,exports){
'use strict';
/* eslint-disable no-unused-vars */
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (e) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (Object.getOwnPropertySymbols) {
			symbols = Object.getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}],33:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],34:[function(require,module,exports){
'use strict';

module.exports = require('react/lib/ReactDOM');

},{"react/lib/ReactDOM":126}],35:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.loopAsync = loopAsync;
exports.mapAsync = mapAsync;
function loopAsync(turns, work, callback) {
  var currentTurn = 0,
      isDone = false;
  var sync = false,
      hasNext = false,
      doneArgs = void 0;

  function done() {
    isDone = true;
    if (sync) {
      // Iterate instead of recursing if possible.
      doneArgs = [].concat(Array.prototype.slice.call(arguments));
      return;
    }

    callback.apply(this, arguments);
  }

  function next() {
    if (isDone) {
      return;
    }

    hasNext = true;
    if (sync) {
      // Iterate instead of recursing if possible.
      return;
    }

    sync = true;

    while (!isDone && currentTurn < turns && hasNext) {
      hasNext = false;
      work.call(this, currentTurn++, next, done);
    }

    sync = false;

    if (isDone) {
      // This means the loop finished synchronously.
      callback.apply(this, doneArgs);
      return;
    }

    if (currentTurn >= turns && hasNext) {
      isDone = true;
      callback();
    }
  }

  next();
}

function mapAsync(array, work, callback) {
  var length = array.length;
  var values = [];

  if (length === 0) return callback(null, values);

  var isDone = false,
      doneCount = 0;

  function done(index, error, value) {
    if (isDone) return;

    if (error) {
      isDone = true;
      callback(error);
    } else {
      values[index] = value;

      isDone = ++doneCount === length;

      if (isDone) callback(null, values);
    }
  }

  array.forEach(function (item, index) {
    work(item, index, function (error, value) {
      done(index, error, value);
    });
  });
}
},{}],36:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

var _InternalPropTypes = require('./InternalPropTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A mixin that adds the "history" instance variable to components.
 */
var History = {

  contextTypes: {
    history: _InternalPropTypes.history
  },

  componentWillMount: function componentWillMount() {
    "build" !== 'production' ? (0, _routerWarning2.default)(false, 'the `History` mixin is deprecated, please access `context.router` with your own `contextTypes`. http://tiny.cc/router-historymixin') : void 0;
    this.history = this.context.history;
  }
};

exports.default = History;
module.exports = exports['default'];
},{"./InternalPropTypes":40,"./routerWarning":69}],37:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Link = require('./Link');

var _Link2 = _interopRequireDefault(_Link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * An <IndexLink> is used to link to an <IndexRoute>.
 */
var IndexLink = _react2.default.createClass({
  displayName: 'IndexLink',
  render: function render() {
    return _react2.default.createElement(_Link2.default, _extends({}, this.props, { onlyActiveOnIndex: true }));
  }
});

exports.default = IndexLink;
module.exports = exports['default'];
},{"./Link":42,"react":231}],38:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _Redirect = require('./Redirect');

var _Redirect2 = _interopRequireDefault(_Redirect);

var _InternalPropTypes = require('./InternalPropTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _React$PropTypes = _react2.default.PropTypes;
var string = _React$PropTypes.string;
var object = _React$PropTypes.object;

/**
 * An <IndexRedirect> is used to redirect from an indexRoute.
 */

var IndexRedirect = _react2.default.createClass({
  displayName: 'IndexRedirect',


  statics: {
    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
      /* istanbul ignore else: sanity check */
      if (parentRoute) {
        parentRoute.indexRoute = _Redirect2.default.createRouteFromReactElement(element);
      } else {
        "build" !== 'production' ? (0, _routerWarning2.default)(false, 'An <IndexRedirect> does not make sense at the root of your route config') : void 0;
      }
    }
  },

  propTypes: {
    to: string.isRequired,
    query: object,
    state: object,
    onEnter: _InternalPropTypes.falsy,
    children: _InternalPropTypes.falsy
  },

  /* istanbul ignore next: sanity check */
  render: function render() {
    !false ? "build" !== 'production' ? (0, _invariant2.default)(false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
  }
});

exports.default = IndexRedirect;
module.exports = exports['default'];
},{"./InternalPropTypes":40,"./Redirect":45,"./routerWarning":69,"invariant":31,"react":231}],39:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _RouteUtils = require('./RouteUtils');

var _InternalPropTypes = require('./InternalPropTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var func = _react2.default.PropTypes.func;

/**
 * An <IndexRoute> is used to specify its parent's <Route indexRoute> in
 * a JSX route config.
 */

var IndexRoute = _react2.default.createClass({
  displayName: 'IndexRoute',


  statics: {
    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
      /* istanbul ignore else: sanity check */
      if (parentRoute) {
        parentRoute.indexRoute = (0, _RouteUtils.createRouteFromReactElement)(element);
      } else {
        "build" !== 'production' ? (0, _routerWarning2.default)(false, 'An <IndexRoute> does not make sense at the root of your route config') : void 0;
      }
    }
  },

  propTypes: {
    path: _InternalPropTypes.falsy,
    component: _InternalPropTypes.component,
    components: _InternalPropTypes.components,
    getComponent: func,
    getComponents: func
  },

  /* istanbul ignore next: sanity check */
  render: function render() {
    !false ? "build" !== 'production' ? (0, _invariant2.default)(false, '<IndexRoute> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
  }
});

exports.default = IndexRoute;
module.exports = exports['default'];
},{"./InternalPropTypes":40,"./RouteUtils":48,"./routerWarning":69,"invariant":31,"react":231}],40:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.routes = exports.route = exports.components = exports.component = exports.history = undefined;
exports.falsy = falsy;

var _react = require('react');

var func = _react.PropTypes.func;
var object = _react.PropTypes.object;
var arrayOf = _react.PropTypes.arrayOf;
var oneOfType = _react.PropTypes.oneOfType;
var element = _react.PropTypes.element;
var shape = _react.PropTypes.shape;
var string = _react.PropTypes.string;
function falsy(props, propName, componentName) {
  if (props[propName]) return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
}

var history = exports.history = shape({
  listen: func.isRequired,
  push: func.isRequired,
  replace: func.isRequired,
  go: func.isRequired,
  goBack: func.isRequired,
  goForward: func.isRequired
});

var component = exports.component = oneOfType([func, string]);
var components = exports.components = oneOfType([component, object]);
var route = exports.route = oneOfType([object, element]);
var routes = exports.routes = oneOfType([route, arrayOf(route)]);
},{"react":231}],41:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var object = _react2.default.PropTypes.object;

/**
 * The Lifecycle mixin adds the routerWillLeave lifecycle method to a
 * component that may be used to cancel a transition or prompt the user
 * for confirmation.
 *
 * On standard transitions, routerWillLeave receives a single argument: the
 * location we're transitioning to. To cancel the transition, return false.
 * To prompt the user for confirmation, return a prompt message (string).
 *
 * During the beforeunload event (assuming you're using the useBeforeUnload
 * history enhancer), routerWillLeave does not receive a location object
 * because it isn't possible for us to know the location we're transitioning
 * to. In this case routerWillLeave must return a prompt message to prevent
 * the user from closing the window/tab.
 */

var Lifecycle = {

  contextTypes: {
    history: object.isRequired,
    // Nested children receive the route as context, either
    // set by the route component using the RouteContext mixin
    // or by some other ancestor.
    route: object
  },

  propTypes: {
    // Route components receive the route object as a prop.
    route: object
  },

  componentDidMount: function componentDidMount() {
    "build" !== 'production' ? (0, _routerWarning2.default)(false, 'the `Lifecycle` mixin is deprecated, please use `context.router.setRouteLeaveHook(route, hook)`. http://tiny.cc/router-lifecyclemixin') : void 0;
    !this.routerWillLeave ? "build" !== 'production' ? (0, _invariant2.default)(false, 'The Lifecycle mixin requires you to define a routerWillLeave method') : (0, _invariant2.default)(false) : void 0;

    var route = this.props.route || this.context.route;

    !route ? "build" !== 'production' ? (0, _invariant2.default)(false, 'The Lifecycle mixin must be used on either a) a <Route component> or ' + 'b) a descendant of a <Route component> that uses the RouteContext mixin') : (0, _invariant2.default)(false) : void 0;

    this._unlistenBeforeLeavingRoute = this.context.history.listenBeforeLeavingRoute(route, this.routerWillLeave);
  },
  componentWillUnmount: function componentWillUnmount() {
    if (this._unlistenBeforeLeavingRoute) this._unlistenBeforeLeavingRoute();
  }
};

exports.default = Lifecycle;
module.exports = exports['default'];
},{"./routerWarning":69,"invariant":31,"react":231}],42:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _PropTypes = require('./PropTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var _React$PropTypes = _react2.default.PropTypes;
var bool = _React$PropTypes.bool;
var object = _React$PropTypes.object;
var string = _React$PropTypes.string;
var func = _React$PropTypes.func;
var oneOfType = _React$PropTypes.oneOfType;


function isLeftClickEvent(event) {
  return event.button === 0;
}

function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}

// TODO: De-duplicate against hasAnyProperties in createTransitionManager.
function isEmptyObject(object) {
  for (var p in object) {
    if (Object.prototype.hasOwnProperty.call(object, p)) return false;
  }return true;
}

function createLocationDescriptor(to, _ref) {
  var query = _ref.query;
  var hash = _ref.hash;
  var state = _ref.state;

  if (query || hash || state) {
    return { pathname: to, query: query, hash: hash, state: state };
  }

  return to;
}

/**
 * A <Link> is used to create an <a> element that links to a route.
 * When that route is active, the link gets the value of its
 * activeClassName prop.
 *
 * For example, assuming you have the following route:
 *
 *   <Route path="/posts/:postID" component={Post} />
 *
 * You could use the following component to link to that route:
 *
 *   <Link to={`/posts/${post.id}`} />
 *
 * Links may pass along location state and/or query string parameters
 * in the state/query props, respectively.
 *
 *   <Link ... query={{ show: true }} state={{ the: 'state' }} />
 */
var Link = _react2.default.createClass({
  displayName: 'Link',


  contextTypes: {
    router: _PropTypes.routerShape
  },

  propTypes: {
    to: oneOfType([string, object]).isRequired,
    query: object,
    hash: string,
    state: object,
    activeStyle: object,
    activeClassName: string,
    onlyActiveOnIndex: bool.isRequired,
    onClick: func,
    target: string
  },

  getDefaultProps: function getDefaultProps() {
    return {
      onlyActiveOnIndex: false,
      style: {}
    };
  },
  handleClick: function handleClick(event) {
    !this.context.router ? "build" !== 'production' ? (0, _invariant2.default)(false, '<Link>s rendered outside of a router context cannot handle clicks.') : (0, _invariant2.default)(false) : void 0;

    var allowTransition = true;

    if (this.props.onClick) this.props.onClick(event);

    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;

    if (event.defaultPrevented === true) allowTransition = false;

    // If target prop is set (e.g. to "_blank") let browser handle link.
    /* istanbul ignore if: untestable with Karma */
    if (this.props.target) {
      if (!allowTransition) event.preventDefault();

      return;
    }

    event.preventDefault();

    if (allowTransition) {
      var _props = this.props;
      var to = _props.to;
      var query = _props.query;
      var hash = _props.hash;
      var state = _props.state;

      var location = createLocationDescriptor(to, { query: query, hash: hash, state: state });

      this.context.router.push(location);
    }
  },
  render: function render() {
    var _props2 = this.props;
    var to = _props2.to;
    var query = _props2.query;
    var hash = _props2.hash;
    var state = _props2.state;
    var activeClassName = _props2.activeClassName;
    var activeStyle = _props2.activeStyle;
    var onlyActiveOnIndex = _props2.onlyActiveOnIndex;

    var props = _objectWithoutProperties(_props2, ['to', 'query', 'hash', 'state', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);

    "build" !== 'production' ? (0, _routerWarning2.default)(!(query || hash || state), 'the `query`, `hash`, and `state` props on `<Link>` are deprecated, use `<Link to={{ pathname, query, hash, state }}/>. http://tiny.cc/router-isActivedeprecated') : void 0;

    // Ignore if rendered outside the context of router, simplifies unit testing.
    var router = this.context.router;


    if (router) {
      var location = createLocationDescriptor(to, { query: query, hash: hash, state: state });
      props.href = router.createHref(location);

      if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {
        if (router.isActive(location, onlyActiveOnIndex)) {
          if (activeClassName) {
            if (props.className) {
              props.className += ' ' + activeClassName;
            } else {
              props.className = activeClassName;
            }
          }

          if (activeStyle) props.style = _extends({}, props.style, activeStyle);
        }
      }
    }

    return _react2.default.createElement('a', _extends({}, props, { onClick: this.handleClick }));
  }
});

exports.default = Link;
module.exports = exports['default'];
},{"./PropTypes":44,"./routerWarning":69,"invariant":31,"react":231}],43:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.compilePattern = compilePattern;
exports.matchPattern = matchPattern;
exports.getParamNames = getParamNames;
exports.getParams = getParams;
exports.formatPattern = formatPattern;

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function escapeRegExp(string) {
  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
}

function _compilePattern(pattern) {
  var regexpSource = '';
  var paramNames = [];
  var tokens = [];

  var match = void 0,
      lastIndex = 0,
      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)/g;
  while (match = matcher.exec(pattern)) {
    if (match.index !== lastIndex) {
      tokens.push(pattern.slice(lastIndex, match.index));
      regexpSource += escapeRegExp(pattern.slice(lastIndex, match.index));
    }

    if (match[1]) {
      regexpSource += '([^/]+)';
      paramNames.push(match[1]);
    } else if (match[0] === '**') {
      regexpSource += '(.*)';
      paramNames.push('splat');
    } else if (match[0] === '*') {
      regexpSource += '(.*?)';
      paramNames.push('splat');
    } else if (match[0] === '(') {
      regexpSource += '(?:';
    } else if (match[0] === ')') {
      regexpSource += ')?';
    }

    tokens.push(match[0]);

    lastIndex = matcher.lastIndex;
  }

  if (lastIndex !== pattern.length) {
    tokens.push(pattern.slice(lastIndex, pattern.length));
    regexpSource += escapeRegExp(pattern.slice(lastIndex, pattern.length));
  }

  return {
    pattern: pattern,
    regexpSource: regexpSource,
    paramNames: paramNames,
    tokens: tokens
  };
}

var CompiledPatternsCache = {};

function compilePattern(pattern) {
  if (!(pattern in CompiledPatternsCache)) CompiledPatternsCache[pattern] = _compilePattern(pattern);

  return CompiledPatternsCache[pattern];
}

/**
 * Attempts to match a pattern on the given pathname. Patterns may use
 * the following special characters:
 *
 * - :paramName     Matches a URL segment up to the next /, ?, or #. The
 *                  captured string is considered a "param"
 * - ()             Wraps a segment of the URL that is optional
 * - *              Consumes (non-greedy) all characters up to the next
 *                  character in the pattern, or to the end of the URL if
 *                  there is none
 * - **             Consumes (greedy) all characters up to the next character
 *                  in the pattern, or to the end of the URL if there is none
 *
 *  The function calls callback(error, matched) when finished.
 * The return value is an object with the following properties:
 *
 * - remainingPathname
 * - paramNames
 * - paramValues
 */
function matchPattern(pattern, pathname) {
  // Ensure pattern starts with leading slash for consistency with pathname.
  if (pattern.charAt(0) !== '/') {
    pattern = '/' + pattern;
  }

  var _compilePattern2 = compilePattern(pattern);

  var regexpSource = _compilePattern2.regexpSource;
  var paramNames = _compilePattern2.paramNames;
  var tokens = _compilePattern2.tokens;


  if (pattern.charAt(pattern.length - 1) !== '/') {
    regexpSource += '/?'; // Allow optional path separator at end.
  }

  // Special-case patterns like '*' for catch-all routes.
  if (tokens[tokens.length - 1] === '*') {
    regexpSource += '$';
  }

  var match = pathname.match(new RegExp('^' + regexpSource, 'i'));
  if (match == null) {
    return null;
  }

  var matchedPath = match[0];
  var remainingPathname = pathname.substr(matchedPath.length);

  if (remainingPathname) {
    // Require that the match ends at a path separator, if we didn't match
    // the full path, so any remaining pathname is a new path segment.
    if (matchedPath.charAt(matchedPath.length - 1) !== '/') {
      return null;
    }

    // If there is a remaining pathname, treat the path separator as part of
    // the remaining pathname for properly continuing the match.
    remainingPathname = '/' + remainingPathname;
  }

  return {
    remainingPathname: remainingPathname,
    paramNames: paramNames,
    paramValues: match.slice(1).map(function (v) {
      return v && decodeURIComponent(v);
    })
  };
}

function getParamNames(pattern) {
  return compilePattern(pattern).paramNames;
}

function getParams(pattern, pathname) {
  var match = matchPattern(pattern, pathname);
  if (!match) {
    return null;
  }

  var paramNames = match.paramNames;
  var paramValues = match.paramValues;

  var params = {};

  paramNames.forEach(function (paramName, index) {
    params[paramName] = paramValues[index];
  });

  return params;
}

/**
 * Returns a version of the given pattern with params interpolated. Throws
 * if there is a dynamic segment of the pattern for which there is no param.
 */
function formatPattern(pattern, params) {
  params = params || {};

  var _compilePattern3 = compilePattern(pattern);

  var tokens = _compilePattern3.tokens;

  var parenCount = 0,
      pathname = '',
      splatIndex = 0;

  var token = void 0,
      paramName = void 0,
      paramValue = void 0;
  for (var i = 0, len = tokens.length; i < len; ++i) {
    token = tokens[i];

    if (token === '*' || token === '**') {
      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;

      !(paramValue != null || parenCount > 0) ? "build" !== 'production' ? (0, _invariant2.default)(false, 'Missing splat #%s for path "%s"', splatIndex, pattern) : (0, _invariant2.default)(false) : void 0;

      if (paramValue != null) pathname += encodeURI(paramValue);
    } else if (token === '(') {
      parenCount += 1;
    } else if (token === ')') {
      parenCount -= 1;
    } else if (token.charAt(0) === ':') {
      paramName = token.substring(1);
      paramValue = params[paramName];

      !(paramValue != null || parenCount > 0) ? "build" !== 'production' ? (0, _invariant2.default)(false, 'Missing "%s" parameter for path "%s"', paramName, pattern) : (0, _invariant2.default)(false) : void 0;

      if (paramValue != null) pathname += encodeURIComponent(paramValue);
    } else {
      pathname += token;
    }
  }

  return pathname.replace(/\/+/g, '/');
}
},{"invariant":31}],44:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.router = exports.routes = exports.route = exports.components = exports.component = exports.location = exports.history = exports.falsy = exports.locationShape = exports.routerShape = undefined;

var _react = require('react');

var _deprecateObjectProperties = require('./deprecateObjectProperties');

var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);

var _InternalPropTypes = require('./InternalPropTypes');

var InternalPropTypes = _interopRequireWildcard(_InternalPropTypes);

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var func = _react.PropTypes.func;
var object = _react.PropTypes.object;
var shape = _react.PropTypes.shape;
var string = _react.PropTypes.string;
var routerShape = exports.routerShape = shape({
  push: func.isRequired,
  replace: func.isRequired,
  go: func.isRequired,
  goBack: func.isRequired,
  goForward: func.isRequired,
  setRouteLeaveHook: func.isRequired,
  isActive: func.isRequired
});

var locationShape = exports.locationShape = shape({
  pathname: string.isRequired,
  search: string.isRequired,
  state: object,
  action: string.isRequired,
  key: string
});

// Deprecated stuff below:

var falsy = exports.falsy = InternalPropTypes.falsy;
var history = exports.history = InternalPropTypes.history;
var location = exports.location = locationShape;
var component = exports.component = InternalPropTypes.component;
var components = exports.components = InternalPropTypes.components;
var route = exports.route = InternalPropTypes.route;
var routes = exports.routes = InternalPropTypes.routes;
var router = exports.router = routerShape;

if ("build" !== 'production') {
  (function () {
    var deprecatePropType = function deprecatePropType(propType, message) {
      return function () {
        "build" !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
        return propType.apply(undefined, arguments);
      };
    };

    var deprecateInternalPropType = function deprecateInternalPropType(propType) {
      return deprecatePropType(propType, 'This prop type is not intended for external use, and was previously exported by mistake. These internal prop types are deprecated for external use, and will be removed in a later version.');
    };

    var deprecateRenamedPropType = function deprecateRenamedPropType(propType, name) {
      return deprecatePropType(propType, 'The `' + name + '` prop type is now exported as `' + name + 'Shape` to avoid name conflicts. This export is deprecated and will be removed in a later version.');
    };

    exports.falsy = falsy = deprecateInternalPropType(falsy);
    exports.history = history = deprecateInternalPropType(history);
    exports.component = component = deprecateInternalPropType(component);
    exports.components = components = deprecateInternalPropType(components);
    exports.route = route = deprecateInternalPropType(route);
    exports.routes = routes = deprecateInternalPropType(routes);

    exports.location = location = deprecateRenamedPropType(location, 'location');
    exports.router = router = deprecateRenamedPropType(router, 'router');
  })();
}

var defaultExport = {
  falsy: falsy,
  history: history,
  location: location,
  component: component,
  components: components,
  route: route,
  // For some reason, routes was never here.
  router: router
};

if ("build" !== 'production') {
  defaultExport = (0, _deprecateObjectProperties2.default)(defaultExport, 'The default export from `react-router/lib/PropTypes` is deprecated. Please use the named exports instead.');
}

exports.default = defaultExport;
},{"./InternalPropTypes":40,"./deprecateObjectProperties":60,"./routerWarning":69,"react":231}],45:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _RouteUtils = require('./RouteUtils');

var _PatternUtils = require('./PatternUtils');

var _InternalPropTypes = require('./InternalPropTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _React$PropTypes = _react2.default.PropTypes;
var string = _React$PropTypes.string;
var object = _React$PropTypes.object;

/**
 * A <Redirect> is used to declare another URL path a client should
 * be sent to when they request a given URL.
 *
 * Redirects are placed alongside routes in the route configuration
 * and are traversed in the same manner.
 */

var Redirect = _react2.default.createClass({
  displayName: 'Redirect',


  statics: {
    createRouteFromReactElement: function createRouteFromReactElement(element) {
      var route = (0, _RouteUtils.createRouteFromReactElement)(element);

      if (route.from) route.path = route.from;

      route.onEnter = function (nextState, replace) {
        var location = nextState.location;
        var params = nextState.params;


        var pathname = void 0;
        if (route.to.charAt(0) === '/') {
          pathname = (0, _PatternUtils.formatPattern)(route.to, params);
        } else if (!route.to) {
          pathname = location.pathname;
        } else {
          var routeIndex = nextState.routes.indexOf(route);
          var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);
          var pattern = parentPattern.replace(/\/*$/, '/') + route.to;
          pathname = (0, _PatternUtils.formatPattern)(pattern, params);
        }

        replace({
          pathname: pathname,
          query: route.query || location.query,
          state: route.state || location.state
        });
      };

      return route;
    },
    getRoutePattern: function getRoutePattern(routes, routeIndex) {
      var parentPattern = '';

      for (var i = routeIndex; i >= 0; i--) {
        var route = routes[i];
        var pattern = route.path || '';

        parentPattern = pattern.replace(/\/*$/, '/') + parentPattern;

        if (pattern.indexOf('/') === 0) break;
      }

      return '/' + parentPattern;
    }
  },

  propTypes: {
    path: string,
    from: string, // Alias for path
    to: string.isRequired,
    query: object,
    state: object,
    onEnter: _InternalPropTypes.falsy,
    children: _InternalPropTypes.falsy
  },

  /* istanbul ignore next: sanity check */
  render: function render() {
    !false ? "build" !== 'production' ? (0, _invariant2.default)(false, '<Redirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
  }
});

exports.default = Redirect;
module.exports = exports['default'];
},{"./InternalPropTypes":40,"./PatternUtils":43,"./RouteUtils":48,"invariant":31,"react":231}],46:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _RouteUtils = require('./RouteUtils');

var _InternalPropTypes = require('./InternalPropTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _React$PropTypes = _react2.default.PropTypes;
var string = _React$PropTypes.string;
var func = _React$PropTypes.func;

/**
 * A <Route> is used to declare which components are rendered to the
 * page when the URL matches a given pattern.
 *
 * Routes are arranged in a nested tree structure. When a new URL is
 * requested, the tree is searched depth-first to find a route whose
 * path matches the URL.  When one is found, all routes in the tree
 * that lead to it are considered "active" and their components are
 * rendered into the DOM, nested in the same order as in the tree.
 */

var Route = _react2.default.createClass({
  displayName: 'Route',


  statics: {
    createRouteFromReactElement: _RouteUtils.createRouteFromReactElement
  },

  propTypes: {
    path: string,
    component: _InternalPropTypes.component,
    components: _InternalPropTypes.components,
    getComponent: func,
    getComponents: func
  },

  /* istanbul ignore next: sanity check */
  render: function render() {
    !false ? "build" !== 'production' ? (0, _invariant2.default)(false, '<Route> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
  }
});

exports.default = Route;
module.exports = exports['default'];
},{"./InternalPropTypes":40,"./RouteUtils":48,"invariant":31,"react":231}],47:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var object = _react2.default.PropTypes.object;

/**
 * The RouteContext mixin provides a convenient way for route
 * components to set the route in context. This is needed for
 * routes that render elements that want to use the Lifecycle
 * mixin to prevent transitions.
 */

var RouteContext = {

  propTypes: {
    route: object.isRequired
  },

  childContextTypes: {
    route: object.isRequired
  },

  getChildContext: function getChildContext() {
    return {
      route: this.props.route
    };
  },
  componentWillMount: function componentWillMount() {
    "build" !== 'production' ? (0, _routerWarning2.default)(false, 'The `RouteContext` mixin is deprecated. You can provide `this.props.route` on context with your own `contextTypes`. http://tiny.cc/router-routecontextmixin') : void 0;
  }
};

exports.default = RouteContext;
module.exports = exports['default'];
},{"./routerWarning":69,"react":231}],48:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.isReactChildren = isReactChildren;
exports.createRouteFromReactElement = createRouteFromReactElement;
exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
exports.createRoutes = createRoutes;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isValidChild(object) {
  return object == null || _react2.default.isValidElement(object);
}

function isReactChildren(object) {
  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
}

function createRoute(defaultProps, props) {
  return _extends({}, defaultProps, props);
}

function createRouteFromReactElement(element) {
  var type = element.type;
  var route = createRoute(type.defaultProps, element.props);

  if (route.children) {
    var childRoutes = createRoutesFromReactChildren(route.children, route);

    if (childRoutes.length) route.childRoutes = childRoutes;

    delete route.children;
  }

  return route;
}

/**
 * Creates and returns a routes object from the given ReactChildren. JSX
 * provides a convenient way to visualize how routes in the hierarchy are
 * nested.
 *
 *   import { Route, createRoutesFromReactChildren } from 'react-router'
 *
 *   const routes = createRoutesFromReactChildren(
 *     <Route component={App}>
 *       <Route path="home" component={Dashboard}/>
 *       <Route path="news" component={NewsFeed}/>
 *     </Route>
 *   )
 *
 * Note: This method is automatically used when you provide <Route> children
 * to a <Router> component.
 */
function createRoutesFromReactChildren(children, parentRoute) {
  var routes = [];

  _react2.default.Children.forEach(children, function (element) {
    if (_react2.default.isValidElement(element)) {
      // Component classes may have a static create* method.
      if (element.type.createRouteFromReactElement) {
        var route = element.type.createRouteFromReactElement(element, parentRoute);

        if (route) routes.push(route);
      } else {
        routes.push(createRouteFromReactElement(element));
      }
    }
  });

  return routes;
}

/**
 * Creates and returns an array of routes from the given object which
 * may be a JSX route, a plain object route, or an array of either.
 */
function createRoutes(routes) {
  if (isReactChildren(routes)) {
    routes = createRoutesFromReactChildren(routes);
  } else if (routes && !Array.isArray(routes)) {
    routes = [routes];
  }

  return routes;
}
},{"react":231}],49:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createHashHistory = require('history/lib/createHashHistory');

var _createHashHistory2 = _interopRequireDefault(_createHashHistory);

var _useQueries = require('history/lib/useQueries');

var _useQueries2 = _interopRequireDefault(_useQueries);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createTransitionManager = require('./createTransitionManager');

var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

var _InternalPropTypes = require('./InternalPropTypes');

var _RouterContext = require('./RouterContext');

var _RouterContext2 = _interopRequireDefault(_RouterContext);

var _RouteUtils = require('./RouteUtils');

var _RouterUtils = require('./RouterUtils');

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function isDeprecatedHistory(history) {
  return !history || !history.__v2_compatible__;
}

/* istanbul ignore next: sanity check */
function isUnsupportedHistory(history) {
  // v3 histories expose getCurrentLocation, but aren't currently supported.
  return history && history.getCurrentLocation;
}

var _React$PropTypes = _react2.default.PropTypes;
var func = _React$PropTypes.func;
var object = _React$PropTypes.object;

/**
 * A <Router> is a high-level API for automatically setting up
 * a router that renders a <RouterContext> with all the props
 * it needs each time the URL changes.
 */

var Router = _react2.default.createClass({
  displayName: 'Router',


  propTypes: {
    history: object,
    children: _InternalPropTypes.routes,
    routes: _InternalPropTypes.routes, // alias for children
    render: func,
    createElement: func,
    onError: func,
    onUpdate: func,

    // PRIVATE: For client-side rehydration of server match.
    matchContext: object
  },

  getDefaultProps: function getDefaultProps() {
    return {
      render: function render(props) {
        return _react2.default.createElement(_RouterContext2.default, props);
      }
    };
  },
  getInitialState: function getInitialState() {
    return {
      location: null,
      routes: null,
      params: null,
      components: null
    };
  },
  handleError: function handleError(error) {
    if (this.props.onError) {
      this.props.onError.call(this, error);
    } else {
      // Throw errors by default so we don't silently swallow them!
      throw error; // This error probably occurred in getChildRoutes or getComponents.
    }
  },
  componentWillMount: function componentWillMount() {
    var _this = this;

    var _props = this.props;
    var parseQueryString = _props.parseQueryString;
    var stringifyQuery = _props.stringifyQuery;

    "build" !== 'production' ? (0, _routerWarning2.default)(!(parseQueryString || stringifyQuery), '`parseQueryString` and `stringifyQuery` are deprecated. Please create a custom history. http://tiny.cc/router-customquerystring') : void 0;

    var _createRouterObjects = this.createRouterObjects();

    var history = _createRouterObjects.history;
    var transitionManager = _createRouterObjects.transitionManager;
    var router = _createRouterObjects.router;


    this._unlisten = transitionManager.listen(function (error, state) {
      if (error) {
        _this.handleError(error);
      } else {
        _this.setState(state, _this.props.onUpdate);
      }
    });

    this.history = history;
    this.router = router;
  },
  createRouterObjects: function createRouterObjects() {
    var matchContext = this.props.matchContext;

    if (matchContext) {
      return matchContext;
    }

    var history = this.props.history;
    var _props2 = this.props;
    var routes = _props2.routes;
    var children = _props2.children;


    !!isUnsupportedHistory(history) ? "build" !== 'production' ? (0, _invariant2.default)(false, 'You have provided a history object created with history v3.x. ' + 'This version of React Router is not compatible with v3 history ' + 'objects. Please use history v2.x instead.') : (0, _invariant2.default)(false) : void 0;

    if (isDeprecatedHistory(history)) {
      history = this.wrapDeprecatedHistory(history);
    }

    var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes || children));
    var router = (0, _RouterUtils.createRouterObject)(history, transitionManager);
    var routingHistory = (0, _RouterUtils.createRoutingHistory)(history, transitionManager);

    return { history: routingHistory, transitionManager: transitionManager, router: router };
  },
  wrapDeprecatedHistory: function wrapDeprecatedHistory(history) {
    var _props3 = this.props;
    var parseQueryString = _props3.parseQueryString;
    var stringifyQuery = _props3.stringifyQuery;


    var createHistory = void 0;
    if (history) {
      "build" !== 'production' ? (0, _routerWarning2.default)(false, 'It appears you have provided a deprecated history object to `<Router/>`, please use a history provided by ' + 'React Router with `import { browserHistory } from \'react-router\'` or `import { hashHistory } from \'react-router\'`. ' + 'If you are using a custom history please create it with `useRouterHistory`, see http://tiny.cc/router-usinghistory for details.') : void 0;
      createHistory = function createHistory() {
        return history;
      };
    } else {
      "build" !== 'production' ? (0, _routerWarning2.default)(false, '`Router` no longer defaults the history prop to hash history. Please use the `hashHistory` singleton instead. http://tiny.cc/router-defaulthistory') : void 0;
      createHistory = _createHashHistory2.default;
    }

    return (0, _useQueries2.default)(createHistory)({ parseQueryString: parseQueryString, stringifyQuery: stringifyQuery });
  },


  /* istanbul ignore next: sanity check */
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    "build" !== 'production' ? (0, _routerWarning2.default)(nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : void 0;

    "build" !== 'production' ? (0, _routerWarning2.default)((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : void 0;
  },
  componentWillUnmount: function componentWillUnmount() {
    if (this._unlisten) this._unlisten();
  },
  render: function render() {
    var _state = this.state;
    var location = _state.location;
    var routes = _state.routes;
    var params = _state.params;
    var components = _state.components;
    var _props4 = this.props;
    var createElement = _props4.createElement;
    var render = _props4.render;

    var props = _objectWithoutProperties(_props4, ['createElement', 'render']);

    if (location == null) return null; // Async match

    // Only forward non-Router-specific props to routing context, as those are
    // the only ones that might be custom routing context props.
    Object.keys(Router.propTypes).forEach(function (propType) {
      return delete props[propType];
    });

    return render(_extends({}, props, {
      history: this.history,
      router: this.router,
      location: location,
      routes: routes,
      params: params,
      components: components,
      createElement: createElement
    }));
  }
});

exports.default = Router;
module.exports = exports['default'];
},{"./InternalPropTypes":40,"./RouteUtils":48,"./RouterContext":50,"./RouterUtils":51,"./createTransitionManager":59,"./routerWarning":69,"history/lib/createHashHistory":81,"history/lib/useQueries":88,"invariant":31,"react":231}],50:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _deprecateObjectProperties = require('./deprecateObjectProperties');

var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);

var _getRouteParams = require('./getRouteParams');

var _getRouteParams2 = _interopRequireDefault(_getRouteParams);

var _RouteUtils = require('./RouteUtils');

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _React$PropTypes = _react2.default.PropTypes;
var array = _React$PropTypes.array;
var func = _React$PropTypes.func;
var object = _React$PropTypes.object;

/**
 * A <RouterContext> renders the component tree for a given router state
 * and sets the history object and the current location in context.
 */

var RouterContext = _react2.default.createClass({
  displayName: 'RouterContext',


  propTypes: {
    history: object,
    router: object.isRequired,
    location: object.isRequired,
    routes: array.isRequired,
    params: object.isRequired,
    components: array.isRequired,
    createElement: func.isRequired
  },

  getDefaultProps: function getDefaultProps() {
    return {
      createElement: _react2.default.createElement
    };
  },


  childContextTypes: {
    history: object,
    location: object.isRequired,
    router: object.isRequired
  },

  getChildContext: function getChildContext() {
    var _props = this.props;
    var router = _props.router;
    var history = _props.history;
    var location = _props.location;

    if (!router) {
      "build" !== 'production' ? (0, _routerWarning2.default)(false, '`<RouterContext>` expects a `router` rather than a `history`') : void 0;

      router = _extends({}, history, {
        setRouteLeaveHook: history.listenBeforeLeavingRoute
      });
      delete router.listenBeforeLeavingRoute;
    }

    if ("build" !== 'production') {
      location = (0, _deprecateObjectProperties2.default)(location, '`context.location` is deprecated, please use a route component\'s `props.location` instead. http://tiny.cc/router-accessinglocation');
    }

    return { history: history, location: location, router: router };
  },
  createElement: function createElement(component, props) {
    return component == null ? null : this.props.createElement(component, props);
  },
  render: function render() {
    var _this = this;

    var _props2 = this.props;
    var history = _props2.history;
    var location = _props2.location;
    var routes = _props2.routes;
    var params = _props2.params;
    var components = _props2.components;

    var element = null;

    if (components) {
      element = components.reduceRight(function (element, components, index) {
        if (components == null) return element; // Don't create new children; use the grandchildren.

        var route = routes[index];
        var routeParams = (0, _getRouteParams2.default)(route, params);
        var props = {
          history: history,
          location: location,
          params: params,
          route: route,
          routeParams: routeParams,
          routes: routes
        };

        if ((0, _RouteUtils.isReactChildren)(element)) {
          props.children = element;
        } else if (element) {
          for (var prop in element) {
            if (Object.prototype.hasOwnProperty.call(element, prop)) props[prop] = element[prop];
          }
        }

        if ((typeof components === 'undefined' ? 'undefined' : _typeof(components)) === 'object') {
          var elements = {};

          for (var key in components) {
            if (Object.prototype.hasOwnProperty.call(components, key)) {
              // Pass through the key as a prop to createElement to allow
              // custom createElement functions to know which named component
              // they're rendering, for e.g. matching up to fetched data.
              elements[key] = _this.createElement(components[key], _extends({
                key: key }, props));
            }
          }

          return elements;
        }

        return _this.createElement(components, props);
      }, element);
    }

    !(element === null || element === false || _react2.default.isValidElement(element)) ? "build" !== 'production' ? (0, _invariant2.default)(false, 'The root route must render a single element') : (0, _invariant2.default)(false) : void 0;

    return element;
  }
});

exports.default = RouterContext;
module.exports = exports['default'];
},{"./RouteUtils":48,"./deprecateObjectProperties":60,"./getRouteParams":62,"./routerWarning":69,"invariant":31,"react":231}],51:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.createRouterObject = createRouterObject;
exports.createRoutingHistory = createRoutingHistory;

var _deprecateObjectProperties = require('./deprecateObjectProperties');

var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createRouterObject(history, transitionManager) {
  return _extends({}, history, {
    setRouteLeaveHook: transitionManager.listenBeforeLeavingRoute,
    isActive: transitionManager.isActive
  });
}

// deprecated
function createRoutingHistory(history, transitionManager) {
  history = _extends({}, history, transitionManager);

  if ("build" !== 'production') {
    history = (0, _deprecateObjectProperties2.default)(history, '`props.history` and `context.history` are deprecated. Please use `context.router`. http://tiny.cc/router-contextchanges');
  }

  return history;
}
},{"./deprecateObjectProperties":60}],52:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _RouterContext = require('./RouterContext');

var _RouterContext2 = _interopRequireDefault(_RouterContext);

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RoutingContext = _react2.default.createClass({
  displayName: 'RoutingContext',
  componentWillMount: function componentWillMount() {
    "build" !== 'production' ? (0, _routerWarning2.default)(false, '`RoutingContext` has been renamed to `RouterContext`. Please use `import { RouterContext } from \'react-router\'`. http://tiny.cc/router-routercontext') : void 0;
  },
  render: function render() {
    return _react2.default.createElement(_RouterContext2.default, this.props);
  }
});

exports.default = RoutingContext;
module.exports = exports['default'];
},{"./RouterContext":50,"./routerWarning":69,"react":231}],53:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.runEnterHooks = runEnterHooks;
exports.runChangeHooks = runChangeHooks;
exports.runLeaveHooks = runLeaveHooks;

var _AsyncUtils = require('./AsyncUtils');

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createTransitionHook(hook, route, asyncArity) {
  return function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    hook.apply(route, args);

    if (hook.length < asyncArity) {
      var callback = args[args.length - 1];
      // Assume hook executes synchronously and
      // automatically call the callback.
      callback();
    }
  };
}

function getEnterHooks(routes) {
  return routes.reduce(function (hooks, route) {
    if (route.onEnter) hooks.push(createTransitionHook(route.onEnter, route, 3));

    return hooks;
  }, []);
}

function getChangeHooks(routes) {
  return routes.reduce(function (hooks, route) {
    if (route.onChange) hooks.push(createTransitionHook(route.onChange, route, 4));
    return hooks;
  }, []);
}

function runTransitionHooks(length, iter, callback) {
  if (!length) {
    callback();
    return;
  }

  var redirectInfo = void 0;
  function replace(location, deprecatedPathname, deprecatedQuery) {
    if (deprecatedPathname) {
      "build" !== 'production' ? (0, _routerWarning2.default)(false, '`replaceState(state, pathname, query) is deprecated; use `replace(location)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : void 0;
      redirectInfo = {
        pathname: deprecatedPathname,
        query: deprecatedQuery,
        state: location
      };

      return;
    }

    redirectInfo = location;
  }

  (0, _AsyncUtils.loopAsync)(length, function (index, next, done) {
    iter(index, replace, function (error) {
      if (error || redirectInfo) {
        done(error, redirectInfo); // No need to continue.
      } else {
          next();
        }
    });
  }, callback);
}

/**
 * Runs all onEnter hooks in the given array of routes in order
 * with onEnter(nextState, replace, callback) and calls
 * callback(error, redirectInfo) when finished. The first hook
 * to use replace short-circuits the loop.
 *
 * If a hook needs to run asynchronously, it may use the callback
 * function. However, doing so will cause the transition to pause,
 * which could lead to a non-responsive UI if the hook is slow.
 */
function runEnterHooks(routes, nextState, callback) {
  var hooks = getEnterHooks(routes);
  return runTransitionHooks(hooks.length, function (index, replace, next) {
    hooks[index](nextState, replace, next);
  }, callback);
}

/**
 * Runs all onChange hooks in the given array of routes in order
 * with onChange(prevState, nextState, replace, callback) and calls
 * callback(error, redirectInfo) when finished. The first hook
 * to use replace short-circuits the loop.
 *
 * If a hook needs to run asynchronously, it may use the callback
 * function. However, doing so will cause the transition to pause,
 * which could lead to a non-responsive UI if the hook is slow.
 */
function runChangeHooks(routes, state, nextState, callback) {
  var hooks = getChangeHooks(routes);
  return runTransitionHooks(hooks.length, function (index, replace, next) {
    hooks[index](state, nextState, replace, next);
  }, callback);
}

/**
 * Runs all onLeave hooks in the given array of routes in order.
 */
function runLeaveHooks(routes) {
  for (var i = 0, len = routes.length; i < len; ++i) {
    if (routes[i].onLeave) routes[i].onLeave.call(routes[i]);
  }
}
},{"./AsyncUtils":35,"./routerWarning":69}],54:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _RouterContext = require('./RouterContext');

var _RouterContext2 = _interopRequireDefault(_RouterContext);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  var withContext = middlewares.map(function (m) {
    return m.renderRouterContext;
  }).filter(function (f) {
    return f;
  });
  var withComponent = middlewares.map(function (m) {
    return m.renderRouteComponent;
  }).filter(function (f) {
    return f;
  });
  var makeCreateElement = function makeCreateElement() {
    var baseCreateElement = arguments.length <= 0 || arguments[0] === undefined ? _react.createElement : arguments[0];
    return function (Component, props) {
      return withComponent.reduceRight(function (previous, renderRouteComponent) {
        return renderRouteComponent(previous, props);
      }, baseCreateElement(Component, props));
    };
  };

  return function (renderProps) {
    return withContext.reduceRight(function (previous, renderRouterContext) {
      return renderRouterContext(previous, renderProps);
    }, _react2.default.createElement(_RouterContext2.default, _extends({}, renderProps, {
      createElement: makeCreateElement(renderProps.createElement)
    })));
  };
};

module.exports = exports['default'];
},{"./RouterContext":50,"react":231}],55:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _createBrowserHistory = require('history/lib/createBrowserHistory');

var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);

var _createRouterHistory = require('./createRouterHistory');

var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _createRouterHistory2.default)(_createBrowserHistory2.default);
module.exports = exports['default'];
},{"./createRouterHistory":58,"history/lib/createBrowserHistory":79}],56:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _PatternUtils = require('./PatternUtils');

function routeParamsChanged(route, prevState, nextState) {
  if (!route.path) return false;

  var paramNames = (0, _PatternUtils.getParamNames)(route.path);

  return paramNames.some(function (paramName) {
    return prevState.params[paramName] !== nextState.params[paramName];
  });
}

/**
 * Returns an object of { leaveRoutes, changeRoutes, enterRoutes } determined by
 * the change from prevState to nextState. We leave routes if either
 * 1) they are not in the next state or 2) they are in the next state
 * but their params have changed (i.e. /users/123 => /users/456).
 *
 * leaveRoutes are ordered starting at the leaf route of the tree
 * we're leaving up to the common parent route. enterRoutes are ordered
 * from the top of the tree we're entering down to the leaf route.
 *
 * changeRoutes are any routes that didn't leave or enter during
 * the transition.
 */
function computeChangedRoutes(prevState, nextState) {
  var prevRoutes = prevState && prevState.routes;
  var nextRoutes = nextState.routes;

  var leaveRoutes = void 0,
      changeRoutes = void 0,
      enterRoutes = void 0;
  if (prevRoutes) {
    (function () {
      var parentIsLeaving = false;
      leaveRoutes = prevRoutes.filter(function (route) {
        if (parentIsLeaving) {
          return true;
        } else {
          var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);
          if (isLeaving) parentIsLeaving = true;
          return isLeaving;
        }
      });

      // onLeave hooks start at the leaf route.
      leaveRoutes.reverse();

      enterRoutes = [];
      changeRoutes = [];

      nextRoutes.forEach(function (route) {
        var isNew = prevRoutes.indexOf(route) === -1;
        var paramsChanged = leaveRoutes.indexOf(route) !== -1;

        if (isNew || paramsChanged) enterRoutes.push(route);else changeRoutes.push(route);
      });
    })();
  } else {
    leaveRoutes = [];
    changeRoutes = [];
    enterRoutes = nextRoutes;
  }

  return {
    leaveRoutes: leaveRoutes,
    changeRoutes: changeRoutes,
    enterRoutes: enterRoutes
  };
}

exports.default = computeChangedRoutes;
module.exports = exports['default'];
},{"./PatternUtils":43}],57:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.default = createMemoryHistory;

var _useQueries = require('history/lib/useQueries');

var _useQueries2 = _interopRequireDefault(_useQueries);

var _useBasename = require('history/lib/useBasename');

var _useBasename2 = _interopRequireDefault(_useBasename);

var _createMemoryHistory = require('history/lib/createMemoryHistory');

var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createMemoryHistory(options) {
  // signatures and type checking differ between `useRoutes` and
  // `createMemoryHistory`, have to create `memoryHistory` first because
  // `useQueries` doesn't understand the signature
  var memoryHistory = (0, _createMemoryHistory2.default)(options);
  var createHistory = function createHistory() {
    return memoryHistory;
  };
  var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
  history.__v2_compatible__ = true;
  return history;
}
module.exports = exports['default'];
},{"history/lib/createMemoryHistory":84,"history/lib/useBasename":87,"history/lib/useQueries":88}],58:[function(require,module,exports){
'use strict';

exports.__esModule = true;

exports.default = function (createHistory) {
  var history = void 0;
  if (canUseDOM) history = (0, _useRouterHistory2.default)(createHistory)();
  return history;
};

var _useRouterHistory = require('./useRouterHistory');

var _useRouterHistory2 = _interopRequireDefault(_useRouterHistory);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

module.exports = exports['default'];
},{"./useRouterHistory":70}],59:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = createTransitionManager;

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

var _Actions = require('history/lib/Actions');

var _computeChangedRoutes2 = require('./computeChangedRoutes');

var _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);

var _TransitionUtils = require('./TransitionUtils');

var _isActive2 = require('./isActive');

var _isActive3 = _interopRequireDefault(_isActive2);

var _getComponents = require('./getComponents');

var _getComponents2 = _interopRequireDefault(_getComponents);

var _matchRoutes = require('./matchRoutes');

var _matchRoutes2 = _interopRequireDefault(_matchRoutes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function hasAnyProperties(object) {
  for (var p in object) {
    if (Object.prototype.hasOwnProperty.call(object, p)) return true;
  }return false;
}

function createTransitionManager(history, routes) {
  var state = {};

  // Signature should be (location, indexOnly), but needs to support (path,
  // query, indexOnly)
  function isActive(location) {
    var indexOnlyOrDeprecatedQuery = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
    var deprecatedIndexOnly = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

    var indexOnly = void 0;
    if (indexOnlyOrDeprecatedQuery && indexOnlyOrDeprecatedQuery !== true || deprecatedIndexOnly !== null) {
      "build" !== 'production' ? (0, _routerWarning2.default)(false, '`isActive(pathname, query, indexOnly) is deprecated; use `isActive(location, indexOnly)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : void 0;
      location = { pathname: location, query: indexOnlyOrDeprecatedQuery };
      indexOnly = deprecatedIndexOnly || false;
    } else {
      location = history.createLocation(location);
      indexOnly = indexOnlyOrDeprecatedQuery;
    }

    return (0, _isActive3.default)(location, indexOnly, state.location, state.routes, state.params);
  }

  function createLocationFromRedirectInfo(location) {
    return history.createLocation(location, _Actions.REPLACE);
  }

  var partialNextState = void 0;

  function match(location, callback) {
    if (partialNextState && partialNextState.location === location) {
      // Continue from where we left off.
      finishMatch(partialNextState, callback);
    } else {
      (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
        if (error) {
          callback(error);
        } else if (nextState) {
          finishMatch(_extends({}, nextState, { location: location }), callback);
        } else {
          callback();
        }
      });
    }
  }

  function finishMatch(nextState, callback) {
    var _computeChangedRoutes = (0, _computeChangedRoutes3.default)(state, nextState);

    var leaveRoutes = _computeChangedRoutes.leaveRoutes;
    var changeRoutes = _computeChangedRoutes.changeRoutes;
    var enterRoutes = _computeChangedRoutes.enterRoutes;


    (0, _TransitionUtils.runLeaveHooks)(leaveRoutes);

    // Tear down confirmation hooks for left routes
    leaveRoutes.filter(function (route) {
      return enterRoutes.indexOf(route) === -1;
    }).forEach(removeListenBeforeHooksForRoute);

    // change and enter hooks are run in series
    (0, _TransitionUtils.runChangeHooks)(changeRoutes, state, nextState, function (error, redirectInfo) {
      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);

      (0, _TransitionUtils.runEnterHooks)(enterRoutes, nextState, finishEnterHooks);
    });

    function finishEnterHooks(error, redirectInfo) {
      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);

      // TODO: Fetch components after state is updated.
      (0, _getComponents2.default)(nextState, function (error, components) {
        if (error) {
          callback(error);
        } else {
          // TODO: Make match a pure function and have some other API
          // for "match and update state".
          callback(null, null, state = _extends({}, nextState, { components: components }));
        }
      });
    }

    function handleErrorOrRedirect(error, redirectInfo) {
      if (error) callback(error);else callback(null, createLocationFromRedirectInfo(redirectInfo));
    }
  }

  var RouteGuid = 1;

  function getRouteID(route) {
    var create = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

    return route.__id__ || create && (route.__id__ = RouteGuid++);
  }

  var RouteHooks = Object.create(null);

  function getRouteHooksForRoutes(routes) {
    return routes.reduce(function (hooks, route) {
      hooks.push.apply(hooks, RouteHooks[getRouteID(route)]);
      return hooks;
    }, []);
  }

  function transitionHook(location, callback) {
    (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
      if (nextState == null) {
        // TODO: We didn't actually match anything, but hang
        // onto error/nextState so we don't have to matchRoutes
        // again in the listen callback.
        callback();
        return;
      }

      // Cache some state here so we don't have to
      // matchRoutes() again in the listen callback.
      partialNextState = _extends({}, nextState, { location: location });

      var hooks = getRouteHooksForRoutes((0, _computeChangedRoutes3.default)(state, partialNextState).leaveRoutes);

      var result = void 0;
      for (var i = 0, len = hooks.length; result == null && i < len; ++i) {
        // Passing the location arg here indicates to
        // the user that this is a transition hook.
        result = hooks[i](location);
      }

      callback(result);
    });
  }

  /* istanbul ignore next: untestable with Karma */
  function beforeUnloadHook() {
    // Synchronously check to see if any route hooks want
    // to prevent the current window/tab from closing.
    if (state.routes) {
      var hooks = getRouteHooksForRoutes(state.routes);

      var message = void 0;
      for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {
        // Passing no args indicates to the user that this is a
        // beforeunload hook. We don't know the next location.
        message = hooks[i]();
      }

      return message;
    }
  }

  var unlistenBefore = void 0,
      unlistenBeforeUnload = void 0;

  function removeListenBeforeHooksForRoute(route) {
    var routeID = getRouteID(route, false);
    if (!routeID) {
      return;
    }

    delete RouteHooks[routeID];

    if (!hasAnyProperties(RouteHooks)) {
      // teardown transition & beforeunload hooks
      if (unlistenBefore) {
        unlistenBefore();
        unlistenBefore = null;
      }

      if (unlistenBeforeUnload) {
        unlistenBeforeUnload();
        unlistenBeforeUnload = null;
      }
    }
  }

  /**
   * Registers the given hook function to run before leaving the given route.
   *
   * During a normal transition, the hook function receives the next location
   * as its only argument and can return either a prompt message (string) to show the user,
   * to make sure they want to leave the page; or `false`, to prevent the transition.
   * Any other return value will have no effect.
   *
   * During the beforeunload event (in browsers) the hook receives no arguments.
   * In this case it must return a prompt message to prevent the transition.
   *
   * Returns a function that may be used to unbind the listener.
   */
  function listenBeforeLeavingRoute(route, hook) {
    // TODO: Warn if they register for a route that isn't currently
    // active. They're probably doing something wrong, like re-creating
    // route objects on every location change.
    var routeID = getRouteID(route);
    var hooks = RouteHooks[routeID];

    if (!hooks) {
      var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);

      RouteHooks[routeID] = [hook];

      if (thereWereNoRouteHooks) {
        // setup transition & beforeunload hooks
        unlistenBefore = history.listenBefore(transitionHook);

        if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);
      }
    } else {
      if (hooks.indexOf(hook) === -1) {
        "build" !== 'production' ? (0, _routerWarning2.default)(false, 'adding multiple leave hooks for the same route is deprecated; manage multiple confirmations in your own code instead') : void 0;

        hooks.push(hook);
      }
    }

    return function () {
      var hooks = RouteHooks[routeID];

      if (hooks) {
        var newHooks = hooks.filter(function (item) {
          return item !== hook;
        });

        if (newHooks.length === 0) {
          removeListenBeforeHooksForRoute(route);
        } else {
          RouteHooks[routeID] = newHooks;
        }
      }
    };
  }

  /**
   * This is the API for stateful environments. As the location
   * changes, we update state and call the listener. We can also
   * gracefully handle errors and redirects.
   */
  function listen(listener) {
    // TODO: Only use a single history listener. Otherwise we'll
    // end up with multiple concurrent calls to match.
    return history.listen(function (location) {
      if (state.location === location) {
        listener(null, state);
      } else {
        match(location, function (error, redirectLocation, nextState) {
          if (error) {
            listener(error);
          } else if (redirectLocation) {
            history.transitionTo(redirectLocation);
          } else if (nextState) {
            listener(null, nextState);
          } else {
            "build" !== 'production' ? (0, _routerWarning2.default)(false, 'Location "%s" did not match any routes', location.pathname + location.search + location.hash) : void 0;
          }
        });
      }
    });
  }

  return {
    isActive: isActive,
    match: match,
    listenBeforeLeavingRoute: listenBeforeLeavingRoute,
    listen: listen
  };
}

//export default useRoutes
module.exports = exports['default'];
},{"./TransitionUtils":53,"./computeChangedRoutes":56,"./getComponents":61,"./isActive":65,"./matchRoutes":68,"./routerWarning":69,"history/lib/Actions":73}],60:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.canUseMembrane = undefined;

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var canUseMembrane = exports.canUseMembrane = false;

// No-op by default.
var deprecateObjectProperties = function deprecateObjectProperties(object) {
  return object;
};

if ("build" !== 'production') {
  try {
    if (Object.defineProperty({}, 'x', {
      get: function get() {
        return true;
      }
    }).x) {
      exports.canUseMembrane = canUseMembrane = true;
    }
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */

  if (canUseMembrane) {
    deprecateObjectProperties = function deprecateObjectProperties(object, message) {
      // Wrap the deprecated object in a membrane to warn on property access.
      var membrane = {};

      var _loop = function _loop(prop) {
        if (!Object.prototype.hasOwnProperty.call(object, prop)) {
          return 'continue';
        }

        if (typeof object[prop] === 'function') {
          // Can't use fat arrow here because of use of arguments below.
          membrane[prop] = function () {
            "build" !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
            return object[prop].apply(object, arguments);
          };
          return 'continue';
        }

        // These properties are non-enumerable to prevent React dev tools from
        // seeing them and causing spurious warnings when accessing them. In
        // principle this could be done with a proxy, but support for the
        // ownKeys trap on proxies is not universal, even among browsers that
        // otherwise support proxies.
        Object.defineProperty(membrane, prop, {
          get: function get() {
            "build" !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
            return object[prop];
          }
        });
      };

      for (var prop in object) {
        var _ret = _loop(prop);

        if (_ret === 'continue') continue;
      }

      return membrane;
    };
  }
}

exports.default = deprecateObjectProperties;
},{"./routerWarning":69}],61:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _AsyncUtils = require('./AsyncUtils');

var _makeStateWithLocation = require('./makeStateWithLocation');

var _makeStateWithLocation2 = _interopRequireDefault(_makeStateWithLocation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getComponentsForRoute(nextState, route, callback) {
  if (route.component || route.components) {
    callback(null, route.component || route.components);
    return;
  }

  var getComponent = route.getComponent || route.getComponents;
  if (!getComponent) {
    callback();
    return;
  }

  var location = nextState.location;

  var nextStateWithLocation = (0, _makeStateWithLocation2.default)(nextState, location);

  getComponent.call(route, nextStateWithLocation, callback);
}

/**
 * Asynchronously fetches all components needed for the given router
 * state and calls callback(error, components) when finished.
 *
 * Note: This operation may finish synchronously if no routes have an
 * asynchronous getComponents method.
 */
function getComponents(nextState, callback) {
  (0, _AsyncUtils.mapAsync)(nextState.routes, function (route, index, callback) {
    getComponentsForRoute(nextState, route, callback);
  }, callback);
}

exports.default = getComponents;
module.exports = exports['default'];
},{"./AsyncUtils":35,"./makeStateWithLocation":66}],62:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _PatternUtils = require('./PatternUtils');

/**
 * Extracts an object of params the given route cares about from
 * the given params object.
 */
function getRouteParams(route, params) {
  var routeParams = {};

  if (!route.path) return routeParams;

  (0, _PatternUtils.getParamNames)(route.path).forEach(function (p) {
    if (Object.prototype.hasOwnProperty.call(params, p)) {
      routeParams[p] = params[p];
    }
  });

  return routeParams;
}

exports.default = getRouteParams;
module.exports = exports['default'];
},{"./PatternUtils":43}],63:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _createHashHistory = require('history/lib/createHashHistory');

var _createHashHistory2 = _interopRequireDefault(_createHashHistory);

var _createRouterHistory = require('./createRouterHistory');

var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _createRouterHistory2.default)(_createHashHistory2.default);
module.exports = exports['default'];
},{"./createRouterHistory":58,"history/lib/createHashHistory":81}],64:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.createMemoryHistory = exports.hashHistory = exports.browserHistory = exports.applyRouterMiddleware = exports.formatPattern = exports.useRouterHistory = exports.match = exports.routerShape = exports.locationShape = exports.PropTypes = exports.RoutingContext = exports.RouterContext = exports.createRoutes = exports.useRoutes = exports.RouteContext = exports.Lifecycle = exports.History = exports.Route = exports.Redirect = exports.IndexRoute = exports.IndexRedirect = exports.withRouter = exports.IndexLink = exports.Link = exports.Router = undefined;

var _RouteUtils = require('./RouteUtils');

Object.defineProperty(exports, 'createRoutes', {
  enumerable: true,
  get: function get() {
    return _RouteUtils.createRoutes;
  }
});

var _PropTypes2 = require('./PropTypes');

Object.defineProperty(exports, 'locationShape', {
  enumerable: true,
  get: function get() {
    return _PropTypes2.locationShape;
  }
});
Object.defineProperty(exports, 'routerShape', {
  enumerable: true,
  get: function get() {
    return _PropTypes2.routerShape;
  }
});

var _PatternUtils = require('./PatternUtils');

Object.defineProperty(exports, 'formatPattern', {
  enumerable: true,
  get: function get() {
    return _PatternUtils.formatPattern;
  }
});

var _Router2 = require('./Router');

var _Router3 = _interopRequireDefault(_Router2);

var _Link2 = require('./Link');

var _Link3 = _interopRequireDefault(_Link2);

var _IndexLink2 = require('./IndexLink');

var _IndexLink3 = _interopRequireDefault(_IndexLink2);

var _withRouter2 = require('./withRouter');

var _withRouter3 = _interopRequireDefault(_withRouter2);

var _IndexRedirect2 = require('./IndexRedirect');

var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);

var _IndexRoute2 = require('./IndexRoute');

var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);

var _Redirect2 = require('./Redirect');

var _Redirect3 = _interopRequireDefault(_Redirect2);

var _Route2 = require('./Route');

var _Route3 = _interopRequireDefault(_Route2);

var _History2 = require('./History');

var _History3 = _interopRequireDefault(_History2);

var _Lifecycle2 = require('./Lifecycle');

var _Lifecycle3 = _interopRequireDefault(_Lifecycle2);

var _RouteContext2 = require('./RouteContext');

var _RouteContext3 = _interopRequireDefault(_RouteContext2);

var _useRoutes2 = require('./useRoutes');

var _useRoutes3 = _interopRequireDefault(_useRoutes2);

var _RouterContext2 = require('./RouterContext');

var _RouterContext3 = _interopRequireDefault(_RouterContext2);

var _RoutingContext2 = require('./RoutingContext');

var _RoutingContext3 = _interopRequireDefault(_RoutingContext2);

var _PropTypes3 = _interopRequireDefault(_PropTypes2);

var _match2 = require('./match');

var _match3 = _interopRequireDefault(_match2);

var _useRouterHistory2 = require('./useRouterHistory');

var _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);

var _applyRouterMiddleware2 = require('./applyRouterMiddleware');

var _applyRouterMiddleware3 = _interopRequireDefault(_applyRouterMiddleware2);

var _browserHistory2 = require('./browserHistory');

var _browserHistory3 = _interopRequireDefault(_browserHistory2);

var _hashHistory2 = require('./hashHistory');

var _hashHistory3 = _interopRequireDefault(_hashHistory2);

var _createMemoryHistory2 = require('./createMemoryHistory');

var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.Router = _Router3.default; /* components */

exports.Link = _Link3.default;
exports.IndexLink = _IndexLink3.default;
exports.withRouter = _withRouter3.default;

/* components (configuration) */

exports.IndexRedirect = _IndexRedirect3.default;
exports.IndexRoute = _IndexRoute3.default;
exports.Redirect = _Redirect3.default;
exports.Route = _Route3.default;

/* mixins */

exports.History = _History3.default;
exports.Lifecycle = _Lifecycle3.default;
exports.RouteContext = _RouteContext3.default;

/* utils */

exports.useRoutes = _useRoutes3.default;
exports.RouterContext = _RouterContext3.default;
exports.RoutingContext = _RoutingContext3.default;
exports.PropTypes = _PropTypes3.default;
exports.match = _match3.default;
exports.useRouterHistory = _useRouterHistory3.default;
exports.applyRouterMiddleware = _applyRouterMiddleware3.default;

/* histories */

exports.browserHistory = _browserHistory3.default;
exports.hashHistory = _hashHistory3.default;
exports.createMemoryHistory = _createMemoryHistory3.default;
},{"./History":36,"./IndexLink":37,"./IndexRedirect":38,"./IndexRoute":39,"./Lifecycle":41,"./Link":42,"./PatternUtils":43,"./PropTypes":44,"./Redirect":45,"./Route":46,"./RouteContext":47,"./RouteUtils":48,"./Router":49,"./RouterContext":50,"./RoutingContext":52,"./applyRouterMiddleware":54,"./browserHistory":55,"./createMemoryHistory":57,"./hashHistory":63,"./match":67,"./useRouterHistory":70,"./useRoutes":71,"./withRouter":72}],65:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

exports.default = isActive;

var _PatternUtils = require('./PatternUtils');

function deepEqual(a, b) {
  if (a == b) return true;

  if (a == null || b == null) return false;

  if (Array.isArray(a)) {
    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
      return deepEqual(item, b[index]);
    });
  }

  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object') {
    for (var p in a) {
      if (!Object.prototype.hasOwnProperty.call(a, p)) {
        continue;
      }

      if (a[p] === undefined) {
        if (b[p] !== undefined) {
          return false;
        }
      } else if (!Object.prototype.hasOwnProperty.call(b, p)) {
        return false;
      } else if (!deepEqual(a[p], b[p])) {
        return false;
      }
    }

    return true;
  }

  return String(a) === String(b);
}

/**
 * Returns true if the current pathname matches the supplied one, net of
 * leading and trailing slash normalization. This is sufficient for an
 * indexOnly route match.
 */
function pathIsActive(pathname, currentPathname) {
  // Normalize leading slash for consistency. Leading slash on pathname has
  // already been normalized in isActive. See caveat there.
  if (currentPathname.charAt(0) !== '/') {
    currentPathname = '/' + currentPathname;
  }

  // Normalize the end of both path names too. Maybe `/foo/` shouldn't show
  // `/foo` as active, but in this case, we would already have failed the
  // match.
  if (pathname.charAt(pathname.length - 1) !== '/') {
    pathname += '/';
  }
  if (currentPathname.charAt(currentPathname.length - 1) !== '/') {
    currentPathname += '/';
  }

  return currentPathname === pathname;
}

/**
 * Returns true if the given pathname matches the active routes and params.
 */
function routeIsActive(pathname, routes, params) {
  var remainingPathname = pathname,
      paramNames = [],
      paramValues = [];

  // for...of would work here but it's probably slower post-transpilation.
  for (var i = 0, len = routes.length; i < len; ++i) {
    var route = routes[i];
    var pattern = route.path || '';

    if (pattern.charAt(0) === '/') {
      remainingPathname = pathname;
      paramNames = [];
      paramValues = [];
    }

    if (remainingPathname !== null && pattern) {
      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
      if (matched) {
        remainingPathname = matched.remainingPathname;
        paramNames = [].concat(paramNames, matched.paramNames);
        paramValues = [].concat(paramValues, matched.paramValues);
      } else {
        remainingPathname = null;
      }

      if (remainingPathname === '') {
        // We have an exact match on the route. Just check that all the params
        // match.
        // FIXME: This doesn't work on repeated params.
        return paramNames.every(function (paramName, index) {
          return String(paramValues[index]) === String(params[paramName]);
        });
      }
    }
  }

  return false;
}

/**
 * Returns true if all key/value pairs in the given query are
 * currently active.
 */
function queryIsActive(query, activeQuery) {
  if (activeQuery == null) return query == null;

  if (query == null) return true;

  return deepEqual(query, activeQuery);
}

/**
 * Returns true if a <Link> to the given pathname/query combination is
 * currently active.
 */
function isActive(_ref, indexOnly, currentLocation, routes, params) {
  var pathname = _ref.pathname;
  var query = _ref.query;

  if (currentLocation == null) return false;

  // TODO: This is a bit ugly. It keeps around support for treating pathnames
  // without preceding slashes as absolute paths, but possibly also works
  // around the same quirks with basenames as in matchRoutes.
  if (pathname.charAt(0) !== '/') {
    pathname = '/' + pathname;
  }

  if (!pathIsActive(pathname, currentLocation.pathname)) {
    // The path check is necessary and sufficient for indexOnly, but otherwise
    // we still need to check the routes.
    if (indexOnly || !routeIsActive(pathname, routes, params)) {
      return false;
    }
  }

  return queryIsActive(query, currentLocation.query);
}
module.exports = exports['default'];
},{"./PatternUtils":43}],66:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = makeStateWithLocation;

var _deprecateObjectProperties = require('./deprecateObjectProperties');

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function makeStateWithLocation(state, location) {
  if ("build" !== 'production' && _deprecateObjectProperties.canUseMembrane) {
    var stateWithLocation = _extends({}, state);

    // I don't use deprecateObjectProperties here because I want to keep the
    // same code path between development and production, in that we just
    // assign extra properties to the copy of the state object in both cases.

    var _loop = function _loop(prop) {
      if (!Object.prototype.hasOwnProperty.call(location, prop)) {
        return 'continue';
      }

      Object.defineProperty(stateWithLocation, prop, {
        get: function get() {
          "build" !== 'production' ? (0, _routerWarning2.default)(false, 'Accessing location properties directly from the first argument to `getComponent`, `getComponents`, `getChildRoutes`, and `getIndexRoute` is deprecated. That argument is now the router state (`nextState` or `partialNextState`) rather than the location. To access the location, use `nextState.location` or `partialNextState.location`.') : void 0;
          return location[prop];
        }
      });
    };

    for (var prop in location) {
      var _ret = _loop(prop);

      if (_ret === 'continue') continue;
    }

    return stateWithLocation;
  }

  return _extends({}, state, location);
}
module.exports = exports['default'];
},{"./deprecateObjectProperties":60,"./routerWarning":69}],67:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _createMemoryHistory = require('./createMemoryHistory');

var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);

var _createTransitionManager = require('./createTransitionManager');

var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

var _RouteUtils = require('./RouteUtils');

var _RouterUtils = require('./RouterUtils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * A high-level API to be used for server-side rendering.
 *
 * This function matches a location to a set of routes and calls
 * callback(error, redirectLocation, renderProps) when finished.
 *
 * Note: You probably don't want to use this in a browser unless you're using
 * server-side rendering with async routes.
 */
function match(_ref, callback) {
  var history = _ref.history;
  var routes = _ref.routes;
  var location = _ref.location;

  var options = _objectWithoutProperties(_ref, ['history', 'routes', 'location']);

  !(history || location) ? "build" !== 'production' ? (0, _invariant2.default)(false, 'match needs a history or a location') : (0, _invariant2.default)(false) : void 0;

  history = history ? history : (0, _createMemoryHistory2.default)(options);
  var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes));

  var unlisten = void 0;

  if (location) {
    // Allow match({ location: '/the/path', ... })
    location = history.createLocation(location);
  } else {
    // Pick up the location from the history via synchronous history.listen
    // call if needed.
    unlisten = history.listen(function (historyLocation) {
      location = historyLocation;
    });
  }

  var router = (0, _RouterUtils.createRouterObject)(history, transitionManager);
  history = (0, _RouterUtils.createRoutingHistory)(history, transitionManager);

  transitionManager.match(location, function (error, redirectLocation, nextState) {
    callback(error, redirectLocation, nextState && _extends({}, nextState, {
      history: history,
      router: router,
      matchContext: { history: history, transitionManager: transitionManager, router: router }
    }));

    // Defer removing the listener to here to prevent DOM histories from having
    // to unwind DOM event listeners unnecessarily, in case callback renders a
    // <Router> and attaches another history listener.
    if (unlisten) {
      unlisten();
    }
  });
}

exports.default = match;
module.exports = exports['default'];
},{"./RouteUtils":48,"./RouterUtils":51,"./createMemoryHistory":57,"./createTransitionManager":59,"invariant":31}],68:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

exports.default = matchRoutes;

var _AsyncUtils = require('./AsyncUtils');

var _makeStateWithLocation = require('./makeStateWithLocation');

var _makeStateWithLocation2 = _interopRequireDefault(_makeStateWithLocation);

var _PatternUtils = require('./PatternUtils');

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

var _RouteUtils = require('./RouteUtils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getChildRoutes(route, location, paramNames, paramValues, callback) {
  if (route.childRoutes) {
    return [null, route.childRoutes];
  }
  if (!route.getChildRoutes) {
    return [];
  }

  var sync = true,
      result = void 0;

  var partialNextState = {
    location: location,
    params: createParams(paramNames, paramValues)
  };

  var partialNextStateWithLocation = (0, _makeStateWithLocation2.default)(partialNextState, location);

  route.getChildRoutes(partialNextStateWithLocation, function (error, childRoutes) {
    childRoutes = !error && (0, _RouteUtils.createRoutes)(childRoutes);
    if (sync) {
      result = [error, childRoutes];
      return;
    }

    callback(error, childRoutes);
  });

  sync = false;
  return result; // Might be undefined.
}

function getIndexRoute(route, location, paramNames, paramValues, callback) {
  if (route.indexRoute) {
    callback(null, route.indexRoute);
  } else if (route.getIndexRoute) {
    var partialNextState = {
      location: location,
      params: createParams(paramNames, paramValues)
    };

    var partialNextStateWithLocation = (0, _makeStateWithLocation2.default)(partialNextState, location);

    route.getIndexRoute(partialNextStateWithLocation, function (error, indexRoute) {
      callback(error, !error && (0, _RouteUtils.createRoutes)(indexRoute)[0]);
    });
  } else if (route.childRoutes) {
    (function () {
      var pathless = route.childRoutes.filter(function (childRoute) {
        return !childRoute.path;
      });

      (0, _AsyncUtils.loopAsync)(pathless.length, function (index, next, done) {
        getIndexRoute(pathless[index], location, paramNames, paramValues, function (error, indexRoute) {
          if (error || indexRoute) {
            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);
            done(error, routes);
          } else {
            next();
          }
        });
      }, function (err, routes) {
        callback(null, routes);
      });
    })();
  } else {
    callback();
  }
}

function assignParams(params, paramNames, paramValues) {
  return paramNames.reduce(function (params, paramName, index) {
    var paramValue = paramValues && paramValues[index];

    if (Array.isArray(params[paramName])) {
      params[paramName].push(paramValue);
    } else if (paramName in params) {
      params[paramName] = [params[paramName], paramValue];
    } else {
      params[paramName] = paramValue;
    }

    return params;
  }, params);
}

function createParams(paramNames, paramValues) {
  return assignParams({}, paramNames, paramValues);
}

function matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {
  var pattern = route.path || '';

  if (pattern.charAt(0) === '/') {
    remainingPathname = location.pathname;
    paramNames = [];
    paramValues = [];
  }

  // Only try to match the path if the route actually has a pattern, and if
  // we're not just searching for potential nested absolute paths.
  if (remainingPathname !== null && pattern) {
    try {
      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
      if (matched) {
        remainingPathname = matched.remainingPathname;
        paramNames = [].concat(paramNames, matched.paramNames);
        paramValues = [].concat(paramValues, matched.paramValues);
      } else {
        remainingPathname = null;
      }
    } catch (error) {
      callback(error);
    }

    // By assumption, pattern is non-empty here, which is the prerequisite for
    // actually terminating a match.
    if (remainingPathname === '') {
      var _ret2 = function () {
        var match = {
          routes: [route],
          params: createParams(paramNames, paramValues)
        };

        getIndexRoute(route, location, paramNames, paramValues, function (error, indexRoute) {
          if (error) {
            callback(error);
          } else {
            if (Array.isArray(indexRoute)) {
              var _match$routes;

              "build" !== 'production' ? (0, _routerWarning2.default)(indexRoute.every(function (route) {
                return !route.path;
              }), 'Index routes should not have paths') : void 0;
              (_match$routes = match.routes).push.apply(_match$routes, indexRoute);
            } else if (indexRoute) {
              "build" !== 'production' ? (0, _routerWarning2.default)(!indexRoute.path, 'Index routes should not have paths') : void 0;
              match.routes.push(indexRoute);
            }

            callback(null, match);
          }
        });

        return {
          v: void 0
        };
      }();

      if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object") return _ret2.v;
    }
  }

  if (remainingPathname != null || route.childRoutes) {
    // Either a) this route matched at least some of the path or b)
    // we don't have to load this route's children asynchronously. In
    // either case continue checking for matches in the subtree.
    var onChildRoutes = function onChildRoutes(error, childRoutes) {
      if (error) {
        callback(error);
      } else if (childRoutes) {
        // Check the child routes to see if any of them match.
        matchRoutes(childRoutes, location, function (error, match) {
          if (error) {
            callback(error);
          } else if (match) {
            // A child route matched! Augment the match and pass it up the stack.
            match.routes.unshift(route);
            callback(null, match);
          } else {
            callback();
          }
        }, remainingPathname, paramNames, paramValues);
      } else {
        callback();
      }
    };

    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);
    if (result) {
      onChildRoutes.apply(undefined, result);
    }
  } else {
    callback();
  }
}

/**
 * Asynchronously matches the given location to a set of routes and calls
 * callback(error, state) when finished. The state object will have the
 * following properties:
 *
 * - routes       An array of routes that matched, in hierarchical order
 * - params       An object of URL parameters
 *
 * Note: This operation may finish synchronously if no routes have an
 * asynchronous getChildRoutes method.
 */
function matchRoutes(routes, location, callback, remainingPathname) {
  var paramNames = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];
  var paramValues = arguments.length <= 5 || arguments[5] === undefined ? [] : arguments[5];

  if (remainingPathname === undefined) {
    // TODO: This is a little bit ugly, but it works around a quirk in history
    // that strips the leading slash from pathnames when using basenames with
    // trailing slashes.
    if (location.pathname.charAt(0) !== '/') {
      location = _extends({}, location, {
        pathname: '/' + location.pathname
      });
    }
    remainingPathname = location.pathname;
  }

  (0, _AsyncUtils.loopAsync)(routes.length, function (index, next, done) {
    matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {
      if (error || match) {
        done(error, match);
      } else {
        next();
      }
    });
  }, callback);
}
module.exports = exports['default'];
},{"./AsyncUtils":35,"./PatternUtils":43,"./RouteUtils":48,"./makeStateWithLocation":66,"./routerWarning":69}],69:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.default = routerWarning;
exports._resetWarned = _resetWarned;

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var warned = {};

function routerWarning(falseToWarn, message) {
  // Only issue deprecation warnings once.
  if (message.indexOf('deprecated') !== -1) {
    if (warned[message]) {
      return;
    }

    warned[message] = true;
  }

  message = '[react-router] ' + message;

  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  _warning2.default.apply(undefined, [falseToWarn, message].concat(args));
}

function _resetWarned() {
  warned = {};
}
},{"warning":233}],70:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.default = useRouterHistory;

var _useQueries = require('history/lib/useQueries');

var _useQueries2 = _interopRequireDefault(_useQueries);

var _useBasename = require('history/lib/useBasename');

var _useBasename2 = _interopRequireDefault(_useBasename);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function useRouterHistory(createHistory) {
  return function (options) {
    var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
    history.__v2_compatible__ = true;
    return history;
  };
}
module.exports = exports['default'];
},{"history/lib/useBasename":87,"history/lib/useQueries":88}],71:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _useQueries = require('history/lib/useQueries');

var _useQueries2 = _interopRequireDefault(_useQueries);

var _createTransitionManager = require('./createTransitionManager');

var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

var _routerWarning = require('./routerWarning');

var _routerWarning2 = _interopRequireDefault(_routerWarning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Returns a new createHistory function that may be used to create
 * history objects that know about routing.
 *
 * Enhances history objects with the following methods:
 *
 * - listen((error, nextState) => {})
 * - listenBeforeLeavingRoute(route, (nextLocation) => {})
 * - match(location, (error, redirectLocation, nextState) => {})
 * - isActive(pathname, query, indexOnly=false)
 */
function useRoutes(createHistory) {
  "build" !== 'production' ? (0, _routerWarning2.default)(false, '`useRoutes` is deprecated. Please use `createTransitionManager` instead.') : void 0;

  return function () {
    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    var routes = _ref.routes;

    var options = _objectWithoutProperties(_ref, ['routes']);

    var history = (0, _useQueries2.default)(createHistory)(options);
    var transitionManager = (0, _createTransitionManager2.default)(history, routes);
    return _extends({}, history, transitionManager);
  };
}

exports.default = useRoutes;
module.exports = exports['default'];
},{"./createTransitionManager":59,"./routerWarning":69,"history/lib/useQueries":88}],72:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = withRouter;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _hoistNonReactStatics = require('hoist-non-react-statics');

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _PropTypes = require('./PropTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getDisplayName(WrappedComponent) {
  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
}

function withRouter(WrappedComponent) {
  var WithRouter = _react2.default.createClass({
    displayName: 'WithRouter',

    contextTypes: { router: _PropTypes.routerShape },
    render: function render() {
      return _react2.default.createElement(WrappedComponent, _extends({}, this.props, { router: this.context.router }));
    }
  });

  WithRouter.displayName = 'withRouter(' + getDisplayName(WrappedComponent) + ')';
  WithRouter.WrappedComponent = WrappedComponent;

  return (0, _hoistNonReactStatics2.default)(WithRouter, WrappedComponent);
}
module.exports = exports['default'];
},{"./PropTypes":44,"hoist-non-react-statics":30,"react":231}],73:[function(require,module,exports){
/**
 * Indicates that navigation was caused by a call to history.push.
 */
'use strict';

exports.__esModule = true;
var PUSH = 'PUSH';

exports.PUSH = PUSH;
/**
 * Indicates that navigation was caused by a call to history.replace.
 */
var REPLACE = 'REPLACE';

exports.REPLACE = REPLACE;
/**
 * Indicates that navigation was caused by some other action such
 * as using a browser's back/forward buttons and/or manually manipulating
 * the URL in a browser's location bar. This is the default.
 *
 * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
 * for more information.
 */
var POP = 'POP';

exports.POP = POP;
exports['default'] = {
  PUSH: PUSH,
  REPLACE: REPLACE,
  POP: POP
};
},{}],74:[function(require,module,exports){
"use strict";

exports.__esModule = true;
var _slice = Array.prototype.slice;
exports.loopAsync = loopAsync;

function loopAsync(turns, work, callback) {
  var currentTurn = 0,
      isDone = false;
  var sync = false,
      hasNext = false,
      doneArgs = undefined;

  function done() {
    isDone = true;
    if (sync) {
      // Iterate instead of recursing if possible.
      doneArgs = [].concat(_slice.call(arguments));
      return;
    }

    callback.apply(this, arguments);
  }

  function next() {
    if (isDone) {
      return;
    }

    hasNext = true;
    if (sync) {
      // Iterate instead of recursing if possible.
      return;
    }

    sync = true;

    while (!isDone && currentTurn < turns && hasNext) {
      hasNext = false;
      work.call(this, currentTurn++, next, done);
    }

    sync = false;

    if (isDone) {
      // This means the loop finished synchronously.
      callback.apply(this, doneArgs);
      return;
    }

    if (currentTurn >= turns && hasNext) {
      isDone = true;
      callback();
    }
  }

  next();
}
},{}],75:[function(require,module,exports){
(function (process){
/*eslint-disable no-empty */
'use strict';

exports.__esModule = true;
exports.saveState = saveState;
exports.readState = readState;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

var KeyPrefix = '@@History/';
var QuotaExceededErrors = ['QuotaExceededError', 'QUOTA_EXCEEDED_ERR'];

var SecurityError = 'SecurityError';

function createKey(key) {
  return KeyPrefix + key;
}

function saveState(key, state) {
  try {
    if (state == null) {
      window.sessionStorage.removeItem(createKey(key));
    } else {
      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));
    }
  } catch (error) {
    if (error.name === SecurityError) {
      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
      // attempt to access window.sessionStorage.
      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;

      return;
    }

    if (QuotaExceededErrors.indexOf(error.name) >= 0 && window.sessionStorage.length === 0) {
      // Safari "private mode" throws QuotaExceededError.
      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;

      return;
    }

    throw error;
  }
}

function readState(key) {
  var json = undefined;
  try {
    json = window.sessionStorage.getItem(createKey(key));
  } catch (error) {
    if (error.name === SecurityError) {
      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
      // attempt to access window.sessionStorage.
      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;

      return null;
    }
  }

  if (json) {
    try {
      return JSON.parse(json);
    } catch (error) {
      // Ignore invalid JSON.
    }
  }

  return null;
}
}).call(this,require('_process'))

},{"_process":33,"warning":233}],76:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.addEventListener = addEventListener;
exports.removeEventListener = removeEventListener;
exports.getHashPath = getHashPath;
exports.replaceHashPath = replaceHashPath;
exports.getWindowPath = getWindowPath;
exports.go = go;
exports.getUserConfirmation = getUserConfirmation;
exports.supportsHistory = supportsHistory;
exports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;

function addEventListener(node, event, listener) {
  if (node.addEventListener) {
    node.addEventListener(event, listener, false);
  } else {
    node.attachEvent('on' + event, listener);
  }
}

function removeEventListener(node, event, listener) {
  if (node.removeEventListener) {
    node.removeEventListener(event, listener, false);
  } else {
    node.detachEvent('on' + event, listener);
  }
}

function getHashPath() {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  return window.location.href.split('#')[1] || '';
}

function replaceHashPath(path) {
  window.location.replace(window.location.pathname + window.location.search + '#' + path);
}

function getWindowPath() {
  return window.location.pathname + window.location.search + window.location.hash;
}

function go(n) {
  if (n) window.history.go(n);
}

function getUserConfirmation(message, callback) {
  callback(window.confirm(message));
}

/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586
 */

function supportsHistory() {
  var ua = navigator.userAgent;
  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {
    return false;
  }
  return window.history && 'pushState' in window.history;
}

/**
 * Returns false if using go(n) with hash history causes a full page reload.
 */

function supportsGoWithoutReloadUsingHash() {
  var ua = navigator.userAgent;
  return ua.indexOf('Firefox') === -1;
}
},{}],77:[function(require,module,exports){
'use strict';

exports.__esModule = true;
var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
exports.canUseDOM = canUseDOM;
},{}],78:[function(require,module,exports){
(function (process){
'use strict';

exports.__esModule = true;
exports.extractPath = extractPath;
exports.parsePath = parsePath;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

function extractPath(string) {
  var match = string.match(/^https?:\/\/[^\/]*/);

  if (match == null) return string;

  return string.substring(match[0].length);
}

function parsePath(path) {
  var pathname = extractPath(path);
  var search = '';
  var hash = '';

  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like "%s"', path) : undefined;

  var hashIndex = pathname.indexOf('#');
  if (hashIndex !== -1) {
    hash = pathname.substring(hashIndex);
    pathname = pathname.substring(0, hashIndex);
  }

  var searchIndex = pathname.indexOf('?');
  if (searchIndex !== -1) {
    search = pathname.substring(searchIndex);
    pathname = pathname.substring(0, searchIndex);
  }

  if (pathname === '') pathname = '/';

  return {
    pathname: pathname,
    search: search,
    hash: hash
  };
}
}).call(this,require('_process'))

},{"_process":33,"warning":233}],79:[function(require,module,exports){
(function (process){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _Actions = require('./Actions');

var _PathUtils = require('./PathUtils');

var _ExecutionEnvironment = require('./ExecutionEnvironment');

var _DOMUtils = require('./DOMUtils');

var _DOMStateStorage = require('./DOMStateStorage');

var _createDOMHistory = require('./createDOMHistory');

var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);

/**
 * Creates and returns a history object that uses HTML5's history API
 * (pushState, replaceState, and the popstate event) to manage history.
 * This is the recommended method of managing history in browsers because
 * it provides the cleanest URLs.
 *
 * Note: In browsers that do not support the HTML5 history API full
 * page reloads will be used to preserve URLs.
 */
function createBrowserHistory() {
  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;

  var forceRefresh = options.forceRefresh;

  var isSupported = _DOMUtils.supportsHistory();
  var useRefresh = !isSupported || forceRefresh;

  function getCurrentLocation(historyState) {
    try {
      historyState = historyState || window.history.state || {};
    } catch (e) {
      historyState = {};
    }

    var path = _DOMUtils.getWindowPath();
    var _historyState = historyState;
    var key = _historyState.key;

    var state = undefined;
    if (key) {
      state = _DOMStateStorage.readState(key);
    } else {
      state = null;
      key = history.createKey();

      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null);
    }

    var location = _PathUtils.parsePath(path);

    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
  }

  function startPopStateListener(_ref) {
    var transitionTo = _ref.transitionTo;

    function popStateListener(event) {
      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.

      transitionTo(getCurrentLocation(event.state));
    }

    _DOMUtils.addEventListener(window, 'popstate', popStateListener);

    return function () {
      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);
    };
  }

  function finishTransition(location) {
    var basename = location.basename;
    var pathname = location.pathname;
    var search = location.search;
    var hash = location.hash;
    var state = location.state;
    var action = location.action;
    var key = location.key;

    if (action === _Actions.POP) return; // Nothing to do.

    _DOMStateStorage.saveState(key, state);

    var path = (basename || '') + pathname + search + hash;
    var historyState = {
      key: key
    };

    if (action === _Actions.PUSH) {
      if (useRefresh) {
        window.location.href = path;
        return false; // Prevent location update.
      } else {
          window.history.pushState(historyState, null, path);
        }
    } else {
      // REPLACE
      if (useRefresh) {
        window.location.replace(path);
        return false; // Prevent location update.
      } else {
          window.history.replaceState(historyState, null, path);
        }
    }
  }

  var history = _createDOMHistory2['default'](_extends({}, options, {
    getCurrentLocation: getCurrentLocation,
    finishTransition: finishTransition,
    saveState: _DOMStateStorage.saveState
  }));

  var listenerCount = 0,
      stopPopStateListener = undefined;

  function listenBefore(listener) {
    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

    var unlisten = history.listenBefore(listener);

    return function () {
      unlisten();

      if (--listenerCount === 0) stopPopStateListener();
    };
  }

  function listen(listener) {
    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

    var unlisten = history.listen(listener);

    return function () {
      unlisten();

      if (--listenerCount === 0) stopPopStateListener();
    };
  }

  // deprecated
  function registerTransitionHook(hook) {
    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

    history.registerTransitionHook(hook);
  }

  // deprecated
  function unregisterTransitionHook(hook) {
    history.unregisterTransitionHook(hook);

    if (--listenerCount === 0) stopPopStateListener();
  }

  return _extends({}, history, {
    listenBefore: listenBefore,
    listen: listen,
    registerTransitionHook: registerTransitionHook,
    unregisterTransitionHook: unregisterTransitionHook
  });
}

exports['default'] = createBrowserHistory;
module.exports = exports['default'];
}).call(this,require('_process'))

},{"./Actions":73,"./DOMStateStorage":75,"./DOMUtils":76,"./ExecutionEnvironment":77,"./PathUtils":78,"./createDOMHistory":80,"_process":33,"invariant":31}],80:[function(require,module,exports){
(function (process){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _ExecutionEnvironment = require('./ExecutionEnvironment');

var _DOMUtils = require('./DOMUtils');

var _createHistory = require('./createHistory');

var _createHistory2 = _interopRequireDefault(_createHistory);

function createDOMHistory(options) {
  var history = _createHistory2['default'](_extends({
    getUserConfirmation: _DOMUtils.getUserConfirmation
  }, options, {
    go: _DOMUtils.go
  }));

  function listen(listener) {
    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;

    return history.listen(listener);
  }

  return _extends({}, history, {
    listen: listen
  });
}

exports['default'] = createDOMHistory;
module.exports = exports['default'];
}).call(this,require('_process'))

},{"./DOMUtils":76,"./ExecutionEnvironment":77,"./createHistory":82,"_process":33,"invariant":31}],81:[function(require,module,exports){
(function (process){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _Actions = require('./Actions');

var _PathUtils = require('./PathUtils');

var _ExecutionEnvironment = require('./ExecutionEnvironment');

var _DOMUtils = require('./DOMUtils');

var _DOMStateStorage = require('./DOMStateStorage');

var _createDOMHistory = require('./createDOMHistory');

var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);

function isAbsolutePath(path) {
  return typeof path === 'string' && path.charAt(0) === '/';
}

function ensureSlash() {
  var path = _DOMUtils.getHashPath();

  if (isAbsolutePath(path)) return true;

  _DOMUtils.replaceHashPath('/' + path);

  return false;
}

function addQueryStringValueToPath(path, key, value) {
  return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);
}

function stripQueryStringValueFromPath(path, key) {
  return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');
}

function getQueryStringValueFromPath(path, key) {
  var match = path.match(new RegExp('\\?.*?\\b' + key + '=(.+?)\\b'));
  return match && match[1];
}

var DefaultQueryKey = '_k';

function createHashHistory() {
  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;

  var queryKey = options.queryKey;

  if (queryKey === undefined || !!queryKey) queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;

  function getCurrentLocation() {
    var path = _DOMUtils.getHashPath();

    var key = undefined,
        state = undefined;
    if (queryKey) {
      key = getQueryStringValueFromPath(path, queryKey);
      path = stripQueryStringValueFromPath(path, queryKey);

      if (key) {
        state = _DOMStateStorage.readState(key);
      } else {
        state = null;
        key = history.createKey();
        _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));
      }
    } else {
      key = state = null;
    }

    var location = _PathUtils.parsePath(path);

    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
  }

  function startHashChangeListener(_ref) {
    var transitionTo = _ref.transitionTo;

    function hashChangeListener() {
      if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.

      transitionTo(getCurrentLocation());
    }

    ensureSlash();
    _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);

    return function () {
      _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);
    };
  }

  function finishTransition(location) {
    var basename = location.basename;
    var pathname = location.pathname;
    var search = location.search;
    var state = location.state;
    var action = location.action;
    var key = location.key;

    if (action === _Actions.POP) return; // Nothing to do.

    var path = (basename || '') + pathname + search;

    if (queryKey) {
      path = addQueryStringValueToPath(path, queryKey, key);
      _DOMStateStorage.saveState(key, state);
    } else {
      // Drop key and state.
      location.key = location.state = null;
    }

    var currentHash = _DOMUtils.getHashPath();

    if (action === _Actions.PUSH) {
      if (currentHash !== path) {
        window.location.hash = path;
      } else {
        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;
      }
    } else if (currentHash !== path) {
      // REPLACE
      _DOMUtils.replaceHashPath(path);
    }
  }

  var history = _createDOMHistory2['default'](_extends({}, options, {
    getCurrentLocation: getCurrentLocation,
    finishTransition: finishTransition,
    saveState: _DOMStateStorage.saveState
  }));

  var listenerCount = 0,
      stopHashChangeListener = undefined;

  function listenBefore(listener) {
    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

    var unlisten = history.listenBefore(listener);

    return function () {
      unlisten();

      if (--listenerCount === 0) stopHashChangeListener();
    };
  }

  function listen(listener) {
    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

    var unlisten = history.listen(listener);

    return function () {
      unlisten();

      if (--listenerCount === 0) stopHashChangeListener();
    };
  }

  function push(location) {
    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

    history.push(location);
  }

  function replace(location) {
    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

    history.replace(location);
  }

  var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();

  function go(n) {
    process.env.NODE_ENV !== 'production' ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;

    history.go(n);
  }

  function createHref(path) {
    return '#' + history.createHref(path);
  }

  // deprecated
  function registerTransitionHook(hook) {
    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

    history.registerTransitionHook(hook);
  }

  // deprecated
  function unregisterTransitionHook(hook) {
    history.unregisterTransitionHook(hook);

    if (--listenerCount === 0) stopHashChangeListener();
  }

  // deprecated
  function pushState(state, path) {
    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

    history.pushState(state, path);
  }

  // deprecated
  function replaceState(state, path) {
    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

    history.replaceState(state, path);
  }

  return _extends({}, history, {
    listenBefore: listenBefore,
    listen: listen,
    push: push,
    replace: replace,
    go: go,
    createHref: createHref,

    registerTransitionHook: registerTransitionHook, // deprecated - warning is in createHistory
    unregisterTransitionHook: unregisterTransitionHook, // deprecated - warning is in createHistory
    pushState: pushState, // deprecated - warning is in createHistory
    replaceState: replaceState // deprecated - warning is in createHistory
  });
}

exports['default'] = createHashHistory;
module.exports = exports['default'];
}).call(this,require('_process'))

},{"./Actions":73,"./DOMStateStorage":75,"./DOMUtils":76,"./ExecutionEnvironment":77,"./PathUtils":78,"./createDOMHistory":80,"_process":33,"invariant":31,"warning":233}],82:[function(require,module,exports){
(function (process){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

var _deepEqual = require('deep-equal');

var _deepEqual2 = _interopRequireDefault(_deepEqual);

var _PathUtils = require('./PathUtils');

var _AsyncUtils = require('./AsyncUtils');

var _Actions = require('./Actions');

var _createLocation2 = require('./createLocation');

var _createLocation3 = _interopRequireDefault(_createLocation2);

var _runTransitionHook = require('./runTransitionHook');

var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

var _deprecate = require('./deprecate');

var _deprecate2 = _interopRequireDefault(_deprecate);

function createRandomKey(length) {
  return Math.random().toString(36).substr(2, length);
}

function locationsAreEqual(a, b) {
  return a.pathname === b.pathname && a.search === b.search &&
  //a.action === b.action && // Different action !== location change.
  a.key === b.key && _deepEqual2['default'](a.state, b.state);
}

var DefaultKeyLength = 6;

function createHistory() {
  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
  var getCurrentLocation = options.getCurrentLocation;
  var finishTransition = options.finishTransition;
  var saveState = options.saveState;
  var go = options.go;
  var getUserConfirmation = options.getUserConfirmation;
  var keyLength = options.keyLength;

  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;

  var transitionHooks = [];

  function listenBefore(hook) {
    transitionHooks.push(hook);

    return function () {
      transitionHooks = transitionHooks.filter(function (item) {
        return item !== hook;
      });
    };
  }

  var allKeys = [];
  var changeListeners = [];
  var location = undefined;

  function getCurrent() {
    if (pendingLocation && pendingLocation.action === _Actions.POP) {
      return allKeys.indexOf(pendingLocation.key);
    } else if (location) {
      return allKeys.indexOf(location.key);
    } else {
      return -1;
    }
  }

  function updateLocation(newLocation) {
    var current = getCurrent();

    location = newLocation;

    if (location.action === _Actions.PUSH) {
      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);
    } else if (location.action === _Actions.REPLACE) {
      allKeys[current] = location.key;
    }

    changeListeners.forEach(function (listener) {
      listener(location);
    });
  }

  function listen(listener) {
    changeListeners.push(listener);

    if (location) {
      listener(location);
    } else {
      var _location = getCurrentLocation();
      allKeys = [_location.key];
      updateLocation(_location);
    }

    return function () {
      changeListeners = changeListeners.filter(function (item) {
        return item !== listener;
      });
    };
  }

  function confirmTransitionTo(location, callback) {
    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {
      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {
        if (result != null) {
          done(result);
        } else {
          next();
        }
      });
    }, function (message) {
      if (getUserConfirmation && typeof message === 'string') {
        getUserConfirmation(message, function (ok) {
          callback(ok !== false);
        });
      } else {
        callback(message !== false);
      }
    });
  }

  var pendingLocation = undefined;

  function transitionTo(nextLocation) {
    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.

    pendingLocation = nextLocation;

    confirmTransitionTo(nextLocation, function (ok) {
      if (pendingLocation !== nextLocation) return; // Transition was interrupted.

      if (ok) {
        // treat PUSH to current path like REPLACE to be consistent with browsers
        if (nextLocation.action === _Actions.PUSH) {
          var prevPath = createPath(location);
          var nextPath = createPath(nextLocation);

          if (nextPath === prevPath && _deepEqual2['default'](location.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;
        }

        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);
      } else if (location && nextLocation.action === _Actions.POP) {
        var prevIndex = allKeys.indexOf(location.key);
        var nextIndex = allKeys.indexOf(nextLocation.key);

        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.
      }
    });
  }

  function push(location) {
    transitionTo(createLocation(location, _Actions.PUSH, createKey()));
  }

  function replace(location) {
    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  function createKey() {
    return createRandomKey(keyLength);
  }

  function createPath(location) {
    if (location == null || typeof location === 'string') return location;

    var pathname = location.pathname;
    var search = location.search;
    var hash = location.hash;

    var result = pathname;

    if (search) result += search;

    if (hash) result += hash;

    return result;
  }

  function createHref(location) {
    return createPath(location);
  }

  function createLocation(location, action) {
    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];

    if (typeof action === 'object') {
      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to history.createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;

      if (typeof location === 'string') location = _PathUtils.parsePath(location);

      location = _extends({}, location, { state: action });

      action = key;
      key = arguments[3] || createKey();
    }

    return _createLocation3['default'](location, action, key);
  }

  // deprecated
  function setState(state) {
    if (location) {
      updateLocationState(location, state);
      updateLocation(location);
    } else {
      updateLocationState(getCurrentLocation(), state);
    }
  }

  function updateLocationState(location, state) {
    location.state = _extends({}, location.state, state);
    saveState(location.key, location.state);
  }

  // deprecated
  function registerTransitionHook(hook) {
    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);
  }

  // deprecated
  function unregisterTransitionHook(hook) {
    transitionHooks = transitionHooks.filter(function (item) {
      return item !== hook;
    });
  }

  // deprecated
  function pushState(state, path) {
    if (typeof path === 'string') path = _PathUtils.parsePath(path);

    push(_extends({ state: state }, path));
  }

  // deprecated
  function replaceState(state, path) {
    if (typeof path === 'string') path = _PathUtils.parsePath(path);

    replace(_extends({ state: state }, path));
  }

  return {
    listenBefore: listenBefore,
    listen: listen,
    transitionTo: transitionTo,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    createKey: createKey,
    createPath: createPath,
    createHref: createHref,
    createLocation: createLocation,

    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),
    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),
    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),
    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
  };
}

exports['default'] = createHistory;
module.exports = exports['default'];
}).call(this,require('_process'))

},{"./Actions":73,"./AsyncUtils":74,"./PathUtils":78,"./createLocation":83,"./deprecate":85,"./runTransitionHook":86,"_process":33,"deep-equal":1,"warning":233}],83:[function(require,module,exports){
(function (process){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

var _Actions = require('./Actions');

var _PathUtils = require('./PathUtils');

function createLocation() {
  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];
  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];
  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];

  if (typeof location === 'string') location = _PathUtils.parsePath(location);

  if (typeof action === 'object') {
    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;

    location = _extends({}, location, { state: action });

    action = key || _Actions.POP;
    key = _fourthArg;
  }

  var pathname = location.pathname || '/';
  var search = location.search || '';
  var hash = location.hash || '';
  var state = location.state || null;

  return {
    pathname: pathname,
    search: search,
    hash: hash,
    state: state,
    action: action,
    key: key
  };
}

exports['default'] = createLocation;
module.exports = exports['default'];
}).call(this,require('_process'))

},{"./Actions":73,"./PathUtils":78,"_process":33,"warning":233}],84:[function(require,module,exports){
(function (process){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _PathUtils = require('./PathUtils');

var _Actions = require('./Actions');

var _createHistory = require('./createHistory');

var _createHistory2 = _interopRequireDefault(_createHistory);

function createStateStorage(entries) {
  return entries.filter(function (entry) {
    return entry.state;
  }).reduce(function (memo, entry) {
    memo[entry.key] = entry.state;
    return memo;
  }, {});
}

function createMemoryHistory() {
  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  if (Array.isArray(options)) {
    options = { entries: options };
  } else if (typeof options === 'string') {
    options = { entries: [options] };
  }

  var history = _createHistory2['default'](_extends({}, options, {
    getCurrentLocation: getCurrentLocation,
    finishTransition: finishTransition,
    saveState: saveState,
    go: go
  }));

  var _options = options;
  var entries = _options.entries;
  var current = _options.current;

  if (typeof entries === 'string') {
    entries = [entries];
  } else if (!Array.isArray(entries)) {
    entries = ['/'];
  }

  entries = entries.map(function (entry) {
    var key = history.createKey();

    if (typeof entry === 'string') return { pathname: entry, key: key };

    if (typeof entry === 'object' && entry) return _extends({}, entry, { key: key });

    !false ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;
  });

  if (current == null) {
    current = entries.length - 1;
  } else {
    !(current >= 0 && current < entries.length) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;
  }

  var storage = createStateStorage(entries);

  function saveState(key, state) {
    storage[key] = state;
  }

  function readState(key) {
    return storage[key];
  }

  function getCurrentLocation() {
    var entry = entries[current];
    var basename = entry.basename;
    var pathname = entry.pathname;
    var search = entry.search;

    var path = (basename || '') + pathname + (search || '');

    var key = undefined,
        state = undefined;
    if (entry.key) {
      key = entry.key;
      state = readState(key);
    } else {
      key = history.createKey();
      state = null;
      entry.key = key;
    }

    var location = _PathUtils.parsePath(path);

    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
  }

  function canGo(n) {
    var index = current + n;
    return index >= 0 && index < entries.length;
  }

  function go(n) {
    if (n) {
      if (!canGo(n)) {
        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;
        return;
      }

      current += n;

      var currentLocation = getCurrentLocation();

      // change action to POP
      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));
    }
  }

  function finishTransition(location) {
    switch (location.action) {
      case _Actions.PUSH:
        current += 1;

        // if we are not on the top of stack
        // remove rest and push new
        if (current < entries.length) entries.splice(current);

        entries.push(location);
        saveState(location.key, location.state);
        break;
      case _Actions.REPLACE:
        entries[current] = location;
        saveState(location.key, location.state);
        break;
    }
  }

  return history;
}

exports['default'] = createMemoryHistory;
module.exports = exports['default'];
}).call(this,require('_process'))

},{"./Actions":73,"./PathUtils":78,"./createHistory":82,"_process":33,"invariant":31,"warning":233}],85:[function(require,module,exports){
(function (process){
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

function deprecate(fn, message) {
  return function () {
    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] ' + message) : undefined;
    return fn.apply(this, arguments);
  };
}

exports['default'] = deprecate;
module.exports = exports['default'];
}).call(this,require('_process'))

},{"_process":33,"warning":233}],86:[function(require,module,exports){
(function (process){
'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

function runTransitionHook(hook, location, callback) {
  var result = hook(location, callback);

  if (hook.length < 2) {
    // Assume the hook runs synchronously and automatically
    // call the callback with the return value.
    callback(result);
  } else {
    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not "return" in a transition hook with a callback argument; call the callback instead') : undefined;
  }
}

exports['default'] = runTransitionHook;
module.exports = exports['default'];
}).call(this,require('_process'))

},{"_process":33,"warning":233}],87:[function(require,module,exports){
(function (process){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

var _ExecutionEnvironment = require('./ExecutionEnvironment');

var _PathUtils = require('./PathUtils');

var _runTransitionHook = require('./runTransitionHook');

var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

var _deprecate = require('./deprecate');

var _deprecate2 = _interopRequireDefault(_deprecate);

function useBasename(createHistory) {
  return function () {
    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    var history = createHistory(options);

    var basename = options.basename;

    var checkedBaseHref = false;

    function checkBaseHref() {
      if (checkedBaseHref) {
        return;
      }

      // Automatically use the value of <base href> in HTML
      // documents as basename if it's not explicitly given.
      if (basename == null && _ExecutionEnvironment.canUseDOM) {
        var base = document.getElementsByTagName('base')[0];
        var baseHref = base && base.getAttribute('href');

        if (baseHref != null) {
          basename = baseHref;

          process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'Automatically setting basename using <base href> is deprecated and will ' + 'be removed in the next major release. The semantics of <base href> are ' + 'subtly different from basename. Please pass the basename explicitly in ' + 'the options to createHistory') : undefined;
        }
      }

      checkedBaseHref = true;
    }

    function addBasename(location) {
      checkBaseHref();

      if (basename && location.basename == null) {
        if (location.pathname.indexOf(basename) === 0) {
          location.pathname = location.pathname.substring(basename.length);
          location.basename = basename;

          if (location.pathname === '') location.pathname = '/';
        } else {
          location.basename = '';
        }
      }

      return location;
    }

    function prependBasename(location) {
      checkBaseHref();

      if (!basename) return location;

      if (typeof location === 'string') location = _PathUtils.parsePath(location);

      var pname = location.pathname;
      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';
      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;
      var pathname = normalizedBasename + normalizedPathname;

      return _extends({}, location, {
        pathname: pathname
      });
    }

    // Override all read methods with basename-aware versions.
    function listenBefore(hook) {
      return history.listenBefore(function (location, callback) {
        _runTransitionHook2['default'](hook, addBasename(location), callback);
      });
    }

    function listen(listener) {
      return history.listen(function (location) {
        listener(addBasename(location));
      });
    }

    // Override all write methods with basename-aware versions.
    function push(location) {
      history.push(prependBasename(location));
    }

    function replace(location) {
      history.replace(prependBasename(location));
    }

    function createPath(location) {
      return history.createPath(prependBasename(location));
    }

    function createHref(location) {
      return history.createHref(prependBasename(location));
    }

    function createLocation(location) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      return addBasename(history.createLocation.apply(history, [prependBasename(location)].concat(args)));
    }

    // deprecated
    function pushState(state, path) {
      if (typeof path === 'string') path = _PathUtils.parsePath(path);

      push(_extends({ state: state }, path));
    }

    // deprecated
    function replaceState(state, path) {
      if (typeof path === 'string') path = _PathUtils.parsePath(path);

      replace(_extends({ state: state }, path));
    }

    return _extends({}, history, {
      listenBefore: listenBefore,
      listen: listen,
      push: push,
      replace: replace,
      createPath: createPath,
      createHref: createHref,
      createLocation: createLocation,

      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
    });
  };
}

exports['default'] = useBasename;
module.exports = exports['default'];
}).call(this,require('_process'))

},{"./ExecutionEnvironment":77,"./PathUtils":78,"./deprecate":85,"./runTransitionHook":86,"_process":33,"warning":233}],88:[function(require,module,exports){
(function (process){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

var _queryString = require('query-string');

var _runTransitionHook = require('./runTransitionHook');

var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

var _PathUtils = require('./PathUtils');

var _deprecate = require('./deprecate');

var _deprecate2 = _interopRequireDefault(_deprecate);

var SEARCH_BASE_KEY = '$searchBase';

function defaultStringifyQuery(query) {
  return _queryString.stringify(query).replace(/%20/g, '+');
}

var defaultParseQueryString = _queryString.parse;

function isNestedObject(object) {
  for (var p in object) {
    if (Object.prototype.hasOwnProperty.call(object, p) && typeof object[p] === 'object' && !Array.isArray(object[p]) && object[p] !== null) return true;
  }return false;
}

/**
 * Returns a new createHistory function that may be used to create
 * history objects that know how to handle URL queries.
 */
function useQueries(createHistory) {
  return function () {
    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    var history = createHistory(options);

    var stringifyQuery = options.stringifyQuery;
    var parseQueryString = options.parseQueryString;

    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;

    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;

    function addQuery(location) {
      if (location.query == null) {
        var search = location.search;

        location.query = parseQueryString(search.substring(1));
        location[SEARCH_BASE_KEY] = { search: search, searchBase: '' };
      }

      // TODO: Instead of all the book-keeping here, this should just strip the
      // stringified query from the search.

      return location;
    }

    function appendQuery(location, query) {
      var _extends2;

      var searchBaseSpec = location[SEARCH_BASE_KEY];
      var queryString = query ? stringifyQuery(query) : '';
      if (!searchBaseSpec && !queryString) {
        return location;
      }

      process.env.NODE_ENV !== 'production' ? _warning2['default'](stringifyQuery !== defaultStringifyQuery || !isNestedObject(query), 'useQueries does not stringify nested query objects by default; ' + 'use a custom stringifyQuery function') : undefined;

      if (typeof location === 'string') location = _PathUtils.parsePath(location);

      var searchBase = undefined;
      if (searchBaseSpec && location.search === searchBaseSpec.search) {
        searchBase = searchBaseSpec.searchBase;
      } else {
        searchBase = location.search || '';
      }

      var search = searchBase;
      if (queryString) {
        search += (search ? '&' : '?') + queryString;
      }

      return _extends({}, location, (_extends2 = {
        search: search
      }, _extends2[SEARCH_BASE_KEY] = { search: search, searchBase: searchBase }, _extends2));
    }

    // Override all read methods with query-aware versions.
    function listenBefore(hook) {
      return history.listenBefore(function (location, callback) {
        _runTransitionHook2['default'](hook, addQuery(location), callback);
      });
    }

    function listen(listener) {
      return history.listen(function (location) {
        listener(addQuery(location));
      });
    }

    // Override all write methods with query-aware versions.
    function push(location) {
      history.push(appendQuery(location, location.query));
    }

    function replace(location) {
      history.replace(appendQuery(location, location.query));
    }

    function createPath(location, query) {
      process.env.NODE_ENV !== 'production' ? _warning2['default'](!query, 'the query argument to createPath is deprecated; use a location descriptor instead') : undefined;

      return history.createPath(appendQuery(location, query || location.query));
    }

    function createHref(location, query) {
      process.env.NODE_ENV !== 'production' ? _warning2['default'](!query, 'the query argument to createHref is deprecated; use a location descriptor instead') : undefined;

      return history.createHref(appendQuery(location, query || location.query));
    }

    function createLocation(location) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var fullLocation = history.createLocation.apply(history, [appendQuery(location, location.query)].concat(args));
      if (location.query) {
        fullLocation.query = location.query;
      }
      return addQuery(fullLocation);
    }

    // deprecated
    function pushState(state, path, query) {
      if (typeof path === 'string') path = _PathUtils.parsePath(path);

      push(_extends({ state: state }, path, { query: query }));
    }

    // deprecated
    function replaceState(state, path, query) {
      if (typeof path === 'string') path = _PathUtils.parsePath(path);

      replace(_extends({ state: state }, path, { query: query }));
    }

    return _extends({}, history, {
      listenBefore: listenBefore,
      listen: listen,
      push: push,
      replace: replace,
      createPath: createPath,
      createHref: createHref,
      createLocation: createLocation,

      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
    });
  };
}

exports['default'] = useQueries;
module.exports = exports['default'];
}).call(this,require('_process'))

},{"./PathUtils":78,"./deprecate":85,"./runTransitionHook":86,"_process":33,"query-string":89,"warning":233}],89:[function(require,module,exports){
'use strict';
var strictUriEncode = require('strict-uri-encode');

exports.extract = function (str) {
	return str.split('?')[1] || '';
};

exports.parse = function (str) {
	if (typeof str !== 'string') {
		return {};
	}

	str = str.trim().replace(/^(\?|#|&)/, '');

	if (!str) {
		return {};
	}

	return str.split('&').reduce(function (ret, param) {
		var parts = param.replace(/\+/g, ' ').split('=');
		// Firefox (pre 40) decodes `%3D` to `=`
		// https://github.com/sindresorhus/query-string/pull/37
		var key = parts.shift();
		var val = parts.length > 0 ? parts.join('=') : undefined;

		key = decodeURIComponent(key);

		// missing `=` should be `null`:
		// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
		val = val === undefined ? null : decodeURIComponent(val);

		if (!ret.hasOwnProperty(key)) {
			ret[key] = val;
		} else if (Array.isArray(ret[key])) {
			ret[key].push(val);
		} else {
			ret[key] = [ret[key], val];
		}

		return ret;
	}, {});
};

exports.stringify = function (obj) {
	return obj ? Object.keys(obj).sort().map(function (key) {
		var val = obj[key];

		if (val === undefined) {
			return '';
		}

		if (val === null) {
			return key;
		}

		if (Array.isArray(val)) {
			return val.slice().sort().map(function (val2) {
				return strictUriEncode(key) + '=' + strictUriEncode(val2);
			}).join('&');
		}

		return strictUriEncode(key) + '=' + strictUriEncode(val);
	}).filter(function (x) {
		return x.length > 0;
	}).join('&') : '';
};

},{"strict-uri-encode":232}],90:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule AutoFocusUtils
 */

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var focusNode = require('fbjs/lib/focusNode');

var AutoFocusUtils = {
  focusDOMComponent: function () {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;
},{"./ReactDOMComponentTree":130,"fbjs/lib/focusNode":13}],91:[function(require,module,exports){
/**
 * Copyright 2013-present Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule BeforeInputEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var FallbackCompositionState = require('./FallbackCompositionState');
var SyntheticCompositionEvent = require('./SyntheticCompositionEvent');
var SyntheticInputEvent = require('./SyntheticInputEvent');

var keyOf = require('fbjs/lib/keyOf');

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

var topLevelTypes = EventConstants.topLevelTypes;

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onBeforeInput: null }),
      captured: keyOf({ onBeforeInputCapture: null })
    },
    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCompositionEnd: null }),
      captured: keyOf({ onCompositionEndCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCompositionStart: null }),
      captured: keyOf({ onCompositionStartCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCompositionUpdate: null }),
      captured: keyOf({ onCompositionUpdateCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionStart:
      return eventTypes.compositionStart;
    case topLevelTypes.topCompositionEnd:
      return eventTypes.compositionEnd;
    case topLevelTypes.topCompositionUpdate:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topKeyUp:
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case topLevelTypes.topKeyDown:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case topLevelTypes.topKeyPress:
    case topLevelTypes.topMouseDown:
    case topLevelTypes.topBlur:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionEnd:
      return getDataFromCustomEvent(nativeEvent);
    case topLevelTypes.topKeyPress:
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case topLevelTypes.topTextInput:
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  if (currentComposition) {
    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case topLevelTypes.topPaste:
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case topLevelTypes.topKeyPress:
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case topLevelTypes.topCompositionEnd:
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;
},{"./EventConstants":105,"./EventPropagators":109,"./FallbackCompositionState":110,"./SyntheticCompositionEvent":187,"./SyntheticInputEvent":191,"fbjs/lib/ExecutionEnvironment":5,"fbjs/lib/keyOf":23}],92:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSProperty
 */

'use strict';

/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridColumn: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;
},{}],93:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSPropertyOperations
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactInstrumentation = require('./ReactInstrumentation');

var camelizeStyleName = require('fbjs/lib/camelizeStyleName');
var dangerousStyleValue = require('./dangerousStyleValue');
var hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');
var memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');
var warning = require('fbjs/lib/warning');

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if ("build" !== 'production') {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    "build" !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    "build" !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function (name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    "build" !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function (name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    "build" !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function (owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function (name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function (styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if ("build" !== 'production') {
        warnValidStyle(styleName, styleValue, component);
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function (node, styles, component) {
    if ("build" !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
    }

    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if ("build" !== 'production') {
        warnValidStyle(styleName, styles[styleName], component);
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

module.exports = CSSPropertyOperations;
},{"./CSSProperty":92,"./ReactInstrumentation":162,"./dangerousStyleValue":205,"fbjs/lib/ExecutionEnvironment":5,"fbjs/lib/camelizeStyleName":7,"fbjs/lib/hyphenateStyleName":18,"fbjs/lib/memoizeStringOnly":25,"fbjs/lib/warning":29}],94:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CallbackQueue
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var invariant = require('fbjs/lib/invariant');

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */
function CallbackQueue() {
  this._callbacks = null;
  this._contexts = null;
}

_assign(CallbackQueue.prototype, {

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */
  enqueue: function (callback, context) {
    this._callbacks = this._callbacks || [];
    this._contexts = this._contexts || [];
    this._callbacks.push(callback);
    this._contexts.push(context);
  },

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */
  notifyAll: function () {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    if (callbacks) {
      !(callbacks.length === contexts.length) ? "build" !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i]);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  },

  checkpoint: function () {
    return this._callbacks ? this._callbacks.length : 0;
  },

  rollback: function (len) {
    if (this._callbacks) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  },

  /**
   * Resets the internal queue.
   *
   * @internal
   */
  reset: function () {
    this._callbacks = null;
    this._contexts = null;
  },

  /**
   * `PooledClass` looks for this.
   */
  destructor: function () {
    this.reset();
  }

});

PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;
},{"./PooledClass":114,"./reactProdInvariant":224,"fbjs/lib/invariant":19,"object-assign":32}],95:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ChangeEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPluginHub = require('./EventPluginHub');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');
var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');
var isEventSupported = require('./isEventSupported');
var isTextInputElement = require('./isTextInputElement');
var keyOf = require('fbjs/lib/keyOf');

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onChange: null }),
      captured: keyOf({ onChangeCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topChange) {
    return targetInst;
  }
}
function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === topLevelTypes.topFocus) {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  // IE10+ fire input events to often, such when a placeholder
  // changes or when an input with a placeholder is focused.
  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
}

/**
 * (For IE <=11) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp = {
  get: function () {
    return activeElementValueProp.get.call(this);
  },
  set: function (val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For IE <=11) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
  // on DOM elements
  Object.defineProperty(activeElement, 'value', newValueProp);
  if (activeElement.attachEvent) {
    activeElement.attachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.addEventListener('propertychange', handlePropertyChange, false);
  }
}

/**
 * (For IE <=11) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;

  if (activeElement.detachEvent) {
    activeElement.detachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
  }

  activeElement = null;
  activeElementInst = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For IE <=11) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetInstForInputEvent(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topInput) {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return targetInst;
  }
}

function handleEventsForInputEventIE(topLevelType, target, targetInst) {
  if (topLevelType === topLevelTypes.topFocus) {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9-11, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventIE(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementInst;
    }
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topClick) {
    return targetInst;
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
        event.type = 'change';
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }
  }

};

module.exports = ChangeEventPlugin;
},{"./EventConstants":105,"./EventPluginHub":106,"./EventPropagators":109,"./ReactDOMComponentTree":130,"./ReactUpdates":180,"./SyntheticEvent":189,"./getEventTarget":213,"./isEventSupported":220,"./isTextInputElement":221,"fbjs/lib/ExecutionEnvironment":5,"fbjs/lib/keyOf":23}],96:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMChildrenOperations
 */

'use strict';

var DOMLazyTree = require('./DOMLazyTree');
var Danger = require('./Danger');
var ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstrumentation = require('./ReactInstrumentation');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setInnerHTML = require('./setInnerHTML');
var setTextContent = require('./setTextContent');

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getHostNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }

  if ("build" !== 'production') {
    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
  }
}

var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
if ("build" !== 'production') {
  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
    if (prevInstance._debugID !== 0) {
      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
    } else {
      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
      if (nextInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
      }
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function (parentNode, updates) {
    if ("build" !== 'production') {
      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
    }

    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          if ("build" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
          }
          break;
        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          if ("build" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
          }
          break;
        case ReactMultiChildUpdateTypes.SET_MARKUP:
          setInnerHTML(parentNode, update.content);
          if ("build" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
          }
          break;
        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
          setTextContent(parentNode, update.content);
          if ("build" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
          }
          break;
        case ReactMultiChildUpdateTypes.REMOVE_NODE:
          removeChild(parentNode, update.fromNode);
          if ("build" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
          }
          break;
      }
    }
  }

};

module.exports = DOMChildrenOperations;
},{"./DOMLazyTree":97,"./Danger":101,"./ReactDOMComponentTree":130,"./ReactInstrumentation":162,"./ReactMultiChildUpdateTypes":167,"./createMicrosoftUnsafeLocalFunction":204,"./setInnerHTML":226,"./setTextContent":227}],97:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMLazyTree
 */

'use strict';

var DOMNamespaces = require('./DOMNamespaces');
var setInnerHTML = require('./setInnerHTML');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setTextContent = require('./setTextContent');

var ELEMENT_NODE_TYPE = 1;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    setInnerHTML(node, tree.html);
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level. Also, some <object> plugins (like Flash Player) will read
  // <param> nodes immediately upon insertion into the DOM, so <object>
  // must also be populated prior to insertion into the DOM.
  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    setInnerHTML(tree.node, html);
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function toString() {
  return this.node.nodeName;
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null,
    toString: toString
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;
},{"./DOMNamespaces":98,"./createMicrosoftUnsafeLocalFunction":204,"./setInnerHTML":226,"./setTextContent":227}],98:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMNamespaces
 */

'use strict';

var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;
},{}],99:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMProperty
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ? "build" !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? "build" !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

      if ("build" !== 'production') {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if ("build" !== 'production') {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   * @type {Object}
   */
  getPossibleStandardName: "build" !== 'production' ? {} : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function (attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;
},{"./reactProdInvariant":224,"fbjs/lib/invariant":19}],100:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMPropertyOperations
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMInstrumentation = require('./ReactDOMInstrumentation');
var ReactInstrumentation = require('./ReactInstrumentation');

var quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');
var warning = require('fbjs/lib/warning');

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  "build" !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function (id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function (node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function () {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function (node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function (name, value) {
    if ("build" !== 'production') {
      ReactDOMInstrumentation.debugTool.onCreateMarkupForProperty(name, value);
    }
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function (name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function (node, name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
        return;
      } else if (propertyInfo.mustUseProperty) {
        // Contrary to `setAttribute`, object properties are properly
        // `toString`ed by IE8/9.
        node[propertyInfo.propertyName] = value;
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
      return;
    }

    if ("build" !== 'production') {
      ReactDOMInstrumentation.debugTool.onSetValueForProperty(node, name, value);
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
    }
  },

  setValueForAttribute: function (node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }

    if ("build" !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
    }
  },

  /**
   * Deletes an attributes from a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForAttribute: function (node, name) {
    node.removeAttribute(name);
    if ("build" !== 'production') {
      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function (node, name) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          node[propName] = false;
        } else {
          node[propName] = '';
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }

    if ("build" !== 'production') {
      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
    }
  }

};

module.exports = DOMPropertyOperations;
},{"./DOMProperty":99,"./ReactDOMComponentTree":130,"./ReactDOMInstrumentation":138,"./ReactInstrumentation":162,"./quoteAttributeValueForBrowser":223,"fbjs/lib/warning":29}],101:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Danger
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMLazyTree = require('./DOMLazyTree');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');
var emptyFunction = require('fbjs/lib/emptyFunction');
var invariant = require('fbjs/lib/invariant');

var Danger = {

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ? "build" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
    !markup ? "build" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
    !(oldChild.nodeName !== 'HTML') ? "build" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }

};

module.exports = Danger;
},{"./DOMLazyTree":97,"./reactProdInvariant":224,"fbjs/lib/ExecutionEnvironment":5,"fbjs/lib/createNodesFromMarkup":10,"fbjs/lib/emptyFunction":11,"fbjs/lib/invariant":19}],102:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DefaultEventPluginOrder
 */

'use strict';

var keyOf = require('fbjs/lib/keyOf');

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

module.exports = DefaultEventPluginOrder;
},{"fbjs/lib/keyOf":23}],103:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DisabledInputUtils
 */

'use strict';

var disableableMouseListenerNames = {
  onClick: true,
  onDoubleClick: true,
  onMouseDown: true,
  onMouseMove: true,
  onMouseUp: true,

  onClickCapture: true,
  onDoubleClickCapture: true,
  onMouseDownCapture: true,
  onMouseMoveCapture: true,
  onMouseUpCapture: true
};

/**
 * Implements a host component that does not receive mouse events
 * when `disabled` is set.
 */
var DisabledInputUtils = {
  getHostProps: function (inst, props) {
    if (!props.disabled) {
      return props;
    }

    // Copy the props, except the mouse listeners
    var hostProps = {};
    for (var key in props) {
      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
        hostProps[key] = props[key];
      }
    }

    return hostProps;
  }
};

module.exports = DisabledInputUtils;
},{}],104:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EnterLeaveEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');

var keyOf = require('fbjs/lib/keyOf');

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  mouseEnter: {
    registrationName: keyOf({ onMouseEnter: null }),
    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
  },
  mouseLeave: {
    registrationName: keyOf({ onMouseLeave: null }),
    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
  }
};

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === topLevelTypes.topMouseOut) {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }

};

module.exports = EnterLeaveEventPlugin;
},{"./EventConstants":105,"./EventPropagators":109,"./ReactDOMComponentTree":130,"./SyntheticMouseEvent":193,"fbjs/lib/keyOf":23}],105:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventConstants
 */

'use strict';

var keyMirror = require('fbjs/lib/keyMirror');

var PropagationPhases = keyMirror({ bubbled: null, captured: null });

/**
 * Types of raw signals from the browser caught at the top level.
 */
var topLevelTypes = keyMirror({
  topAbort: null,
  topAnimationEnd: null,
  topAnimationIteration: null,
  topAnimationStart: null,
  topBlur: null,
  topCanPlay: null,
  topCanPlayThrough: null,
  topChange: null,
  topClick: null,
  topCompositionEnd: null,
  topCompositionStart: null,
  topCompositionUpdate: null,
  topContextMenu: null,
  topCopy: null,
  topCut: null,
  topDoubleClick: null,
  topDrag: null,
  topDragEnd: null,
  topDragEnter: null,
  topDragExit: null,
  topDragLeave: null,
  topDragOver: null,
  topDragStart: null,
  topDrop: null,
  topDurationChange: null,
  topEmptied: null,
  topEncrypted: null,
  topEnded: null,
  topError: null,
  topFocus: null,
  topInput: null,
  topInvalid: null,
  topKeyDown: null,
  topKeyPress: null,
  topKeyUp: null,
  topLoad: null,
  topLoadedData: null,
  topLoadedMetadata: null,
  topLoadStart: null,
  topMouseDown: null,
  topMouseMove: null,
  topMouseOut: null,
  topMouseOver: null,
  topMouseUp: null,
  topPaste: null,
  topPause: null,
  topPlay: null,
  topPlaying: null,
  topProgress: null,
  topRateChange: null,
  topReset: null,
  topScroll: null,
  topSeeked: null,
  topSeeking: null,
  topSelectionChange: null,
  topStalled: null,
  topSubmit: null,
  topSuspend: null,
  topTextInput: null,
  topTimeUpdate: null,
  topTouchCancel: null,
  topTouchEnd: null,
  topTouchMove: null,
  topTouchStart: null,
  topTransitionEnd: null,
  topVolumeChange: null,
  topWaiting: null,
  topWheel: null
});

var EventConstants = {
  topLevelTypes: topLevelTypes,
  PropagationPhases: PropagationPhases
};

module.exports = EventConstants;
},{"fbjs/lib/keyMirror":22}],106:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginHub
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var EventPluginRegistry = require('./EventPluginRegistry');
var EventPluginUtils = require('./EventPluginUtils');
var ReactErrorUtils = require('./ReactErrorUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var invariant = require('fbjs/lib/invariant');

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  /**
   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function (inst, registrationName, listener) {
    !(typeof listener === 'function') ? "build" !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[inst._rootNodeID] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function (inst, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    return bankForRegistrationName && bankForRegistrationName[inst._rootNodeID];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function (inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      delete bankForRegistrationName[inst._rootNodeID];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function (inst) {
    for (var registrationName in listenerBank) {
      if (!listenerBank.hasOwnProperty(registrationName)) {
        continue;
      }

      if (!listenerBank[registrationName][inst._rootNodeID]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][inst._rootNodeID];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function (events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function (simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ? "build" !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function () {
    listenerBank = {};
  },

  __getListenerBank: function () {
    return listenerBank;
  }

};

module.exports = EventPluginHub;
},{"./EventPluginRegistry":107,"./EventPluginUtils":108,"./ReactErrorUtils":153,"./accumulateInto":200,"./forEachAccumulated":209,"./reactProdInvariant":224,"fbjs/lib/invariant":19}],107:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginRegistry
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Injectable ordering of event plugins.
 */
var EventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!EventPluginOrder) {
    // Wait until an `EventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var PluginModule = namesToPlugins[pluginName];
    var pluginIndex = EventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? "build" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !PluginModule.extractEvents ? "build" !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
    var publishedEvents = PluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? "build" !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? "build" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, PluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ? "build" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;

  if ("build" !== 'production') {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames: "build" !== 'production' ? {} : null,

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function (InjectedEventPluginOrder) {
    !!EventPluginOrder ? "build" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function (injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var PluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
        !!namesToPlugins[pluginName] ? "build" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
        namesToPlugins[pluginName] = PluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function (event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    for (var phase in dispatchConfig.phasedRegistrationNames) {
      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
        continue;
      }
      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
      if (PluginModule) {
        return PluginModule;
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function () {
    EventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if ("build" !== 'production') {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }

};

module.exports = EventPluginRegistry;
},{"./reactProdInvariant":224,"fbjs/lib/invariant":19}],108:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginUtils
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var EventConstants = require('./EventConstants');
var ReactErrorUtils = require('./ReactErrorUtils');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function (Injected) {
    ComponentTree = Injected;
    if ("build" !== 'production') {
      "build" !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function (Injected) {
    TreeTraversal = Injected;
    if ("build" !== 'production') {
      "build" !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

var topLevelTypes = EventConstants.topLevelTypes;

function isEndish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
}

function isMoveish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
}
function isStartish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
}

var validateEventDispatches;
if ("build" !== 'production') {
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    "build" !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if ("build" !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if ("build" !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if ("build" !== 'production') {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ? "build" !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function (node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function (node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function (a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function (a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function (inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function (target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;
},{"./EventConstants":105,"./ReactErrorUtils":153,"./reactProdInvariant":224,"fbjs/lib/invariant":19,"fbjs/lib/warning":29}],109:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPropagators
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var warning = require('fbjs/lib/warning');

var PropagationPhases = EventConstants.PropagationPhases;
var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, upwards, event) {
  if ("build" !== 'production') {
    "build" !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;
},{"./EventConstants":105,"./EventPluginHub":106,"./EventPluginUtils":108,"./accumulateInto":200,"./forEachAccumulated":209,"fbjs/lib/warning":29}],110:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule FallbackCompositionState
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function () {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function () {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function () {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;
},{"./PooledClass":114,"./getTextContentAccessor":217,"object-assign":32}],111:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule HTMLDOMPropertyConfig
 */

'use strict';

var DOMProperty = require('./DOMProperty');

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: 0,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {}
};

module.exports = HTMLDOMPropertyConfig;
},{"./DOMProperty":99}],112:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule KeyEscapeUtils
 * 
 */

'use strict';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;
},{}],113:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule LinkedValueUtils
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypes = require('./ReactPropTypes');
var ReactPropTypeLocations = require('./ReactPropTypeLocations');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? "build" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ? "build" !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ? "build" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
}

var propTypes = {
  value: function (props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function (props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: ReactPropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function (tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
        "build" !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function (inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function (inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function (inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;
},{"./ReactPropTypeLocations":172,"./ReactPropTypes":173,"./reactProdInvariant":224,"fbjs/lib/invariant":19,"fbjs/lib/warning":29}],114:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule PooledClass
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4, a5);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4, a5);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? "build" !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler,
  fiveArgumentPooler: fiveArgumentPooler
};

module.exports = PooledClass;
},{"./reactProdInvariant":224,"fbjs/lib/invariant":19}],115:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule React
 */

'use strict';

var _assign = require('object-assign');

var ReactChildren = require('./ReactChildren');
var ReactComponent = require('./ReactComponent');
var ReactClass = require('./ReactClass');
var ReactDOMFactories = require('./ReactDOMFactories');
var ReactElement = require('./ReactElement');
var ReactPropTypes = require('./ReactPropTypes');
var ReactVersion = require('./ReactVersion');

var onlyChild = require('./onlyChild');
var warning = require('fbjs/lib/warning');

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if ("build" !== 'production') {
  var ReactElementValidator = require('./ReactElementValidator');
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;

if ("build" !== 'production') {
  var warned = false;
  __spread = function () {
    "build" !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
    warned = true;
    return _assign.apply(null, arguments);
  };
}

var React = {

  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: ReactClass.createClass,
  createFactory: createFactory,
  createMixin: function (mixin) {
    // Currently a noop. Will be used to validate and trace mixins.
    return mixin;
  },

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

module.exports = React;
},{"./ReactChildren":118,"./ReactClass":119,"./ReactComponent":120,"./ReactDOMFactories":134,"./ReactElement":150,"./ReactElementValidator":151,"./ReactPropTypes":173,"./ReactVersion":181,"./onlyChild":222,"fbjs/lib/warning":29,"object-assign":32}],116:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactBrowserEventEmitter
 */

'use strict';

var _assign = require('object-assign');

var EventConstants = require('./EventConstants');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactEventEmitterMixin = require('./ReactEventEmitterMixin');
var ViewportMetrics = require('./ViewportMetrics');

var getVendorPrefixedEventName = require('./getVendorPrefixedEventName');
var isEventSupported = require('./isEventSupported');

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function (ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function (enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function () {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function (registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    var topLevelTypes = EventConstants.topLevelTypes;
    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === topLevelTypes.topWheel) {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === topLevelTypes.topScroll) {

          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening[topLevelTypes.topBlur] = true;
          isListening[topLevelTypes.topFocus] = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function () {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }

});

module.exports = ReactBrowserEventEmitter;
},{"./EventConstants":105,"./EventPluginRegistry":107,"./ReactEventEmitterMixin":154,"./ViewportMetrics":199,"./getVendorPrefixedEventName":218,"./isEventSupported":220,"object-assign":32}],117:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildReconciler
 */

'use strict';

var ReactReconciler = require('./ReactReconciler');

var instantiateReactComponent = require('./instantiateReactComponent');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

function instantiateChild(childInstances, child, name, selfDebugID) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if ("build" !== 'production') {
    var ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
    "build" !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // __DEV__ only
  ) {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if ("build" !== 'production') {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function (prevChildren, nextChildren, removedNodes, transaction, context) {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function (renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }

};

module.exports = ReactChildReconciler;
},{"./KeyEscapeUtils":112,"./ReactComponentTreeDevtool":123,"./ReactReconciler":175,"./instantiateReactComponent":219,"./shouldUpdateReactComponent":228,"./traverseAllChildren":229,"fbjs/lib/warning":29}],118:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildren
 */

'use strict';

var PooledClass = require('./PooledClass');
var ReactElement = require('./ReactElement');

var emptyFunction = require('fbjs/lib/emptyFunction');
var traverseAllChildren = require('./traverseAllChildren');

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func;
  var context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result;
  var keyPrefix = bookKeeping.keyPrefix;
  var func = bookKeeping.func;
  var context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;
},{"./PooledClass":114,"./ReactElement":150,"./traverseAllChildren":229,"fbjs/lib/emptyFunction":11}],119:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactClass
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var ReactComponent = require('./ReactComponent');
var ReactElement = require('./ReactElement');
var ReactPropTypeLocations = require('./ReactPropTypeLocations');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var keyMirror = require('fbjs/lib/keyMirror');
var keyOf = require('fbjs/lib/keyOf');
var warning = require('fbjs/lib/warning');

var MIXINS_KEY = keyOf({ mixins: null });

/**
 * Policies that describe methods in `ReactClassInterface`.
 */
var SpecPolicy = keyMirror({
  /**
   * These methods may be defined only once by the class specification or mixin.
   */
  DEFINE_ONCE: null,
  /**
   * These methods may be defined by both the class specification and mixins.
   * Subsequent definitions will be chained. These methods must return void.
   */
  DEFINE_MANY: null,
  /**
   * These methods are overriding the base class.
   */
  OVERRIDE_BASE: null,
  /**
   * These methods are similar to DEFINE_MANY, except we assume they return
   * objects. We try to merge the keys of the return values of all the mixed in
   * functions. If there is a key conflict we throw.
   */
  DEFINE_MANY_MERGED: null
});

var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or host components.
 *
 * To create a new type of `ReactClass`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactClassInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will be available on the prototype.
 *
 * @interface ReactClassInterface
 * @internal
 */
var ReactClassInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: SpecPolicy.DEFINE_MANY,

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: SpecPolicy.DEFINE_MANY,

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * @return {object}
   * @optional
   */
  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @nosideeffects
   * @required
   */
  render: SpecPolicy.DEFINE_ONCE,

  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: SpecPolicy.DEFINE_MANY,

  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: SpecPolicy.OVERRIDE_BASE

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function (Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function (Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  childContextTypes: function (Constructor, childContextTypes) {
    if ("build" !== 'production') {
      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
    }
    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
  },
  contextTypes: function (Constructor, contextTypes) {
    if ("build" !== 'production') {
      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
    }
    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function (Constructor, getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
    } else {
      Constructor.getDefaultProps = getDefaultProps;
    }
  },
  propTypes: function (Constructor, propTypes) {
    if ("build" !== 'production') {
      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
    }
    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
  },
  statics: function (Constructor, statics) {
    mixStaticSpecIntoComponent(Constructor, statics);
  },
  autobind: function () {} };

// noop
function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      // use a warning instead of an invariant so components
      // don't show up in prod but only in __DEV__
      "build" !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
    }
  }
}

function validateMethodOverride(isAlreadyDefined, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactClassMixin.hasOwnProperty(name)) {
    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? "build" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (isAlreadyDefined) {
    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? "build" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
  }
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building React classes.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    return;
  }

  !(typeof spec !== 'function') ? "build" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
  !!ReactElement.isValidElement(spec) ? "build" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

  var proto = Constructor.prototype;
  var autoBindPairs = proto.__reactAutoBindPairs;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above.
      continue;
    }

    var property = spec[name];
    var isAlreadyDefined = proto.hasOwnProperty(name);
    validateMethodOverride(isAlreadyDefined, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactClass methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
      var isFunction = typeof property === 'function';
      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

      if (shouldAutoBind) {
        autoBindPairs.push(name, property);
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          // These cases should already be caught by validateMethodOverride.
          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? "build" !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if ("build" !== 'production') {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    !!isReserved ? "build" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

    var isInherited = name in Constructor;
    !!isInherited ? "build" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeIntoWithNoDuplicateKeys(one, two) {
  !(one && two && typeof one === 'object' && typeof two === 'object') ? "build" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      !(one[key] === undefined) ? "build" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
      one[key] = two[key];
    }
  }
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * Binds a method to the component.
 *
 * @param {object} component Component whose method is going to be bound.
 * @param {function} method Method to be bound.
 * @return {function} The bound method.
 */
function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if ("build" !== 'production') {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    boundMethod.bind = function (newThis) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      // User is trying to bind() an autobound method; we effectively will
      // ignore the value of "this" that the user is trying to use, so
      // let's warn.
      if (newThis !== component && newThis !== null) {
        "build" !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
      } else if (!args.length) {
        "build" !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
    };
  }
  return boundMethod;
}

/**
 * Binds all auto-bound methods in a component.
 *
 * @param {object} component Component whose method is going to be bound.
 */
function bindAutoBindMethods(component) {
  var pairs = component.__reactAutoBindPairs;
  for (var i = 0; i < pairs.length; i += 2) {
    var autoBindKey = pairs[i];
    var method = pairs[i + 1];
    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}

/**
 * Add more to the ReactClass base class. These are all legacy features and
 * therefore not already part of the modern ReactComponent.
 */
var ReactClassMixin = {

  /**
   * TODO: This will be deprecated because state should always keep a consistent
   * type signature and the only use case for this, is to avoid that.
   */
  replaceState: function (newState, callback) {
    this.updater.enqueueReplaceState(this, newState);
    if (callback) {
      this.updater.enqueueCallback(this, callback, 'replaceState');
    }
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function () {
    return this.updater.isMounted(this);
  }
};

var ReactClassComponent = function () {};
_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

/**
 * Module for creating composite components.
 *
 * @class ReactClass
 */
var ReactClass = {

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function (spec) {
    var Constructor = function (props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if ("build" !== 'production') {
        "build" !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if ("build" !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? "build" !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

      this.state = initialState;
    };
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if ("build" !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    !Constructor.prototype.render ? "build" !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

    if ("build" !== 'production') {
      "build" !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
      "build" !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  },

  injection: {
    injectMixin: function (mixin) {
      injectedMixins.push(mixin);
    }
  }

};

module.exports = ReactClass;
},{"./ReactComponent":120,"./ReactElement":150,"./ReactNoopUpdateQueue":169,"./ReactPropTypeLocationNames":171,"./ReactPropTypeLocations":172,"./reactProdInvariant":224,"fbjs/lib/emptyObject":12,"fbjs/lib/invariant":19,"fbjs/lib/keyMirror":22,"fbjs/lib/keyOf":23,"fbjs/lib/warning":29,"object-assign":32}],120:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponent
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var canDefineProperty = require('./canDefineProperty');
var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? "build" !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if ("build" !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          "build" !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

module.exports = ReactComponent;
},{"./ReactNoopUpdateQueue":169,"./canDefineProperty":202,"./reactProdInvariant":224,"fbjs/lib/emptyObject":12,"fbjs/lib/invariant":19,"fbjs/lib/warning":29}],121:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentBrowserEnvironment
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMIDOperations = require('./ReactDOMIDOperations');

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {

  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,

  /**
   * If a particular environment requires that some resources be cleaned up,
   * specify this in the injected Mixin. In the DOM, we would likely want to
   * purge any cached node ID lookups.
   *
   * @private
   */
  unmountIDFromEnvironment: function (rootNodeID) {}

};

module.exports = ReactComponentBrowserEnvironment;
},{"./DOMChildrenOperations":96,"./ReactDOMIDOperations":136}],122:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentEnvironment
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var injected = false;

var ReactComponentEnvironment = {

  /**
   * Optionally injectable environment dependent cleanup hook. (server vs.
   * browser etc). Example: A browser system caches DOM nodes based on component
   * ID and must remove that cache entry when this instance is unmounted.
   */
  unmountIDFromEnvironment: null,

  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function (environment) {
      !!injected ? "build" !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }

};

module.exports = ReactComponentEnvironment;
},{"./reactProdInvariant":224,"fbjs/lib/invariant":19}],123:[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentTreeDevtool
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var tree = {};
var unmountedIDs = {};
var rootIDs = {};

function updateTree(id, update) {
  if (!tree[id]) {
    tree[id] = {
      element: null,
      parentID: null,
      ownerID: null,
      text: null,
      childIDs: [],
      displayName: 'Unknown',
      isMounted: false,
      updateCount: 0
    };
  }
  update(tree[id]);
}

function purgeDeep(id) {
  var item = tree[id];
  if (item) {
    var childIDs = item.childIDs;

    delete tree[id];
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function describeID(id) {
  var name = ReactComponentTreeDevtool.getDisplayName(id);
  var element = ReactComponentTreeDevtool.getElement(id);
  var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeDevtool.getDisplayName(ownerID);
  }
  "build" !== 'production' ? warning(element, 'ReactComponentTreeDevtool: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeDevtool = {
  onSetDisplayName: function (id, displayName) {
    updateTree(id, function (item) {
      return item.displayName = displayName;
    });
  },
  onSetChildren: function (id, nextChildIDs) {
    updateTree(id, function (item) {
      item.childIDs = nextChildIDs;

      nextChildIDs.forEach(function (nextChildID) {
        var nextChild = tree[nextChildID];
        !nextChild ? "build" !== 'production' ? invariant(false, 'Expected devtool events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('68') : void 0;
        !(nextChild.displayName != null) ? "build" !== 'production' ? invariant(false, 'Expected onSetDisplayName() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('69') : void 0;
        !(nextChild.childIDs != null || nextChild.text != null) ? "build" !== 'production' ? invariant(false, 'Expected onSetChildren() or onSetText() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('70') : void 0;
        !nextChild.isMounted ? "build" !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
        if (nextChild.parentID == null) {
          nextChild.parentID = id;
          // TODO: This shouldn't be necessary but mounting a new root during in
          // componentWillMount currently causes not-yet-mounted components to
          // be purged from our tree data so their parent ID is missing.
        }
        !(nextChild.parentID === id) ? "build" !== 'production' ? invariant(false, 'Expected onSetParent() and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('72', nextChildID, nextChild.parentID, id) : void 0;
      });
    });
  },
  onSetOwner: function (id, ownerID) {
    updateTree(id, function (item) {
      return item.ownerID = ownerID;
    });
  },
  onSetParent: function (id, parentID) {
    updateTree(id, function (item) {
      return item.parentID = parentID;
    });
  },
  onSetText: function (id, text) {
    updateTree(id, function (item) {
      return item.text = text;
    });
  },
  onBeforeMountComponent: function (id, element) {
    updateTree(id, function (item) {
      return item.element = element;
    });
  },
  onBeforeUpdateComponent: function (id, element) {
    updateTree(id, function (item) {
      return item.element = element;
    });
  },
  onMountComponent: function (id) {
    updateTree(id, function (item) {
      return item.isMounted = true;
    });
  },
  onMountRootComponent: function (id) {
    rootIDs[id] = true;
  },
  onUpdateComponent: function (id) {
    updateTree(id, function (item) {
      return item.updateCount++;
    });
  },
  onUnmountComponent: function (id) {
    updateTree(id, function (item) {
      return item.isMounted = false;
    });
    unmountedIDs[id] = true;
    delete rootIDs[id];
  },
  purgeUnmountedComponents: function () {
    if (ReactComponentTreeDevtool._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var id in unmountedIDs) {
      purgeDeep(id);
    }
    unmountedIDs = {};
  },
  isMounted: function (id) {
    var item = tree[id];
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function (topElement) {
    var info = '';
    if (topElement) {
      var type = topElement.type;
      var name = typeof type === 'function' ? type.displayName || type.name : type;
      var owner = topElement._owner;
      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeDevtool.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function (id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeDevtool.getParentID(id);
    }
    return info;
  },
  getChildIDs: function (id) {
    var item = tree[id];
    return item ? item.childIDs : [];
  },
  getDisplayName: function (id) {
    var item = tree[id];
    return item ? item.displayName : 'Unknown';
  },
  getElement: function (id) {
    var item = tree[id];
    return item ? item.element : null;
  },
  getOwnerID: function (id) {
    var item = tree[id];
    return item ? item.ownerID : null;
  },
  getParentID: function (id) {
    var item = tree[id];
    return item ? item.parentID : null;
  },
  getSource: function (id) {
    var item = tree[id];
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function (id) {
    var item = tree[id];
    return item ? item.text : null;
  },
  getUpdateCount: function (id) {
    var item = tree[id];
    return item ? item.updateCount : 0;
  },
  getRootIDs: function () {
    return Object.keys(rootIDs);
  },
  getRegisteredIDs: function () {
    return Object.keys(tree);
  }
};

module.exports = ReactComponentTreeDevtool;
},{"./ReactCurrentOwner":125,"./reactProdInvariant":224,"fbjs/lib/invariant":19,"fbjs/lib/warning":29}],124:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCompositeComponent
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactElement = require('./ReactElement');
var ReactErrorUtils = require('./ReactErrorUtils');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactNodeTypes = require('./ReactNodeTypes');
var ReactPropTypeLocations = require('./ReactPropTypeLocations');
var ReactReconciler = require('./ReactReconciler');

var checkReactTypeSpec = require('./checkReactTypeSpec');

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if ("build" !== 'production') {
    "build" !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
    "build" !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

function invokeComponentDidMountWithTimer() {
  var publicInstance = this._instance;
  if (this._debugID !== 0) {
    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
  }
  publicInstance.componentDidMount();
  if (this._debugID !== 0) {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
  }
}

function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
  var publicInstance = this._instance;
  if (this._debugID !== 0) {
    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
  }
  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
  if (this._debugID !== 0) {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
  }
}

function shouldConstruct(Component) {
  return Component.prototype && Component.prototype.isReactComponent;
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponentMixin = {

  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function (element) {
    this._currentElement = element;
    this._rootNodeID = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    // See ReactUpdateQueue
    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;

    // ComponentWillUnmount shall only be called once
    this._calledComponentWillUnmount = false;

    if ("build" !== 'production') {
      this._warnedAboutRefsInRender = false;
    }
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} hostParent
   * @param {?object} hostContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    // Initialize the public class
    var inst = this._constructComponent(publicProps, publicContext, updateQueue);
    var renderedElement;

    // Support functional components
    if (!shouldConstruct(Component) && (inst == null || inst.render == null)) {
      renderedElement = inst;
      warnIfInvalidElement(Component, renderedElement);
      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? "build" !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
      inst = new StatelessComponent(Component);
    }

    if ("build" !== 'production') {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        "build" !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      "build" !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if ("build" !== 'production') {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      "build" !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      "build" !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      "build" !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      "build" !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      "build" !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      "build" !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      "build" !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? "build" !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if ("build" !== 'production') {
        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    return markup;
  },

  _constructComponent: function (publicProps, publicContext, updateQueue) {
    if ("build" !== 'production') {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function (publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;
    var instanceOrElement;
    if (shouldConstruct(Component)) {
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
        }
      }
      instanceOrElement = new Component(publicProps, publicContext, updateQueue);
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
        }
      }
    } else {
      // This can still be an instance in case of factory components
      // but we'll count this as time spent rendering as the more common case.
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
        }
      }
      instanceOrElement = Component(publicProps, publicContext, updateQueue);
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
        }
      }
    }
    return instanceOrElement;
  },

  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onError();
        }
      }
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var inst = this._instance;
    if (inst.componentWillMount) {
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
        }
      }
      inst.componentWillMount();
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
        }
      }
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
    );
    this._renderedComponent = child;
    if ("build" !== 'production') {
      if (child._debugID !== 0 && this._debugID !== 0) {
        ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
      }
    }

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context));

    if ("build" !== 'production') {
      if (this._debugID !== 0) {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
      }
    }

    return markup;
  },

  getHostNode: function () {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (safely) {
    if (!this._renderedComponent) {
      return;
    }
    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
        }
      }
      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        inst.componentWillUnmount();
      }
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = null;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function (context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function (context) {
    var maskedContext = this._maskContext(context);
    if ("build" !== 'production') {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function (currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    if ("build" !== 'production') {
      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
    }
    var childContext = inst.getChildContext && inst.getChildContext();
    if ("build" !== 'production') {
      ReactInstrumentation.debugTool.onEndProcessingChildContext();
    }
    if (childContext) {
      !(typeof Component.childContextTypes === 'object') ? "build" !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
      if ("build" !== 'production') {
        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ? "build" !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Assert that the context types are valid
   *
   * @param {object} typeSpecs Map of context field to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkContextTypes: function (typeSpecs, values, location) {
    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
  },

  receiveComponent: function (nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      this._updateBatchNumber = null;
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    !(inst != null) ? "build" !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

    var willReceive = false;
    var nextContext;
    var nextProps;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    nextProps = nextParentElement.props;

    // Not a simple state update but a props update
    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
        }
      }
      inst.componentWillReceiveProps(nextProps, nextContext);
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
        }
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;

    if (!this._pendingForceUpdate && inst.shouldComponentUpdate) {
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
        }
      }
      shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
        }
      }
    }

    if ("build" !== 'production') {
      "build" !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function (props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
        }
      }
      inst.componentWillUpdate(nextProps, nextState, nextContext);
      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
        }
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      if ("build" !== 'production') {
        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function (transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();
    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
      );
      this._renderedComponent = child;
      if ("build" !== 'production') {
        if (child._debugID !== 0 && this._debugID !== 0) {
          ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
        }
      }

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context));

      if ("build" !== 'production') {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function () {
    var inst = this._instance;

    if ("build" !== 'production') {
      if (this._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
      }
    }
    var renderedComponent = inst.render();
    if ("build" !== 'production') {
      if (this._debugID !== 0) {
        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
      }
    }

    if ("build" !== 'production') {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedComponent === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedComponent = null;
      }
    }

    return renderedComponent;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function () {
    var renderedComponent;
    ReactCurrentOwner.current = this;
    try {
      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
    } finally {
      ReactCurrentOwner.current = null;
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? "build" !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

    return renderedComponent;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function (ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ? "build" !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if ("build" !== 'production') {
      var componentName = component && component.getName ? component.getName() : 'a component';
      "build" !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function (ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function () {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function () {
    var inst = this._instance;
    if (inst instanceof StatelessComponent) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null

};

var ReactCompositeComponent = {

  Mixin: ReactCompositeComponentMixin

};

module.exports = ReactCompositeComponent;
},{"./ReactComponentEnvironment":122,"./ReactCurrentOwner":125,"./ReactElement":150,"./ReactErrorUtils":153,"./ReactInstanceMap":161,"./ReactInstrumentation":162,"./ReactNodeTypes":168,"./ReactPropTypeLocations":172,"./ReactReconciler":175,"./checkReactTypeSpec":203,"./reactProdInvariant":224,"./shouldUpdateReactComponent":228,"fbjs/lib/emptyObject":12,"fbjs/lib/invariant":19,"fbjs/lib/warning":29,"object-assign":32}],125:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCurrentOwner
 */

'use strict';

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */

var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;
},{}],126:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOM
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDefaultInjection = require('./ReactDefaultInjection');
var ReactMount = require('./ReactMount');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdates = require('./ReactUpdates');
var ReactVersion = require('./ReactVersion');

var findDOMNode = require('./findDOMNode');
var getHostComponentFromComposite = require('./getHostComponentFromComposite');
var renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');
var warning = require('fbjs/lib/warning');

ReactDefaultInjection.inject();

var React = {
  findDOMNode: findDOMNode,
  render: ReactMount.render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
/* eslint-enable camelcase */
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function (inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getHostComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if ("build" !== 'production') {
  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    "build" !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    "build" !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        "build" !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

module.exports = React;
},{"./ReactDOMComponentTree":130,"./ReactDefaultInjection":149,"./ReactMount":165,"./ReactReconciler":175,"./ReactUpdates":180,"./ReactVersion":181,"./findDOMNode":207,"./getHostComponentFromComposite":214,"./renderSubtreeIntoContainer":225,"fbjs/lib/ExecutionEnvironment":5,"fbjs/lib/warning":29}],127:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMButton
 */

'use strict';

var DisabledInputUtils = require('./DisabledInputUtils');

/**
 * Implements a <button> host component that does not receive mouse events
 * when `disabled` is set.
 */
var ReactDOMButton = {
  getHostProps: DisabledInputUtils.getHostProps
};

module.exports = ReactDOMButton;
},{"./DisabledInputUtils":103}],128:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponent
 */

/* global hasOwnProperty:true */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var AutoFocusUtils = require('./AutoFocusUtils');
var CSSPropertyOperations = require('./CSSPropertyOperations');
var DOMLazyTree = require('./DOMLazyTree');
var DOMNamespaces = require('./DOMNamespaces');
var DOMProperty = require('./DOMProperty');
var DOMPropertyOperations = require('./DOMPropertyOperations');
var EventConstants = require('./EventConstants');
var EventPluginHub = require('./EventPluginHub');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');
var ReactDOMButton = require('./ReactDOMButton');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMInput = require('./ReactDOMInput');
var ReactDOMOption = require('./ReactDOMOption');
var ReactDOMSelect = require('./ReactDOMSelect');
var ReactDOMTextarea = require('./ReactDOMTextarea');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMultiChild = require('./ReactMultiChild');
var ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');

var emptyFunction = require('fbjs/lib/emptyFunction');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var isEventSupported = require('./isEventSupported');
var keyOf = require('fbjs/lib/keyOf');
var shallowEqual = require('fbjs/lib/shallowEqual');
var validateDOMNesting = require('./validateDOMNesting');
var warning = require('fbjs/lib/warning');

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { 'string': true, 'number': true };

var STYLE = keyOf({ style: null });
var HTML = keyOf({ __html: null });
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
var DOC_FRAGMENT_TYPE = 11;

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if (typeof obj === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

  "build" !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? "build" !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? "build" !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? "build" !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
  }
  if ("build" !== 'production') {
    "build" !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    "build" !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    "build" !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? "build" !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (transaction instanceof ReactServerRenderingTransaction) {
    return;
  }
  if ("build" !== 'production') {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    "build" !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
  }
  var containerInfo = inst._hostContainerInfo;
  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function inputPostMount() {
  var inst = this;
  ReactDOMInput.postMountWrapper(inst);
}

function textareaPostMount() {
  var inst = this;
  ReactDOMTextarea.postMountWrapper(inst);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

var setContentChildForInstrumentation = emptyFunction;
if ("build" !== 'production') {
  setContentChildForInstrumentation = function (content) {
    var hasExistingContent = this._contentDebugID != null;
    var debugID = this._debugID;
    var contentDebugID = debugID + '#text';

    if (content == null) {
      if (hasExistingContent) {
        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
      }
      this._contentDebugID = null;
      return;
    }

    this._contentDebugID = contentDebugID;
    var text = '' + content;

    ReactInstrumentation.debugTool.onSetDisplayName(contentDebugID, '#text');
    ReactInstrumentation.debugTool.onSetParent(contentDebugID, debugID);
    ReactInstrumentation.debugTool.onSetText(contentDebugID, text);

    if (hasExistingContent) {
      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
    } else {
      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
    }
  };
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ? "build" !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
  var node = getNode(inst);
  !node ? "build" !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
      break;
    case 'video':
    case 'audio':

      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
        }
      }
      break;
    case 'source':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  'area': true,
  'base': true,
  'br': true,
  'col': true,
  'embed': true,
  'hr': true,
  'img': true,
  'input': true,
  'keygen': true,
  'link': true,
  'meta': true,
  'param': true,
  'source': true,
  'track': true,
  'wbr': true
};

// NOTE: menuitem's close tag should be omitted, but that causes problems.
var newlineEatingTags = {
  'listing': true,
  'pre': true,
  'textarea': true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  'menuitem': true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ? "build" !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._hostNode = null;
  this._hostParent = null;
  this._rootNodeID = null;
  this._domID = null;
  this._hostContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if ("build" !== 'production') {
    this._ancestorInfo = null;
    setContentChildForInstrumentation.call(this, null);
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the containing DOM component instance
   * @param {?object} info about the host container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    this._rootNodeID = globalIdCounter++;
    this._domID = hostContainerInfo._idCounter++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'button':
        props = ReactDOMButton.getHostProps(this, props, hostParent);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, hostParent);
        props = ReactDOMInput.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, hostParent);
        props = ReactDOMOption.getHostProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, hostParent);
        props = ReactDOMSelect.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, hostParent);
        props = ReactDOMTextarea.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (hostParent != null) {
      namespaceURI = hostParent._namespaceURI;
      parentTag = hostParent._tag;
    } else if (hostContainerInfo._tag) {
      namespaceURI = hostContainerInfo._namespaceURI;
      parentTag = hostContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if ("build" !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo._tag) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else if (props.is) {
          el = ownerDocument.createElement(this._currentElement.type, props.is);
        } else {
          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._hostParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'input':
        transaction.getReactMountReady().enqueue(inputPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'textarea':
        transaction.getReactMountReady().enqueue(textareaPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'select':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'button':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
        break;
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if ("build" !== 'production') {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._hostParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function (transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
        if ("build" !== 'production') {
          setContentChildForInstrumentation.call(this, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function (transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        if ("build" !== 'production') {
          setContentChildForInstrumentation.call(this, contentToUse);
        }
        DOMLazyTree.queueText(lazyTree, contentToUse);
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function (nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevElement, nextElement, context) {
    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'button':
        lastProps = ReactDOMButton.getHostProps(this, lastProps);
        nextProps = ReactDOMButton.getHostProps(this, nextProps);
        break;
      case 'input':
        ReactDOMInput.updateWrapper(this);
        lastProps = ReactDOMInput.getHostProps(this, lastProps);
        nextProps = ReactDOMInput.getHostProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getHostProps(this, lastProps);
        nextProps = ReactDOMOption.getHostProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    if (this._tag === 'select') {
      // <select> value update needs to occur after <option> children
      // reconciliation
      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function (lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, lastProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if ("build" !== 'production') {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
      if ("build" !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
        if ("build" !== 'production') {
          setContentChildForInstrumentation.call(this, nextContent);
        }
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
      if ("build" !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    } else if (nextChildren != null) {
      if ("build" !== 'production') {
        setContentChildForInstrumentation.call(this, null);
      }

      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getHostNode: function () {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function (safely) {
    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
        !false ? "build" !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
    this._rootNodeID = null;
    this._domID = null;
    this._wrapperState = null;

    if ("build" !== 'production') {
      setContentChildForInstrumentation.call(this, null);
    }
  },

  getPublicInstance: function () {
    return getNode(this);
  }

};

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;
},{"./AutoFocusUtils":90,"./CSSPropertyOperations":93,"./DOMLazyTree":97,"./DOMNamespaces":98,"./DOMProperty":99,"./DOMPropertyOperations":100,"./EventConstants":105,"./EventPluginHub":106,"./EventPluginRegistry":107,"./ReactBrowserEventEmitter":116,"./ReactComponentBrowserEnvironment":121,"./ReactDOMButton":127,"./ReactDOMComponentFlags":129,"./ReactDOMComponentTree":130,"./ReactDOMInput":137,"./ReactDOMOption":140,"./ReactDOMSelect":141,"./ReactDOMTextarea":144,"./ReactInstrumentation":162,"./ReactMultiChild":166,"./ReactServerRenderingTransaction":177,"./escapeTextContentForBrowser":206,"./isEventSupported":220,"./reactProdInvariant":224,"./validateDOMNesting":230,"fbjs/lib/emptyFunction":11,"fbjs/lib/invariant":19,"fbjs/lib/keyOf":23,"fbjs/lib/shallowEqual":28,"fbjs/lib/warning":29,"object-assign":32}],129:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponentFlags
 */

'use strict';

var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;
},{}],130:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponentTree
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');

var invariant = require('fbjs/lib/invariant');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Drill down (through composites and empty components) until we get a host or
 * host text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_hostNode` on the rendered host/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var hostInst = getRenderedHostOrTextFromComponent(inst);
  hostInst._hostNode = node;
  node[internalInstanceKey] = hostInst;
}

function uncacheNode(inst) {
  var node = inst._hostNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._hostNode = null;
  }
}

/**
 * Populate `_hostNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
    if (childID == null) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
    !false ? "build" !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._hostNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._hostNode !== undefined) ? "build" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  if (inst._hostNode) {
    return inst._hostNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._hostNode) {
    parents.push(inst);
    !inst._hostParent ? "build" !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
    inst = inst._hostParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._hostNode);
  }

  return inst._hostNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;
},{"./DOMProperty":99,"./ReactDOMComponentFlags":129,"./reactProdInvariant":224,"fbjs/lib/invariant":19}],131:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMContainerInfo
 */

'use strict';

var validateDOMNesting = require('./validateDOMNesting');

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _node: node,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if ("build" !== 'production') {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;
},{"./validateDOMNesting":230}],132:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMDebugTool
 */

'use strict';

var ReactDOMNullInputValuePropDevtool = require('./ReactDOMNullInputValuePropDevtool');
var ReactDOMUnknownPropertyDevtool = require('./ReactDOMUnknownPropertyDevtool');
var ReactDebugTool = require('./ReactDebugTool');

var warning = require('fbjs/lib/warning');

var eventHandlers = [];
var handlerDoesThrowForEvent = {};

function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
  eventHandlers.forEach(function (handler) {
    try {
      if (handler[handlerFunctionName]) {
        handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
      }
    } catch (e) {
      "build" !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
      handlerDoesThrowForEvent[handlerFunctionName] = true;
    }
  });
}

var ReactDOMDebugTool = {
  addDevtool: function (devtool) {
    ReactDebugTool.addDevtool(devtool);
    eventHandlers.push(devtool);
  },
  removeDevtool: function (devtool) {
    ReactDebugTool.removeDevtool(devtool);
    for (var i = 0; i < eventHandlers.length; i++) {
      if (eventHandlers[i] === devtool) {
        eventHandlers.splice(i, 1);
        i--;
      }
    }
  },
  onCreateMarkupForProperty: function (name, value) {
    emitEvent('onCreateMarkupForProperty', name, value);
  },
  onSetValueForProperty: function (node, name, value) {
    emitEvent('onSetValueForProperty', node, name, value);
  },
  onDeleteValueForProperty: function (node, name) {
    emitEvent('onDeleteValueForProperty', node, name);
  },
  onTestEvent: function () {
    emitEvent('onTestEvent');
  }
};

ReactDOMDebugTool.addDevtool(ReactDOMUnknownPropertyDevtool);
ReactDOMDebugTool.addDevtool(ReactDOMNullInputValuePropDevtool);

module.exports = ReactDOMDebugTool;
},{"./ReactDOMNullInputValuePropDevtool":139,"./ReactDOMUnknownPropertyDevtool":146,"./ReactDebugTool":147,"fbjs/lib/warning":29}],133:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMEmptyComponent
 */

'use strict';

var _assign = require('object-assign');

var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var ReactDOMEmptyComponent = function (instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;
  this._hostContainerInfo = null;
  this._domID = null;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var domID = hostContainerInfo._idCounter++;
    this._domID = domID;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function () {},
  getHostNode: function () {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function () {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;
},{"./DOMLazyTree":97,"./ReactDOMComponentTree":130,"object-assign":32}],134:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMFactories
 */

'use strict';

var ReactElement = require('./ReactElement');

var mapObject = require('fbjs/lib/mapObject');

/**
 * Create a factory that creates HTML tag elements.
 *
 * @param {string} tag Tag name (e.g. `div`).
 * @private
 */
function createDOMFactory(tag) {
  if ("build" !== 'production') {
    var ReactElementValidator = require('./ReactElementValidator');
    return ReactElementValidator.createFactory(tag);
  }
  return ReactElement.createFactory(tag);
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOMFactories = mapObject({
  a: 'a',
  abbr: 'abbr',
  address: 'address',
  area: 'area',
  article: 'article',
  aside: 'aside',
  audio: 'audio',
  b: 'b',
  base: 'base',
  bdi: 'bdi',
  bdo: 'bdo',
  big: 'big',
  blockquote: 'blockquote',
  body: 'body',
  br: 'br',
  button: 'button',
  canvas: 'canvas',
  caption: 'caption',
  cite: 'cite',
  code: 'code',
  col: 'col',
  colgroup: 'colgroup',
  data: 'data',
  datalist: 'datalist',
  dd: 'dd',
  del: 'del',
  details: 'details',
  dfn: 'dfn',
  dialog: 'dialog',
  div: 'div',
  dl: 'dl',
  dt: 'dt',
  em: 'em',
  embed: 'embed',
  fieldset: 'fieldset',
  figcaption: 'figcaption',
  figure: 'figure',
  footer: 'footer',
  form: 'form',
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  head: 'head',
  header: 'header',
  hgroup: 'hgroup',
  hr: 'hr',
  html: 'html',
  i: 'i',
  iframe: 'iframe',
  img: 'img',
  input: 'input',
  ins: 'ins',
  kbd: 'kbd',
  keygen: 'keygen',
  label: 'label',
  legend: 'legend',
  li: 'li',
  link: 'link',
  main: 'main',
  map: 'map',
  mark: 'mark',
  menu: 'menu',
  menuitem: 'menuitem',
  meta: 'meta',
  meter: 'meter',
  nav: 'nav',
  noscript: 'noscript',
  object: 'object',
  ol: 'ol',
  optgroup: 'optgroup',
  option: 'option',
  output: 'output',
  p: 'p',
  param: 'param',
  picture: 'picture',
  pre: 'pre',
  progress: 'progress',
  q: 'q',
  rp: 'rp',
  rt: 'rt',
  ruby: 'ruby',
  s: 's',
  samp: 'samp',
  script: 'script',
  section: 'section',
  select: 'select',
  small: 'small',
  source: 'source',
  span: 'span',
  strong: 'strong',
  style: 'style',
  sub: 'sub',
  summary: 'summary',
  sup: 'sup',
  table: 'table',
  tbody: 'tbody',
  td: 'td',
  textarea: 'textarea',
  tfoot: 'tfoot',
  th: 'th',
  thead: 'thead',
  time: 'time',
  title: 'title',
  tr: 'tr',
  track: 'track',
  u: 'u',
  ul: 'ul',
  'var': 'var',
  video: 'video',
  wbr: 'wbr',

  // SVG
  circle: 'circle',
  clipPath: 'clipPath',
  defs: 'defs',
  ellipse: 'ellipse',
  g: 'g',
  image: 'image',
  line: 'line',
  linearGradient: 'linearGradient',
  mask: 'mask',
  path: 'path',
  pattern: 'pattern',
  polygon: 'polygon',
  polyline: 'polyline',
  radialGradient: 'radialGradient',
  rect: 'rect',
  stop: 'stop',
  svg: 'svg',
  text: 'text',
  tspan: 'tspan'

}, createDOMFactory);

module.exports = ReactDOMFactories;
},{"./ReactElement":150,"./ReactElementValidator":151,"fbjs/lib/mapObject":24}],135:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMFeatureFlags
 */

'use strict';

var ReactDOMFeatureFlags = {
  useCreateElement: true
};

module.exports = ReactDOMFeatureFlags;
},{}],136:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMIDOperations
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

module.exports = ReactDOMIDOperations;
},{"./DOMChildrenOperations":96,"./ReactDOMComponentTree":130}],137:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMInput
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var DisabledInputUtils = require('./DisabledInputUtils');
var DOMPropertyOperations = require('./DOMPropertyOperations');
var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked !== undefined : props.value !== undefined;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getHostProps: function (inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var hostProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined
    }, DisabledInputUtils.getHostProps(inst, props), {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if ("build" !== 'production') {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      var owner = inst._currentElement._owner;

      if (props.valueLink !== undefined && !didWarnValueLink) {
        "build" !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        "build" !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        "build" !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        "build" !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnValueDefaultValue = true;
      }
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
      initialValue: props.value != null ? props.value : defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };

    if ("build" !== 'production') {
      inst._wrapperState.controlled = isControlled(props);
    }
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if ("build" !== 'production') {
      var controlled = isControlled(props);
      var owner = inst._currentElement._owner;

      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
        "build" !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
        "build" !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {

      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
    } else {
      if (props.value == null && props.defaultValue != null) {
        node.defaultValue = '' + props.defaultValue;
      }
      if (props.checked == null && props.defaultChecked != null) {
        node.defaultChecked = !!props.defaultChecked;
      }
    }
  },

  postMountWrapper: function (inst) {
    var props = inst._currentElement.props;

    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Detach value from defaultValue. We won't do anything if we're working on
    // submit or reset inputs as those values & defaultValues are linked. They
    // are not resetable nodes so this operation doesn't matter and actually
    // removes browser-default values (eg "Submit Query") when no value is
    // provided.
    if (props.type !== 'submit' && props.type !== 'reset') {
      node.value = node.value;
    }

    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
    // this is needed to work around a chrome bug where setting defaultChecked
    // will sometimes influence the value of checked (even after detachment).
    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
    // We need to temporarily unset name to avoid disrupting radio button groups.
    var name = node.name;
    if (name !== '') {
      node.name = '';
    }
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !node.defaultChecked;
    if (name !== '') {
      node.name = name;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ? "build" !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;
},{"./DOMPropertyOperations":100,"./DisabledInputUtils":103,"./LinkedValueUtils":113,"./ReactDOMComponentTree":130,"./ReactUpdates":180,"./reactProdInvariant":224,"fbjs/lib/invariant":19,"fbjs/lib/warning":29,"object-assign":32}],138:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMInstrumentation
 */

'use strict';

var debugTool = null;

if ("build" !== 'production') {
  var ReactDOMDebugTool = require('./ReactDOMDebugTool');
  debugTool = ReactDOMDebugTool;
}

module.exports = { debugTool: debugTool };
},{"./ReactDOMDebugTool":132}],139:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMNullInputValuePropDevtool
 */

'use strict';

var ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');

var warning = require('fbjs/lib/warning');

var didWarnValueNull = false;

function handleElement(debugID, element) {
  if (element == null) {
    return;
  }
  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
    return;
  }
  if (element.props != null && element.props.value === null && !didWarnValueNull) {
    "build" !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;

    didWarnValueNull = true;
  }
}

var ReactDOMUnknownPropertyDevtool = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMUnknownPropertyDevtool;
},{"./ReactComponentTreeDevtool":123,"fbjs/lib/warning":29}],140:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMOption
 */

'use strict';

var _assign = require('object-assign');

var ReactChildren = require('./ReactChildren');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMSelect = require('./ReactDOMSelect');

var warning = require('fbjs/lib/warning');
var didWarnInvalidOptionChildren = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  ReactChildren.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    } else if (!didWarnInvalidOptionChildren) {
      didWarnInvalidOptionChildren = true;
      "build" !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function (inst, props, hostParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if ("build" !== 'production') {
      "build" !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (hostParent != null) {
      var selectParent = hostParent;

      if (selectParent._tag === 'optgroup') {
        selectParent = selectParent._hostParent;
      }

      if (selectParent != null && selectParent._tag === 'select') {
        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
      }
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      var value;
      if (props.value != null) {
        value = props.value + '';
      } else {
        value = flattenChildren(props.children);
      }
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function (inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getHostProps: function (inst, props) {
    var hostProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      hostProps.selected = inst._wrapperState.selected;
    }

    var content = flattenChildren(props.children);

    if (content) {
      hostProps.children = content;
    }

    return hostProps;
  }

};

module.exports = ReactDOMOption;
},{"./ReactChildren":118,"./ReactDOMComponentTree":130,"./ReactDOMSelect":141,"fbjs/lib/warning":29,"object-assign":32}],141:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelect
 */

'use strict';

var _assign = require('object-assign');

var DisabledInputUtils = require('./DisabledInputUtils');
var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
    "build" !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    if (props.multiple) {
      "build" !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else {
      "build" !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getHostProps: function (inst, props) {
    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function (inst, props) {
    if ("build" !== 'production') {
      checkSelectPropTypes(inst, props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      "build" !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function (inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function (inst) {
    var props = inst._currentElement.props;

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;
},{"./DisabledInputUtils":103,"./LinkedValueUtils":113,"./ReactDOMComponentTree":130,"./ReactUpdates":180,"fbjs/lib/warning":29,"object-assign":32}],142:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelection
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var getNodeForCharacterOffset = require('./getNodeForCharacterOffset');
var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;
},{"./getNodeForCharacterOffset":216,"./getTextContentAccessor":217,"fbjs/lib/ExecutionEnvironment":5}],143:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextComponent
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var DOMChildrenOperations = require('./DOMChildrenOperations');
var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstrumentation = require('./ReactInstrumentation');

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var validateDOMNesting = require('./validateDOMNesting');

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function (text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;

  // Properties
  this._domID = null;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    if ("build" !== 'production') {
      ReactInstrumentation.debugTool.onSetText(this._debugID, this._stringText);

      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo != null) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting('#text', this, parentInfo);
      }
    }

    var domID = hostContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._hostParent = hostParent;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function (nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getHostNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);

        if ("build" !== 'production') {
          ReactInstrumentation.debugTool.onSetText(this._debugID, nextStringText);
        }
      }
    }
  },

  getHostNode: function () {
    var hostNode = this._commentNodes;
    if (hostNode) {
      return hostNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ? "build" !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    hostNode = [this._hostNode, this._closingComment];
    this._commentNodes = hostNode;
    return hostNode;
  },

  unmountComponent: function () {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }

});

module.exports = ReactDOMTextComponent;
},{"./DOMChildrenOperations":96,"./DOMLazyTree":97,"./ReactDOMComponentTree":130,"./ReactInstrumentation":162,"./escapeTextContentForBrowser":206,"./reactProdInvariant":224,"./validateDOMNesting":230,"fbjs/lib/invariant":19,"object-assign":32}],144:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextarea
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var DisabledInputUtils = require('./DisabledInputUtils');
var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getHostProps: function (inst, props) {
    !(props.dangerouslySetInnerHTML == null) ? "build" !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.  We could add a check in setTextContent
    // to only set the value if/when the value differs from the node value (which would
    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
    // The value can be a boolean or object so that's why it's forced to be a string.
    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
      value: undefined,
      defaultValue: undefined,
      children: '' + inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if ("build" !== 'production') {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        "build" !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        "build" !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
    }

    var value = LinkedValueUtils.getValue(props);
    var initialValue = value;

    // Only bother fetching default value if we're going to use it
    if (value == null) {
      var defaultValue = props.defaultValue;
      // TODO (yungsters): Remove support for children content in <textarea>.
      var children = props.children;
      if (children != null) {
        if ("build" !== 'production') {
          "build" !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
        }
        !(defaultValue == null) ? "build" !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
        if (Array.isArray(children)) {
          !(children.length <= 1) ? "build" !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
          children = children[0];
        }

        defaultValue = '' + children;
      }
      if (defaultValue == null) {
        defaultValue = '';
      }
      initialValue = defaultValue;
    }

    inst._wrapperState = {
      initialValue: '' + initialValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
      if (props.defaultValue == null) {
        node.defaultValue = newValue;
      }
    }
    if (props.defaultValue != null) {
      node.defaultValue = props.defaultValue;
    }
  },

  postMountWrapper: function (inst) {
    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
    node.value = node.textContent; // Detach value from defaultValue
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;
},{"./DisabledInputUtils":103,"./LinkedValueUtils":113,"./ReactDOMComponentTree":130,"./ReactUpdates":180,"./reactProdInvariant":224,"fbjs/lib/invariant":19,"fbjs/lib/warning":29,"object-assign":32}],145:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTreeTraversal
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_hostNode' in instA) ? "build" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
  !('_hostNode' in instB) ? "build" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._hostParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._hostParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._hostParent;
    instB = instB._hostParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_hostNode' in instA) ? "build" !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
  !('_hostNode' in instB) ? "build" !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._hostParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_hostNode' in inst) ? "build" !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

  return inst._hostParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._hostParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], false, arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], true, arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._hostParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._hostParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], true, argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], false, argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};
},{"./reactProdInvariant":224,"fbjs/lib/invariant":19}],146:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMUnknownPropertyDevtool
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');

var warning = require('fbjs/lib/warning');

if ("build" !== 'production') {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true,

    autoFocus: true,
    defaultValue: true,
    valueLink: true,
    defaultChecked: true,
    checkedLink: true,
    innerHTML: true,
    suppressContentEditableWarning: true,
    onFocusIn: true,
    onFocusOut: true
  };
  var warnedProperties = {};

  var validateProperty = function (tagName, name, debugID) {
    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
      return true;
    }
    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return true;
    }
    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
      return true;
    }
    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

    if (standardName != null) {
      "build" !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else if (registrationName != null) {
      "build" !== 'production' ? warning(registrationName == null, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else {
      // We were unable to guess which prop the user intended.
      // It is likely that the user was just blindly spreading/forwarding props
      // Components should be careful to only render valid props/attributes.
      // Warning will be invoked in warnUnknownProperties to allow grouping.
      return false;
    }
  };
}

var warnUnknownProperties = function (debugID, element) {
  var unknownProps = [];
  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (unknownProps.length === 1) {
    "build" !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
  } else if (unknownProps.length > 1) {
    "build" !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
  }
};

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }
  warnUnknownProperties(debugID, element);
}

var ReactDOMUnknownPropertyDevtool = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMUnknownPropertyDevtool;
},{"./DOMProperty":99,"./EventPluginRegistry":107,"./ReactComponentTreeDevtool":123,"fbjs/lib/warning":29}],147:[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDebugTool
 */

'use strict';

var ReactInvalidSetStateWarningDevTool = require('./ReactInvalidSetStateWarningDevTool');
var ReactHostOperationHistoryDevtool = require('./ReactHostOperationHistoryDevtool');
var ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var performanceNow = require('fbjs/lib/performanceNow');
var warning = require('fbjs/lib/warning');

var eventHandlers = [];
var handlerDoesThrowForEvent = {};

function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
  eventHandlers.forEach(function (handler) {
    try {
      if (handler[handlerFunctionName]) {
        handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
      }
    } catch (e) {
      "build" !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
      handlerDoesThrowForEvent[handlerFunctionName] = true;
    }
  });
}

var isProfiling = false;
var flushHistory = [];
var lifeCycleTimerStack = [];
var currentFlushNesting = 0;
var currentFlushMeasurements = null;
var currentFlushStartTime = null;
var currentTimerDebugID = null;
var currentTimerStartTime = null;
var currentTimerNestedFlushDuration = null;
var currentTimerType = null;

function clearHistory() {
  ReactComponentTreeDevtool.purgeUnmountedComponents();
  ReactHostOperationHistoryDevtool.clearHistory();
}

function getTreeSnapshot(registeredIDs) {
  return registeredIDs.reduce(function (tree, id) {
    var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
    var parentID = ReactComponentTreeDevtool.getParentID(id);
    tree[id] = {
      displayName: ReactComponentTreeDevtool.getDisplayName(id),
      text: ReactComponentTreeDevtool.getText(id),
      updateCount: ReactComponentTreeDevtool.getUpdateCount(id),
      childIDs: ReactComponentTreeDevtool.getChildIDs(id),
      // Text nodes don't have owners but this is close enough.
      ownerID: ownerID || ReactComponentTreeDevtool.getOwnerID(parentID),
      parentID: parentID
    };
    return tree;
  }, {});
}

function resetMeasurements() {
  var previousStartTime = currentFlushStartTime;
  var previousMeasurements = currentFlushMeasurements || [];
  var previousOperations = ReactHostOperationHistoryDevtool.getHistory();

  if (currentFlushNesting === 0) {
    currentFlushStartTime = null;
    currentFlushMeasurements = null;
    clearHistory();
    return;
  }

  if (previousMeasurements.length || previousOperations.length) {
    var registeredIDs = ReactComponentTreeDevtool.getRegisteredIDs();
    flushHistory.push({
      duration: performanceNow() - previousStartTime,
      measurements: previousMeasurements || [],
      operations: previousOperations || [],
      treeSnapshot: getTreeSnapshot(registeredIDs)
    });
  }

  clearHistory();
  currentFlushStartTime = performanceNow();
  currentFlushMeasurements = [];
}

function checkDebugID(debugID) {
  "build" !== 'production' ? warning(debugID, 'ReactDebugTool: debugID may not be empty.') : void 0;
}

function beginLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  "build" !== 'production' ? warning(!currentTimerType, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
  currentTimerStartTime = performanceNow();
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

function endLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  "build" !== 'production' ? warning(currentTimerType === timerType, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
  if (isProfiling) {
    currentFlushMeasurements.push({
      timerType: timerType,
      instanceID: debugID,
      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
    });
  }
  currentTimerStartTime = null;
  currentTimerNestedFlushDuration = null;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function pauseCurrentLifeCycleTimer() {
  var currentTimer = {
    startTime: currentTimerStartTime,
    nestedFlushStartTime: performanceNow(),
    debugID: currentTimerDebugID,
    timerType: currentTimerType
  };
  lifeCycleTimerStack.push(currentTimer);
  currentTimerStartTime = null;
  currentTimerNestedFlushDuration = null;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function resumeCurrentLifeCycleTimer() {
  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();

  var startTime = _lifeCycleTimerStack$.startTime;
  var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;
  var debugID = _lifeCycleTimerStack$.debugID;
  var timerType = _lifeCycleTimerStack$.timerType;

  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
  currentTimerStartTime = startTime;
  currentTimerNestedFlushDuration += nestedFlushDuration;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

var ReactDebugTool = {
  addDevtool: function (devtool) {
    eventHandlers.push(devtool);
  },
  removeDevtool: function (devtool) {
    for (var i = 0; i < eventHandlers.length; i++) {
      if (eventHandlers[i] === devtool) {
        eventHandlers.splice(i, 1);
        i--;
      }
    }
  },
  isProfiling: function () {
    return isProfiling;
  },
  beginProfiling: function () {
    if (isProfiling) {
      return;
    }

    isProfiling = true;
    flushHistory.length = 0;
    resetMeasurements();
    ReactDebugTool.addDevtool(ReactHostOperationHistoryDevtool);
  },
  endProfiling: function () {
    if (!isProfiling) {
      return;
    }

    isProfiling = false;
    resetMeasurements();
    ReactDebugTool.removeDevtool(ReactHostOperationHistoryDevtool);
  },
  getFlushHistory: function () {
    return flushHistory;
  },
  onBeginFlush: function () {
    currentFlushNesting++;
    resetMeasurements();
    pauseCurrentLifeCycleTimer();
    emitEvent('onBeginFlush');
  },
  onEndFlush: function () {
    resetMeasurements();
    currentFlushNesting--;
    resumeCurrentLifeCycleTimer();
    emitEvent('onEndFlush');
  },
  onBeginLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
    beginLifeCycleTimer(debugID, timerType);
  },
  onEndLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    endLifeCycleTimer(debugID, timerType);
    emitEvent('onEndLifeCycleTimer', debugID, timerType);
  },
  onBeginReconcilerTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    emitEvent('onBeginReconcilerTimer', debugID, timerType);
  },
  onEndReconcilerTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    emitEvent('onEndReconcilerTimer', debugID, timerType);
  },
  onError: function (debugID) {
    if (currentTimerDebugID != null) {
      endLifeCycleTimer(currentTimerDebugID, currentTimerType);
    }
    emitEvent('onError', debugID);
  },
  onBeginProcessingChildContext: function () {
    emitEvent('onBeginProcessingChildContext');
  },
  onEndProcessingChildContext: function () {
    emitEvent('onEndProcessingChildContext');
  },
  onHostOperation: function (debugID, type, payload) {
    checkDebugID(debugID);
    emitEvent('onHostOperation', debugID, type, payload);
  },
  onSetState: function () {
    emitEvent('onSetState');
  },
  onSetDisplayName: function (debugID, displayName) {
    checkDebugID(debugID);
    emitEvent('onSetDisplayName', debugID, displayName);
  },
  onSetChildren: function (debugID, childDebugIDs) {
    checkDebugID(debugID);
    childDebugIDs.forEach(checkDebugID);
    emitEvent('onSetChildren', debugID, childDebugIDs);
  },
  onSetOwner: function (debugID, ownerDebugID) {
    checkDebugID(debugID);
    emitEvent('onSetOwner', debugID, ownerDebugID);
  },
  onSetParent: function (debugID, parentDebugID) {
    checkDebugID(debugID);
    emitEvent('onSetParent', debugID, parentDebugID);
  },
  onSetText: function (debugID, text) {
    checkDebugID(debugID);
    emitEvent('onSetText', debugID, text);
  },
  onMountRootComponent: function (debugID) {
    checkDebugID(debugID);
    emitEvent('onMountRootComponent', debugID);
  },
  onBeforeMountComponent: function (debugID, element) {
    checkDebugID(debugID);
    emitEvent('onBeforeMountComponent', debugID, element);
  },
  onMountComponent: function (debugID) {
    checkDebugID(debugID);
    emitEvent('onMountComponent', debugID);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    checkDebugID(debugID);
    emitEvent('onBeforeUpdateComponent', debugID, element);
  },
  onUpdateComponent: function (debugID) {
    checkDebugID(debugID);
    emitEvent('onUpdateComponent', debugID);
  },
  onUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    emitEvent('onUnmountComponent', debugID);
  },
  onTestEvent: function () {
    emitEvent('onTestEvent');
  }
};

ReactDebugTool.addDevtool(ReactInvalidSetStateWarningDevTool);
ReactDebugTool.addDevtool(ReactComponentTreeDevtool);
var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
if (/[?&]react_perf\b/.test(url)) {
  ReactDebugTool.beginProfiling();
}

module.exports = ReactDebugTool;
},{"./ReactComponentTreeDevtool":123,"./ReactHostOperationHistoryDevtool":158,"./ReactInvalidSetStateWarningDevTool":163,"fbjs/lib/ExecutionEnvironment":5,"fbjs/lib/performanceNow":27,"fbjs/lib/warning":29}],148:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultBatchingStrategy
 */

'use strict';

var _assign = require('object-assign');

var ReactUpdates = require('./ReactUpdates');
var Transaction = require('./Transaction');

var emptyFunction = require('fbjs/lib/emptyFunction');

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function () {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function (callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      callback(a, b, c, d, e);
    } else {
      transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;
},{"./ReactUpdates":180,"./Transaction":198,"fbjs/lib/emptyFunction":11,"object-assign":32}],149:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultInjection
 */

'use strict';

var BeforeInputEventPlugin = require('./BeforeInputEventPlugin');
var ChangeEventPlugin = require('./ChangeEventPlugin');
var DefaultEventPluginOrder = require('./DefaultEventPluginOrder');
var EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');
var HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');
var ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');
var ReactDOMComponent = require('./ReactDOMComponent');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');
var ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');
var ReactDOMTextComponent = require('./ReactDOMTextComponent');
var ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');
var ReactEventListener = require('./ReactEventListener');
var ReactInjection = require('./ReactInjection');
var ReactReconcileTransaction = require('./ReactReconcileTransaction');
var SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');
var SelectEventPlugin = require('./SelectEventPlugin');
var SimpleEventPlugin = require('./SimpleEventPlugin');

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
}

module.exports = {
  inject: inject
};
},{"./BeforeInputEventPlugin":91,"./ChangeEventPlugin":95,"./DefaultEventPluginOrder":102,"./EnterLeaveEventPlugin":104,"./HTMLDOMPropertyConfig":111,"./ReactComponentBrowserEnvironment":121,"./ReactDOMComponent":128,"./ReactDOMComponentTree":130,"./ReactDOMEmptyComponent":133,"./ReactDOMTextComponent":143,"./ReactDOMTreeTraversal":145,"./ReactDefaultBatchingStrategy":148,"./ReactEventListener":155,"./ReactInjection":159,"./ReactReconcileTransaction":174,"./SVGDOMPropertyConfig":182,"./SelectEventPlugin":183,"./SimpleEventPlugin":184}],150:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElement
 */

'use strict';

var _assign = require('object-assign');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var warning = require('fbjs/lib/warning');
var canDefineProperty = require('./canDefineProperty');
var hasOwnProperty = Object.prototype.hasOwnProperty;

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if ("build" !== 'production') {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if ("build" !== 'production') {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if ("build" !== 'production') {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if ("build" !== 'production') {
      "build" !== 'production' ? warning(
      /* eslint-disable no-proto */
      config.__proto__ == null || config.__proto__ === Object.prototype,
      /* eslint-enable no-proto */
      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
    }

    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if ("build" !== 'production') {
    var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

    // Create dummy `key` and `ref` property to `props` to warn users against its use
    var warnAboutAccessingKey = function () {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;
        "build" !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
      }
      return undefined;
    };
    warnAboutAccessingKey.isReactWarning = true;

    var warnAboutAccessingRef = function () {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;
        "build" !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
      }
      return undefined;
    };
    warnAboutAccessingRef.isReactWarning = true;

    if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
      if (!props.hasOwnProperty('key')) {
        Object.defineProperty(props, 'key', {
          get: warnAboutAccessingKey,
          configurable: true
        });
      }
      if (!props.hasOwnProperty('ref')) {
        Object.defineProperty(props, 'ref', {
          get: warnAboutAccessingRef,
          configurable: true
        });
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if ("build" !== 'production') {
      "build" !== 'production' ? warning(
      /* eslint-disable no-proto */
      config.__proto__ == null || config.__proto__ === Object.prototype,
      /* eslint-enable no-proto */
      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
    }

    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;

module.exports = ReactElement;
},{"./ReactCurrentOwner":125,"./canDefineProperty":202,"fbjs/lib/warning":29,"object-assign":32}],151:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElementValidator
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

'use strict';

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
var ReactElement = require('./ReactElement');
var ReactPropTypeLocations = require('./ReactPropTypeLocations');

var checkReactTypeSpec = require('./checkReactTypeSpec');

var canDefineProperty = require('./canDefineProperty');
var getIteratorFn = require('./getIteratorFn');
var warning = require('fbjs/lib/warning');

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = ' Check the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  "build" !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeDevtool.getCurrentStackAddendum(element)) : void 0;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkReactTypeSpec(componentClass.propTypes, element.props, ReactPropTypeLocations.prop, name, element, null);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    "build" !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {

  createElement: function (type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    "build" !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function (type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if ("build" !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            "build" !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function (element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }

};

module.exports = ReactElementValidator;
},{"./ReactComponentTreeDevtool":123,"./ReactCurrentOwner":125,"./ReactElement":150,"./ReactPropTypeLocations":172,"./canDefineProperty":202,"./checkReactTypeSpec":203,"./getIteratorFn":215,"fbjs/lib/warning":29}],152:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEmptyComponent
 */

'use strict';

var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function (factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function (instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;
},{}],153:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactErrorUtils
 */

'use strict';

var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {?String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a, b) {
  try {
    return func(a, b);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
    return undefined;
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if ("build" !== 'production') {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
      var boundFunc = func.bind(null, a, b);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;
},{}],154:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventEmitterMixin
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;
},{"./EventPluginHub":106}],155:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventListener
 */

'use strict';

var _assign = require('object-assign');

var EventListener = require('fbjs/lib/EventListener');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var PooledClass = require('./PooledClass');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var getEventTarget = require('./getEventTarget');
var getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._hostParent) {
    inst = inst._hostParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function () {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function (handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function (enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function () {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function (refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function (topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;
},{"./PooledClass":114,"./ReactDOMComponentTree":130,"./ReactUpdates":180,"./getEventTarget":213,"fbjs/lib/EventListener":4,"fbjs/lib/ExecutionEnvironment":5,"fbjs/lib/getUnboundedScrollPosition":16,"object-assign":32}],156:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactFeatureFlags
 * 
 */

'use strict';

var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;
},{}],157:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactHostComponent
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var invariant = require('fbjs/lib/invariant');

var genericComponentClass = null;
// This registry keeps track of wrapper classes around host tags.
var tagToComponentClass = {};
var textComponentClass = null;

var ReactHostComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function (componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function (componentClass) {
    textComponentClass = componentClass;
  },
  // This accepts a keyed object with classes as values. Each key represents a
  // tag. That particular tag will use this class instead of the generic one.
  injectComponentClasses: function (componentClasses) {
    _assign(tagToComponentClass, componentClasses);
  }
};

/**
 * Get a host internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ? "build" !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;
},{"./reactProdInvariant":224,"fbjs/lib/invariant":19,"object-assign":32}],158:[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactHostOperationHistoryDevtool
 */

'use strict';

var history = [];

var ReactHostOperationHistoryDevtool = {
  onHostOperation: function (debugID, type, payload) {
    history.push({
      instanceID: debugID,
      type: type,
      payload: payload
    });
  },
  clearHistory: function () {
    if (ReactHostOperationHistoryDevtool._preventClearing) {
      // Should only be used for tests.
      return;
    }

    history = [];
  },
  getHistory: function () {
    return history;
  }
};

module.exports = ReactHostOperationHistoryDevtool;
},{}],159:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInjection
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');
var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactClass = require('./ReactClass');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactHostComponent = require('./ReactHostComponent');
var ReactUpdates = require('./ReactUpdates');

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  Class: ReactClass.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  HostComponent: ReactHostComponent.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;
},{"./DOMProperty":99,"./EventPluginHub":106,"./EventPluginUtils":108,"./ReactBrowserEventEmitter":116,"./ReactClass":119,"./ReactComponentEnvironment":122,"./ReactEmptyComponent":152,"./ReactHostComponent":157,"./ReactUpdates":180}],160:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInputSelection
 */

'use strict';

var ReactDOMSelection = require('./ReactDOMSelection');

var containsNode = require('fbjs/lib/containsNode');
var focusNode = require('fbjs/lib/focusNode');
var getActiveElement = require('fbjs/lib/getActiveElement');

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function (elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function () {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function (priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function (input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function (input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;
},{"./ReactDOMSelection":142,"fbjs/lib/containsNode":8,"fbjs/lib/focusNode":13,"fbjs/lib/getActiveElement":14}],161:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstanceMap
 */

'use strict';

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {

  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function (key) {
    key._reactInternalInstance = undefined;
  },

  get: function (key) {
    return key._reactInternalInstance;
  },

  has: function (key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function (key, value) {
    key._reactInternalInstance = value;
  }

};

module.exports = ReactInstanceMap;
},{}],162:[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstrumentation
 */

'use strict';

var debugTool = null;

if ("build" !== 'production') {
  var ReactDebugTool = require('./ReactDebugTool');
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };
},{"./ReactDebugTool":147}],163:[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInvalidSetStateWarningDevTool
 */

'use strict';

var warning = require('fbjs/lib/warning');

if ("build" !== 'production') {
  var processingChildContext = false;

  var warnInvalidSetState = function () {
    "build" !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
  };
}

var ReactInvalidSetStateWarningDevTool = {
  onBeginProcessingChildContext: function () {
    processingChildContext = true;
  },
  onEndProcessingChildContext: function () {
    processingChildContext = false;
  },
  onSetState: function () {
    warnInvalidSetState();
  }
};

module.exports = ReactInvalidSetStateWarningDevTool;
},{"fbjs/lib/warning":29}],164:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMarkupChecksum
 */

'use strict';

var adler32 = require('./adler32');

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function (markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function (markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;
},{"./adler32":201}],165:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMount
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMLazyTree = require('./DOMLazyTree');
var DOMProperty = require('./DOMProperty');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMContainerInfo = require('./ReactDOMContainerInfo');
var ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');
var ReactElement = require('./ReactElement');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMarkupChecksum = require('./ReactMarkupChecksum');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdateQueue = require('./ReactUpdateQueue');
var ReactUpdates = require('./ReactUpdates');

var emptyObject = require('fbjs/lib/emptyObject');
var instantiateReactComponent = require('./instantiateReactComponent');
var invariant = require('fbjs/lib/invariant');
var setInnerHTML = require('./setInnerHTML');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context);

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  if ("build" !== 'production') {
    ReactInstrumentation.debugTool.onBeginFlush();
  }
  ReactReconciler.unmountComponent(instance, safely);
  if ("build" !== 'production') {
    ReactInstrumentation.debugTool.onEndFlush();
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._hostParent);
  }
}

function getHostRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getHostRootInstanceInContainer(container);
  return root ? root._hostContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function () {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if ("build" !== 'production') {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  // this.props is actually a ReactElement
  return this.props;
};

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {

  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function (container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by devtools!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    "build" !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? "build" !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement, false);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    if ("build" !== 'production') {
      // The instance here is TopLevelWrapper so we report mount for its child.
      ReactInstrumentation.debugTool.onMountRootComponent(componentInstance._renderedComponent._debugID);
    }

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? "build" !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !ReactElement.isValidElement(nextElement) ? "build" !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
    // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

    "build" !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

    var nextContext;
    if (parentComponent) {
      var parentInst = ReactInstanceMap.get(parentComponent);
      nextContext = parentInst._processChildContext(parentInst._context);
    } else {
      nextContext = emptyObject;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if ("build" !== 'production') {
      "build" !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            "build" !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function (nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function (container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    "build" !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? "build" !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if ("build" !== 'production') {
        "build" !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? "build" !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if ("build" !== 'production') {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ? "build" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

        if ("build" !== 'production') {
          "build" !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ? "build" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }

    if ("build" !== 'production') {
      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
      if (hostNode._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
      }
    }
  }
};

module.exports = ReactMount;
},{"./DOMLazyTree":97,"./DOMProperty":99,"./ReactBrowserEventEmitter":116,"./ReactCurrentOwner":125,"./ReactDOMComponentTree":130,"./ReactDOMContainerInfo":131,"./ReactDOMFeatureFlags":135,"./ReactElement":150,"./ReactFeatureFlags":156,"./ReactInstanceMap":161,"./ReactInstrumentation":162,"./ReactMarkupChecksum":164,"./ReactReconciler":175,"./ReactUpdateQueue":179,"./ReactUpdates":180,"./instantiateReactComponent":219,"./reactProdInvariant":224,"./setInnerHTML":226,"./shouldUpdateReactComponent":228,"fbjs/lib/emptyObject":12,"fbjs/lib/invariant":19,"fbjs/lib/warning":29}],166:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChild
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactReconciler = require('./ReactReconciler');
var ReactChildReconciler = require('./ReactChildReconciler');

var emptyFunction = require('fbjs/lib/emptyFunction');
var flattenChildren = require('./flattenChildren');
var invariant = require('fbjs/lib/invariant');

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.SET_MARKUP,
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setParentForInstrumentation = emptyFunction;
var setChildrenForInstrumentation = emptyFunction;
if ("build" !== 'production') {
  var getDebugID = function (inst) {
    if (!inst._debugID) {
      // Check for ART-like instances. TODO: This is silly/gross.
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setParentForInstrumentation = function (child) {
    if (child._debugID !== 0) {
      ReactInstrumentation.debugTool.onSetParent(child._debugID, getDebugID(this));
    }
  };
  setChildrenForInstrumentation = function (children) {
    var debugID = getDebugID(this);
    // TODO: React Native empty components are also multichild.
    // This means they still get into this method but don't have _debugID.
    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
      if ("build" !== 'production') {
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, this._debugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, removedNodes, transaction, context) {
      var nextChildren;
      if ("build" !== 'production') {
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements, this._debugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function (nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;

      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          if ("build" !== 'production') {
            setParentForInstrumentation.call(this, child);
          }
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }

      if ("build" !== 'production') {
        setChildrenForInstrumentation.call(this, children);
      }

      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function (nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? "build" !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function (nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? "build" !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function (nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var lastIndex = 0;
      var nextIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, lastPlacedNode, nextIndex, transaction, context));
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;

      if ("build" !== 'production') {
        setChildrenForInstrumentation.call(this, nextChildren);
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function (safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function (child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function (child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function (child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function (child, afterNode, index, transaction, context) {
      var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function (child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }

  }

};

module.exports = ReactMultiChild;
},{"./ReactChildReconciler":117,"./ReactComponentEnvironment":122,"./ReactCurrentOwner":125,"./ReactInstanceMap":161,"./ReactInstrumentation":162,"./ReactMultiChildUpdateTypes":167,"./ReactReconciler":175,"./flattenChildren":208,"./reactProdInvariant":224,"fbjs/lib/emptyFunction":11,"fbjs/lib/invariant":19}],167:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChildUpdateTypes
 */

'use strict';

var keyMirror = require('fbjs/lib/keyMirror');

/**
 * When a component's children are updated, a series of update configuration
 * objects are created in order to batch and serialize the required changes.
 *
 * Enumerates all the possible types of update configurations.
 *
 * @internal
 */
var ReactMultiChildUpdateTypes = keyMirror({
  INSERT_MARKUP: null,
  MOVE_EXISTING: null,
  REMOVE_NODE: null,
  SET_MARKUP: null,
  TEXT_CONTENT: null
});

module.exports = ReactMultiChildUpdateTypes;
},{"fbjs/lib/keyMirror":22}],168:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNodeTypes
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactElement = require('./ReactElement');

var invariant = require('fbjs/lib/invariant');

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function (node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (ReactElement.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
    !false ? "build" !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
  }
};

module.exports = ReactNodeTypes;
},{"./ReactElement":150,"./reactProdInvariant":224,"fbjs/lib/invariant":19}],169:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNoopUpdateQueue
 */

'use strict';

var warning = require('fbjs/lib/warning');

function warnNoop(publicInstance, callerName) {
  if ("build" !== 'production') {
    var constructor = publicInstance.constructor;
    "build" !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
},{"fbjs/lib/warning":29}],170:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactOwner
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {

  /**
   * @param {?object} object
   * @return {boolean} True if `object` is a valid owner.
   * @final
   */
  isValidOwner: function (object) {
    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
  },

  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function (component, ref, owner) {
    !ReactOwner.isValidOwner(owner) ? "build" !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function (component, ref, owner) {
    !ReactOwner.isValidOwner(owner) ? "build" !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }

};

module.exports = ReactOwner;
},{"./reactProdInvariant":224,"fbjs/lib/invariant":19}],171:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocationNames
 */

'use strict';

var ReactPropTypeLocationNames = {};

if ("build" !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
},{}],172:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocations
 */

'use strict';

var keyMirror = require('fbjs/lib/keyMirror');

var ReactPropTypeLocations = keyMirror({
  prop: null,
  context: null,
  childContext: null
});

module.exports = ReactPropTypeLocations;
},{"fbjs/lib/keyMirror":22}],173:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypes
 */

'use strict';

var ReactElement = require('./ReactElement');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');

var emptyFunction = require('fbjs/lib/emptyFunction');
var getIteratorFn = require('./getIteratorFn');

/**
 * Collection of methods that allow declaration and validation of props that are
 * supplied to React components. Example usage:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyArticle = React.createClass({
 *     propTypes: {
 *       // An optional string prop named "description".
 *       description: Props.string,
 *
 *       // A required enum prop named "category".
 *       category: Props.oneOf(['News','Photos']).isRequired,
 *
 *       // A prop named "dialog" that requires an instance of Dialog.
 *       dialog: Props.instanceOf(Dialog).isRequired
 *     },
 *     render: function() { ... }
 *   });
 *
 * A more formal specification of how these methods are used:
 *
 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
 *   decl := ReactPropTypes.{type}(.isRequired)?
 *
 * Each and every declaration produces a function with the same signature. This
 * allows the creation of custom validation functions. For example:
 *
 *  var MyLink = React.createClass({
 *    propTypes: {
 *      // An optional string or URI prop named "href".
 *      href: function(props, propName, componentName) {
 *        var propValue = props[propName];
 *        if (propValue != null && typeof propValue !== 'string' &&
 *            !(propValue instanceof URI)) {
 *          return new Error(
 *            'Expected a string or an URI for ' + propName + ' in ' +
 *            componentName
 *          );
 *        }
 *      }
 *    },
 *    render: function() {...}
 *  });
 *
 * @internal
 */

var ANONYMOUS = '<<anonymous>>';

var ReactPropTypes = {
  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),
  symbol: createPrimitiveTypeChecker('symbol'),

  any: createAnyTypeChecker(),
  arrayOf: createArrayOfTypeChecker,
  element: createElementTypeChecker(),
  instanceOf: createInstanceTypeChecker,
  node: createNodeChecker(),
  objectOf: createObjectOfTypeChecker,
  oneOf: createEnumTypeChecker,
  oneOfType: createUnionTypeChecker,
  shape: createShapeTypeChecker
};

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
/*eslint-disable no-self-compare*/
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return x !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}
/*eslint-enable no-self-compare*/

function createChainableTypeChecker(validate) {
  function checkType(isRequired, props, propName, componentName, location, propFullName) {
    componentName = componentName || ANONYMOUS;
    propFullName = propFullName || propName;
    if (props[propName] == null) {
      var locationName = ReactPropTypeLocationNames[location];
      if (isRequired) {
        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
      }
      return null;
    } else {
      return validate(props, propName, componentName, location, propFullName);
    }
  }

  var chainedCheckType = checkType.bind(null, false);
  chainedCheckType.isRequired = checkType.bind(null, true);

  return chainedCheckType;
}

function createPrimitiveTypeChecker(expectedType) {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== expectedType) {
      var locationName = ReactPropTypeLocationNames[location];
      // `propValue` being instance of, say, date/regexp, pass the 'object'
      // check, but we can offer a more precise error message here rather than
      // 'of type `object`'.
      var preciseType = getPreciseType(propValue);

      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createAnyTypeChecker() {
  return createChainableTypeChecker(emptyFunction.thatReturns(null));
}

function createArrayOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
    }
    var propValue = props[propName];
    if (!Array.isArray(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
    }
    for (var i = 0; i < propValue.length; i++) {
      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
      if (error instanceof Error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createElementTypeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    if (!ReactElement.isValidElement(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createInstanceTypeChecker(expectedClass) {
  function validate(props, propName, componentName, location, propFullName) {
    if (!(props[propName] instanceof expectedClass)) {
      var locationName = ReactPropTypeLocationNames[location];
      var expectedClassName = expectedClass.name || ANONYMOUS;
      var actualClassName = getClassName(props[propName]);
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createEnumTypeChecker(expectedValues) {
  if (!Array.isArray(expectedValues)) {
    return createChainableTypeChecker(function () {
      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
    });
  }

  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    for (var i = 0; i < expectedValues.length; i++) {
      if (is(propValue, expectedValues[i])) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    var valuesString = JSON.stringify(expectedValues);
    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
  }
  return createChainableTypeChecker(validate);
}

function createObjectOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
    }
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
    }
    for (var key in propValue) {
      if (propValue.hasOwnProperty(key)) {
        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
        if (error instanceof Error) {
          return error;
        }
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createUnionTypeChecker(arrayOfTypeCheckers) {
  if (!Array.isArray(arrayOfTypeCheckers)) {
    return createChainableTypeChecker(function () {
      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
    });
  }

  function validate(props, propName, componentName, location, propFullName) {
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (checker(props, propName, componentName, location, propFullName) == null) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
  }
  return createChainableTypeChecker(validate);
}

function createNodeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    if (!isNode(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createShapeTypeChecker(shapeTypes) {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }
    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (!checker) {
        continue;
      }
      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
      if (error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function isNode(propValue) {
  switch (typeof propValue) {
    case 'number':
    case 'string':
    case 'undefined':
      return true;
    case 'boolean':
      return !propValue;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isNode);
      }
      if (propValue === null || ReactElement.isValidElement(propValue)) {
        return true;
      }

      var iteratorFn = getIteratorFn(propValue);
      if (iteratorFn) {
        var iterator = iteratorFn.call(propValue);
        var step;
        if (iteratorFn !== propValue.entries) {
          while (!(step = iterator.next()).done) {
            if (!isNode(step.value)) {
              return false;
            }
          }
        } else {
          // Iterator will provide entry [k,v] tuples rather than values.
          while (!(step = iterator.next()).done) {
            var entry = step.value;
            if (entry) {
              if (!isNode(entry[1])) {
                return false;
              }
            }
          }
        }
      } else {
        return false;
      }

      return true;
    default:
      return false;
  }
}

function isSymbol(propType, propValue) {
  // Native Symbol.
  if (propType === 'symbol') {
    return true;
  }

  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
  if (propValue['@@toStringTag'] === 'Symbol') {
    return true;
  }

  // Fallback for non-spec compliant Symbols which are polyfilled.
  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
    return true;
  }

  return false;
}

// Equivalent of `typeof` but with special handling for array and regexp.
function getPropType(propValue) {
  var propType = typeof propValue;
  if (Array.isArray(propValue)) {
    return 'array';
  }
  if (propValue instanceof RegExp) {
    // Old webkits (at least until Android 4.0) return 'function' rather than
    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
    // passes PropTypes.object.
    return 'object';
  }
  if (isSymbol(propType, propValue)) {
    return 'symbol';
  }
  return propType;
}

// This handles more types than `getPropType`. Only used for error messages.
// See `createPrimitiveTypeChecker`.
function getPreciseType(propValue) {
  var propType = getPropType(propValue);
  if (propType === 'object') {
    if (propValue instanceof Date) {
      return 'date';
    } else if (propValue instanceof RegExp) {
      return 'regexp';
    }
  }
  return propType;
}

// Returns class name of the object, if any.
function getClassName(propValue) {
  if (!propValue.constructor || !propValue.constructor.name) {
    return ANONYMOUS;
  }
  return propValue.constructor.name;
}

module.exports = ReactPropTypes;
},{"./ReactElement":150,"./ReactPropTypeLocationNames":171,"./getIteratorFn":215,"fbjs/lib/emptyFunction":11}],174:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconcileTransaction
 */

'use strict';

var _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactInputSelection = require('./ReactInputSelection');
var ReactInstrumentation = require('./ReactInstrumentation');
var Transaction = require('./Transaction');
var ReactUpdateQueue = require('./ReactUpdateQueue');

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function () {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function (previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function () {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function () {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

if ("build" !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactDOMTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return this.reactMountReady;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return ReactUpdateQueue;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function () {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function (checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;
},{"./CallbackQueue":94,"./PooledClass":114,"./ReactBrowserEventEmitter":116,"./ReactInputSelection":160,"./ReactInstrumentation":162,"./ReactUpdateQueue":179,"./Transaction":198,"object-assign":32}],175:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconciler
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactRef = require('./ReactRef');
var ReactInstrumentation = require('./ReactInstrumentation');

var invariant = require('fbjs/lib/invariant');

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing host component instance
   * @param {?object} info about the host container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context) {
    if ("build" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement);
        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'mountComponent');
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if ("build" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'mountComponent');
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getHostNode: function (internalInstance) {
    return internalInstance.getHostNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (internalInstance, safely) {
    if ("build" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'unmountComponent');
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if ("build" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'unmountComponent');
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function (internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    if ("build" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'receiveComponent');
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if ("build" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'receiveComponent');
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      // The component's enqueued batch number should always be the current
      // batch or the following one.
      !(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1) ? "build" !== 'production' ? invariant(false, 'performUpdateIfNecessary: Unexpected batch number (current %s, pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : _prodInvariant('121', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
      return;
    }
    if ("build" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if ("build" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }

};

module.exports = ReactReconciler;
},{"./ReactInstrumentation":162,"./ReactRef":176,"./reactProdInvariant":224,"fbjs/lib/invariant":19}],176:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactRef
 */

'use strict';

var ReactOwner = require('./ReactOwner');

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || element === false) {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;

  return(
    // This has a few false positives w/r/t empty components.
    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
  );
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || element === false) {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;
},{"./ReactOwner":170}],177:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactServerRenderingTransaction
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');
var Transaction = require('./Transaction');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactServerUpdateQueue = require('./ReactServerUpdateQueue');

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [];

if ("build" !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

var noopCallbackQueue = {
  enqueue: function () {}
};

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.useCreateElement = false;
  this.updateQueue = new ReactServerUpdateQueue(this);
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap procedures.
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return noopCallbackQueue;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return this.updateQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {},

  checkpoint: function () {},

  rollback: function () {}
};

_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;
},{"./PooledClass":114,"./ReactInstrumentation":162,"./ReactServerUpdateQueue":178,"./Transaction":198,"object-assign":32}],178:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactServerUpdateQueue
 * 
 */

'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ReactUpdateQueue = require('./ReactUpdateQueue');
var Transaction = require('./Transaction');
var warning = require('fbjs/lib/warning');

function warnNoop(publicInstance, callerName) {
  if ("build" !== 'production') {
    var constructor = publicInstance.constructor;
    "build" !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the update queue used for server rendering.
 * It delegates to ReactUpdateQueue while server rendering is in progress and
 * switches to ReactNoopUpdateQueue after the transaction has completed.
 * @class ReactServerUpdateQueue
 * @param {Transaction} transaction
 */

var ReactServerUpdateQueue = function () {
  /* :: transaction: Transaction; */

  function ReactServerUpdateQueue(transaction) {
    _classCallCheck(this, ReactServerUpdateQueue);

    this.transaction = transaction;
  }

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */


  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
    return false;
  };

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
    }
  };

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
    } else {
      warnNoop(publicInstance, 'forceUpdate');
    }
  };

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} completeState Next state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
    } else {
      warnNoop(publicInstance, 'replaceState');
    }
  };

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} partialState Next partial state to be merged with state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
    } else {
      warnNoop(publicInstance, 'setState');
    }
  };

  return ReactServerUpdateQueue;
}();

module.exports = ReactServerUpdateQueue;
},{"./ReactUpdateQueue":179,"./Transaction":198,"fbjs/lib/warning":29}],179:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdateQueue
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if ("build" !== 'production') {
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      "build" !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : void 0;
    }
    return null;
  }

  if ("build" !== 'production') {
    "build" !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    if ("build" !== 'production') {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        "build" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function (internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    if ("build" !== 'production') {
      ReactInstrumentation.debugTool.onSetState();
      "build" !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;
    // TODO: introduce _pendingContext instead of setting it directly.
    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function (callback, callerName) {
    !(!callback || typeof callback === 'function') ? "build" !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
  }

};

module.exports = ReactUpdateQueue;
},{"./ReactCurrentOwner":125,"./ReactInstanceMap":161,"./ReactInstrumentation":162,"./ReactUpdates":180,"./reactProdInvariant":224,"fbjs/lib/invariant":19,"fbjs/lib/warning":29}],180:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdates
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactReconciler = require('./ReactReconciler');
var Transaction = require('./Transaction');

var invariant = require('fbjs/lib/invariant');

var dirtyComponents = [];
var updateBatchNumber = 0;
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? "build" !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
}

var NESTED_UPDATES = {
  initialize: function () {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function () {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function () {
    this.callbackQueue.reset();
  },
  close: function () {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function () {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function (method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ? "build" !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  // Any updates enqueued while reconciling must be performed after this entire
  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
  // C, B could update twice in a single batch if C's render enqueues an update
  // to B (since B would have already updated, we should skip it, and the only
  // way we can know to do so is by checking the batch counter).
  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.props === component._renderedComponent._currentElement) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function () {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  !batchingStrategy.isBatchingUpdates ? "build" !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function (ReconcileTransaction) {
    !ReconcileTransaction ? "build" !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function (_batchingStrategy) {
    !_batchingStrategy ? "build" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ? "build" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? "build" !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;
},{"./CallbackQueue":94,"./PooledClass":114,"./ReactFeatureFlags":156,"./ReactReconciler":175,"./Transaction":198,"./reactProdInvariant":224,"fbjs/lib/invariant":19,"object-assign":32}],181:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactVersion
 */

'use strict';

module.exports = '15.2.1';
},{}],182:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SVGDOMPropertyConfig
 */

'use strict';

var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).forEach(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;
},{}],183:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SelectEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInputSelection = require('./ReactInputSelection');
var SyntheticEvent = require('./SyntheticEvent');

var getActiveElement = require('fbjs/lib/getActiveElement');
var isTextInputElement = require('./isTextInputElement');
var keyOf = require('fbjs/lib/keyOf');
var shallowEqual = require('fbjs/lib/shallowEqual');

var topLevelTypes = EventConstants.topLevelTypes;

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSelect: null }),
      captured: keyOf({ onSelectCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;
var ON_SELECT_KEY = keyOf({ onSelect: null });

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case topLevelTypes.topFocus:
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case topLevelTypes.topBlur:
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case topLevelTypes.topMouseDown:
        mouseDown = true;
        break;
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topMouseUp:
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case topLevelTypes.topSelectionChange:
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function (inst, registrationName, listener) {
    if (registrationName === ON_SELECT_KEY) {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;
},{"./EventConstants":105,"./EventPropagators":109,"./ReactDOMComponentTree":130,"./ReactInputSelection":160,"./SyntheticEvent":189,"./isTextInputElement":221,"fbjs/lib/ExecutionEnvironment":5,"fbjs/lib/getActiveElement":14,"fbjs/lib/keyOf":23,"fbjs/lib/shallowEqual":28}],184:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SimpleEventPlugin
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var EventConstants = require('./EventConstants');
var EventListener = require('fbjs/lib/EventListener');
var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticAnimationEvent = require('./SyntheticAnimationEvent');
var SyntheticClipboardEvent = require('./SyntheticClipboardEvent');
var SyntheticEvent = require('./SyntheticEvent');
var SyntheticFocusEvent = require('./SyntheticFocusEvent');
var SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');
var SyntheticDragEvent = require('./SyntheticDragEvent');
var SyntheticTouchEvent = require('./SyntheticTouchEvent');
var SyntheticTransitionEvent = require('./SyntheticTransitionEvent');
var SyntheticUIEvent = require('./SyntheticUIEvent');
var SyntheticWheelEvent = require('./SyntheticWheelEvent');

var emptyFunction = require('fbjs/lib/emptyFunction');
var getEventCharCode = require('./getEventCharCode');
var invariant = require('fbjs/lib/invariant');
var keyOf = require('fbjs/lib/keyOf');

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  abort: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAbort: true }),
      captured: keyOf({ onAbortCapture: true })
    }
  },
  animationEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAnimationEnd: true }),
      captured: keyOf({ onAnimationEndCapture: true })
    }
  },
  animationIteration: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAnimationIteration: true }),
      captured: keyOf({ onAnimationIterationCapture: true })
    }
  },
  animationStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAnimationStart: true }),
      captured: keyOf({ onAnimationStartCapture: true })
    }
  },
  blur: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onBlur: true }),
      captured: keyOf({ onBlurCapture: true })
    }
  },
  canPlay: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCanPlay: true }),
      captured: keyOf({ onCanPlayCapture: true })
    }
  },
  canPlayThrough: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCanPlayThrough: true }),
      captured: keyOf({ onCanPlayThroughCapture: true })
    }
  },
  click: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onClick: true }),
      captured: keyOf({ onClickCapture: true })
    }
  },
  contextMenu: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onContextMenu: true }),
      captured: keyOf({ onContextMenuCapture: true })
    }
  },
  copy: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCopy: true }),
      captured: keyOf({ onCopyCapture: true })
    }
  },
  cut: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCut: true }),
      captured: keyOf({ onCutCapture: true })
    }
  },
  doubleClick: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDoubleClick: true }),
      captured: keyOf({ onDoubleClickCapture: true })
    }
  },
  drag: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDrag: true }),
      captured: keyOf({ onDragCapture: true })
    }
  },
  dragEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragEnd: true }),
      captured: keyOf({ onDragEndCapture: true })
    }
  },
  dragEnter: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragEnter: true }),
      captured: keyOf({ onDragEnterCapture: true })
    }
  },
  dragExit: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragExit: true }),
      captured: keyOf({ onDragExitCapture: true })
    }
  },
  dragLeave: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragLeave: true }),
      captured: keyOf({ onDragLeaveCapture: true })
    }
  },
  dragOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragOver: true }),
      captured: keyOf({ onDragOverCapture: true })
    }
  },
  dragStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragStart: true }),
      captured: keyOf({ onDragStartCapture: true })
    }
  },
  drop: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDrop: true }),
      captured: keyOf({ onDropCapture: true })
    }
  },
  durationChange: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDurationChange: true }),
      captured: keyOf({ onDurationChangeCapture: true })
    }
  },
  emptied: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onEmptied: true }),
      captured: keyOf({ onEmptiedCapture: true })
    }
  },
  encrypted: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onEncrypted: true }),
      captured: keyOf({ onEncryptedCapture: true })
    }
  },
  ended: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onEnded: true }),
      captured: keyOf({ onEndedCapture: true })
    }
  },
  error: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onError: true }),
      captured: keyOf({ onErrorCapture: true })
    }
  },
  focus: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onFocus: true }),
      captured: keyOf({ onFocusCapture: true })
    }
  },
  input: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onInput: true }),
      captured: keyOf({ onInputCapture: true })
    }
  },
  invalid: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onInvalid: true }),
      captured: keyOf({ onInvalidCapture: true })
    }
  },
  keyDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onKeyDown: true }),
      captured: keyOf({ onKeyDownCapture: true })
    }
  },
  keyPress: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onKeyPress: true }),
      captured: keyOf({ onKeyPressCapture: true })
    }
  },
  keyUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onKeyUp: true }),
      captured: keyOf({ onKeyUpCapture: true })
    }
  },
  load: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoad: true }),
      captured: keyOf({ onLoadCapture: true })
    }
  },
  loadedData: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoadedData: true }),
      captured: keyOf({ onLoadedDataCapture: true })
    }
  },
  loadedMetadata: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoadedMetadata: true }),
      captured: keyOf({ onLoadedMetadataCapture: true })
    }
  },
  loadStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoadStart: true }),
      captured: keyOf({ onLoadStartCapture: true })
    }
  },
  // Note: We do not allow listening to mouseOver events. Instead, use the
  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
  mouseDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseDown: true }),
      captured: keyOf({ onMouseDownCapture: true })
    }
  },
  mouseMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseMove: true }),
      captured: keyOf({ onMouseMoveCapture: true })
    }
  },
  mouseOut: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseOut: true }),
      captured: keyOf({ onMouseOutCapture: true })
    }
  },
  mouseOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseOver: true }),
      captured: keyOf({ onMouseOverCapture: true })
    }
  },
  mouseUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseUp: true }),
      captured: keyOf({ onMouseUpCapture: true })
    }
  },
  paste: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPaste: true }),
      captured: keyOf({ onPasteCapture: true })
    }
  },
  pause: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPause: true }),
      captured: keyOf({ onPauseCapture: true })
    }
  },
  play: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPlay: true }),
      captured: keyOf({ onPlayCapture: true })
    }
  },
  playing: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPlaying: true }),
      captured: keyOf({ onPlayingCapture: true })
    }
  },
  progress: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onProgress: true }),
      captured: keyOf({ onProgressCapture: true })
    }
  },
  rateChange: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onRateChange: true }),
      captured: keyOf({ onRateChangeCapture: true })
    }
  },
  reset: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onReset: true }),
      captured: keyOf({ onResetCapture: true })
    }
  },
  scroll: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onScroll: true }),
      captured: keyOf({ onScrollCapture: true })
    }
  },
  seeked: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSeeked: true }),
      captured: keyOf({ onSeekedCapture: true })
    }
  },
  seeking: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSeeking: true }),
      captured: keyOf({ onSeekingCapture: true })
    }
  },
  stalled: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onStalled: true }),
      captured: keyOf({ onStalledCapture: true })
    }
  },
  submit: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSubmit: true }),
      captured: keyOf({ onSubmitCapture: true })
    }
  },
  suspend: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSuspend: true }),
      captured: keyOf({ onSuspendCapture: true })
    }
  },
  timeUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTimeUpdate: true }),
      captured: keyOf({ onTimeUpdateCapture: true })
    }
  },
  touchCancel: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchCancel: true }),
      captured: keyOf({ onTouchCancelCapture: true })
    }
  },
  touchEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchEnd: true }),
      captured: keyOf({ onTouchEndCapture: true })
    }
  },
  touchMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchMove: true }),
      captured: keyOf({ onTouchMoveCapture: true })
    }
  },
  touchStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchStart: true }),
      captured: keyOf({ onTouchStartCapture: true })
    }
  },
  transitionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTransitionEnd: true }),
      captured: keyOf({ onTransitionEndCapture: true })
    }
  },
  volumeChange: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onVolumeChange: true }),
      captured: keyOf({ onVolumeChangeCapture: true })
    }
  },
  waiting: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onWaiting: true }),
      captured: keyOf({ onWaitingCapture: true })
    }
  },
  wheel: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onWheel: true }),
      captured: keyOf({ onWheelCapture: true })
    }
  }
};

var topLevelEventsToDispatchConfig = {
  topAbort: eventTypes.abort,
  topAnimationEnd: eventTypes.animationEnd,
  topAnimationIteration: eventTypes.animationIteration,
  topAnimationStart: eventTypes.animationStart,
  topBlur: eventTypes.blur,
  topCanPlay: eventTypes.canPlay,
  topCanPlayThrough: eventTypes.canPlayThrough,
  topClick: eventTypes.click,
  topContextMenu: eventTypes.contextMenu,
  topCopy: eventTypes.copy,
  topCut: eventTypes.cut,
  topDoubleClick: eventTypes.doubleClick,
  topDrag: eventTypes.drag,
  topDragEnd: eventTypes.dragEnd,
  topDragEnter: eventTypes.dragEnter,
  topDragExit: eventTypes.dragExit,
  topDragLeave: eventTypes.dragLeave,
  topDragOver: eventTypes.dragOver,
  topDragStart: eventTypes.dragStart,
  topDrop: eventTypes.drop,
  topDurationChange: eventTypes.durationChange,
  topEmptied: eventTypes.emptied,
  topEncrypted: eventTypes.encrypted,
  topEnded: eventTypes.ended,
  topError: eventTypes.error,
  topFocus: eventTypes.focus,
  topInput: eventTypes.input,
  topInvalid: eventTypes.invalid,
  topKeyDown: eventTypes.keyDown,
  topKeyPress: eventTypes.keyPress,
  topKeyUp: eventTypes.keyUp,
  topLoad: eventTypes.load,
  topLoadedData: eventTypes.loadedData,
  topLoadedMetadata: eventTypes.loadedMetadata,
  topLoadStart: eventTypes.loadStart,
  topMouseDown: eventTypes.mouseDown,
  topMouseMove: eventTypes.mouseMove,
  topMouseOut: eventTypes.mouseOut,
  topMouseOver: eventTypes.mouseOver,
  topMouseUp: eventTypes.mouseUp,
  topPaste: eventTypes.paste,
  topPause: eventTypes.pause,
  topPlay: eventTypes.play,
  topPlaying: eventTypes.playing,
  topProgress: eventTypes.progress,
  topRateChange: eventTypes.rateChange,
  topReset: eventTypes.reset,
  topScroll: eventTypes.scroll,
  topSeeked: eventTypes.seeked,
  topSeeking: eventTypes.seeking,
  topStalled: eventTypes.stalled,
  topSubmit: eventTypes.submit,
  topSuspend: eventTypes.suspend,
  topTimeUpdate: eventTypes.timeUpdate,
  topTouchCancel: eventTypes.touchCancel,
  topTouchEnd: eventTypes.touchEnd,
  topTouchMove: eventTypes.touchMove,
  topTouchStart: eventTypes.touchStart,
  topTransitionEnd: eventTypes.transitionEnd,
  topVolumeChange: eventTypes.volumeChange,
  topWaiting: eventTypes.waiting,
  topWheel: eventTypes.wheel
};

for (var type in topLevelEventsToDispatchConfig) {
  topLevelEventsToDispatchConfig[type].dependencies = [type];
}

var ON_CLICK_KEY = keyOf({ onClick: null });
var onClickListeners = {};

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case topLevelTypes.topAbort:
      case topLevelTypes.topCanPlay:
      case topLevelTypes.topCanPlayThrough:
      case topLevelTypes.topDurationChange:
      case topLevelTypes.topEmptied:
      case topLevelTypes.topEncrypted:
      case topLevelTypes.topEnded:
      case topLevelTypes.topError:
      case topLevelTypes.topInput:
      case topLevelTypes.topInvalid:
      case topLevelTypes.topLoad:
      case topLevelTypes.topLoadedData:
      case topLevelTypes.topLoadedMetadata:
      case topLevelTypes.topLoadStart:
      case topLevelTypes.topPause:
      case topLevelTypes.topPlay:
      case topLevelTypes.topPlaying:
      case topLevelTypes.topProgress:
      case topLevelTypes.topRateChange:
      case topLevelTypes.topReset:
      case topLevelTypes.topSeeked:
      case topLevelTypes.topSeeking:
      case topLevelTypes.topStalled:
      case topLevelTypes.topSubmit:
      case topLevelTypes.topSuspend:
      case topLevelTypes.topTimeUpdate:
      case topLevelTypes.topVolumeChange:
      case topLevelTypes.topWaiting:
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case topLevelTypes.topKeyPress:
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case topLevelTypes.topBlur:
      case topLevelTypes.topFocus:
        EventConstructor = SyntheticFocusEvent;
        break;
      case topLevelTypes.topClick:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topDoubleClick:
      case topLevelTypes.topMouseDown:
      case topLevelTypes.topMouseMove:
      case topLevelTypes.topMouseOut:
      case topLevelTypes.topMouseOver:
      case topLevelTypes.topMouseUp:
        EventConstructor = SyntheticMouseEvent;
        break;
      case topLevelTypes.topDrag:
      case topLevelTypes.topDragEnd:
      case topLevelTypes.topDragEnter:
      case topLevelTypes.topDragExit:
      case topLevelTypes.topDragLeave:
      case topLevelTypes.topDragOver:
      case topLevelTypes.topDragStart:
      case topLevelTypes.topDrop:
        EventConstructor = SyntheticDragEvent;
        break;
      case topLevelTypes.topTouchCancel:
      case topLevelTypes.topTouchEnd:
      case topLevelTypes.topTouchMove:
      case topLevelTypes.topTouchStart:
        EventConstructor = SyntheticTouchEvent;
        break;
      case topLevelTypes.topAnimationEnd:
      case topLevelTypes.topAnimationIteration:
      case topLevelTypes.topAnimationStart:
        EventConstructor = SyntheticAnimationEvent;
        break;
      case topLevelTypes.topTransitionEnd:
        EventConstructor = SyntheticTransitionEvent;
        break;
      case topLevelTypes.topScroll:
        EventConstructor = SyntheticUIEvent;
        break;
      case topLevelTypes.topWheel:
        EventConstructor = SyntheticWheelEvent;
        break;
      case topLevelTypes.topCopy:
      case topLevelTypes.topCut:
      case topLevelTypes.topPaste:
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ? "build" !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function (inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    if (registrationName === ON_CLICK_KEY) {
      var id = inst._rootNodeID;
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[id]) {
        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function (inst, registrationName) {
    if (registrationName === ON_CLICK_KEY) {
      var id = inst._rootNodeID;
      onClickListeners[id].remove();
      delete onClickListeners[id];
    }
  }

};

module.exports = SimpleEventPlugin;
},{"./EventConstants":105,"./EventPropagators":109,"./ReactDOMComponentTree":130,"./SyntheticAnimationEvent":185,"./SyntheticClipboardEvent":186,"./SyntheticDragEvent":188,"./SyntheticEvent":189,"./SyntheticFocusEvent":190,"./SyntheticKeyboardEvent":192,"./SyntheticMouseEvent":193,"./SyntheticTouchEvent":194,"./SyntheticTransitionEvent":195,"./SyntheticUIEvent":196,"./SyntheticWheelEvent":197,"./getEventCharCode":210,"./reactProdInvariant":224,"fbjs/lib/EventListener":4,"fbjs/lib/emptyFunction":11,"fbjs/lib/invariant":19,"fbjs/lib/keyOf":23}],185:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticAnimationEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;
},{"./SyntheticEvent":189}],186:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticClipboardEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;
},{"./SyntheticEvent":189}],187:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticCompositionEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;
},{"./SyntheticEvent":189}],188:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticDragEvent
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;
},{"./SyntheticMouseEvent":193}],189:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticEvent
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if ("build" !== 'production') {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if ("build" !== 'production') {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {

  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else {
      event.cancelBubble = true;
    }
    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if ("build" !== 'production') {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if ("build" !== 'production') {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }

});

SyntheticEvent.Interface = EventInterface;

if ("build" !== 'production') {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              "build" !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}
/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    "build" !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}
},{"./PooledClass":114,"fbjs/lib/emptyFunction":11,"fbjs/lib/warning":29,"object-assign":32}],190:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticFocusEvent
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;
},{"./SyntheticUIEvent":196}],191:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticInputEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;
},{"./SyntheticEvent":189}],192:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticKeyboardEvent
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventCharCode = require('./getEventCharCode');
var getEventKey = require('./getEventKey');
var getEventModifierState = require('./getEventModifierState');

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;
},{"./SyntheticUIEvent":196,"./getEventCharCode":210,"./getEventKey":211,"./getEventModifierState":212}],193:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticMouseEvent
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');
var ViewportMetrics = require('./ViewportMetrics');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function (event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function (event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function (event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;
},{"./SyntheticUIEvent":196,"./ViewportMetrics":199,"./getEventModifierState":212}],194:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticTouchEvent
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;
},{"./SyntheticUIEvent":196,"./getEventModifierState":212}],195:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticTransitionEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;
},{"./SyntheticEvent":189}],196:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticUIEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function (event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function (event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;
},{"./SyntheticEvent":189,"./getEventTarget":213}],197:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticWheelEvent
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX :
    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY :
    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY :
    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;
},{"./SyntheticMouseEvent":193}],198:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Transaction
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var Mixin = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function () {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function () {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function (method, scope, a, b, c, d, e, f) {
    !!this.isInTransaction() ? "build" !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function (startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function (startIndex) {
    !this.isInTransaction() ? "build" !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

var Transaction = {

  Mixin: Mixin,

  /**
   * Token to look for to determine if an error occurred.
   */
  OBSERVED_ERROR: {}

};

module.exports = Transaction;
},{"./reactProdInvariant":224,"fbjs/lib/invariant":19}],199:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ViewportMetrics
 */

'use strict';

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function (scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;
},{}],200:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule accumulateInto
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? "build" !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;
},{"./reactProdInvariant":224,"fbjs/lib/invariant":19}],201:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule adler32
 * 
 */

'use strict';

var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;
},{}],202:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule canDefineProperty
 */

'use strict';

var canDefineProperty = false;
if ("build" !== 'production') {
  try {
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;
},{}],203:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule checkReactTypeSpec
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? "build" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location);
      } catch (ex) {
        error = ex;
      }
      "build" !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if ("build" !== 'production') {
          var ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeDevtool.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeDevtool.getCurrentStackAddendum(element);
          }
        }

        "build" !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
},{"./ReactComponentTreeDevtool":123,"./ReactPropTypeLocationNames":171,"./reactProdInvariant":224,"fbjs/lib/invariant":19,"fbjs/lib/warning":29}],204:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createMicrosoftUnsafeLocalFunction
 */

/* globals MSApp */

'use strict';

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;
},{}],205:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule dangerousStyleValue
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var warning = require('fbjs/lib/warning');

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if ("build" !== 'production') {
      // Allow '0' to pass through without warning. 0 is already special and
      // doesn't require units, so we don't need to warn about it.
      if (component && value !== '0') {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          "build" !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;
},{"./CSSProperty":92,"fbjs/lib/warning":29}],206:[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * Based on the escape-html library, which is used under the MIT License below:
 *
 * Copyright (c) 2012-2013 TJ Holowaychuk
 * Copyright (c) 2015 Andreas Lubbe
 * Copyright (c) 2015 Tiancheng "Timothy" Gu
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @providesModule escapeTextContentForBrowser
 */

'use strict';

// code copied and modified from escape-html
/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;
      case 38:
        // &
        escape = '&amp;';
        break;
      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
        break;
      case 60:
        // <
        escape = '&lt;';
        break;
      case 62:
        // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
}
// end code copied and modified from escape-html

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }
  return escapeHtml(text);
}

module.exports = escapeTextContentForBrowser;
},{}],207:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule findDOMNode
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstanceMap = require('./ReactInstanceMap');

var getHostComponentFromComposite = require('./getHostComponentFromComposite');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Returns the DOM node rendered by this element.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if ("build" !== 'production') {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      "build" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getHostComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
    !false ? "build" !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
  } else {
    !false ? "build" !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
  }
}

module.exports = findDOMNode;
},{"./ReactCurrentOwner":125,"./ReactDOMComponentTree":130,"./ReactInstanceMap":161,"./getHostComponentFromComposite":214,"./reactProdInvariant":224,"fbjs/lib/invariant":19,"fbjs/lib/warning":29}],208:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule flattenChildren
 * 
 */

'use strict';

var KeyEscapeUtils = require('./KeyEscapeUtils');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 * @param {number=} selfDebugID Optional debugID of the current internal instance.
 */
function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  // We found a component instance.
  if (traverseContext && typeof traverseContext === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if ("build" !== 'production') {
      var ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
      "build" !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if ("build" !== 'production') {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;
},{"./KeyEscapeUtils":112,"./ReactComponentTreeDevtool":123,"./traverseAllChildren":229,"fbjs/lib/warning":29}],209:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule forEachAccumulated
 * 
 */

'use strict';

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;
},{}],210:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventCharCode
 */

'use strict';

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;
},{}],211:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventKey
 */

'use strict';

var getEventCharCode = require('./getEventCharCode');

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;
},{"./getEventCharCode":210}],212:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventModifierState
 */

'use strict';

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  'Alt': 'altKey',
  'Control': 'ctrlKey',
  'Meta': 'metaKey',
  'Shift': 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;
},{}],213:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventTarget
 */

'use strict';

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;
},{}],214:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getHostComponentFromComposite
 */

'use strict';

var ReactNodeTypes = require('./ReactNodeTypes');

function getHostComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.HOST) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getHostComponentFromComposite;
},{"./ReactNodeTypes":168}],215:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getIteratorFn
 * 
 */

'use strict';

/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
},{}],216:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getNodeForCharacterOffset
 */

'use strict';

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;
},{}],217:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getTextContentAccessor
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;
},{"fbjs/lib/ExecutionEnvironment":5}],218:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getVendorPrefixedEventName
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;
},{"fbjs/lib/ExecutionEnvironment":5}],219:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule instantiateReactComponent
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var ReactCompositeComponent = require('./ReactCompositeComponent');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactHostComponent = require('./ReactHostComponent');
var ReactInstrumentation = require('./ReactInstrumentation');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function (element) {
  this.construct(element);
};
_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
  _instantiateReactComponent: instantiateReactComponent
});

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function getDisplayName(instance) {
  var element = instance._currentElement;
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else if (instance.getName) {
    return instance.getName() || 'Unknown';
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

var nextDebugID = 1;

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {boolean} shouldHaveDebugID
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? "build" !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);

      // We renamed this. Allow the old name for compat. :(
      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
    !false ? "build" !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
  }

  if ("build" !== 'production') {
    "build" !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if ("build" !== 'production') {
    if (shouldHaveDebugID) {
      var debugID = nextDebugID++;
      instance._debugID = debugID;
      var displayName = getDisplayName(instance);
      ReactInstrumentation.debugTool.onSetDisplayName(debugID, displayName);
      var owner = node && node._owner;
      if (owner) {
        ReactInstrumentation.debugTool.onSetOwner(debugID, owner._debugID);
      }
    } else {
      instance._debugID = 0;
    }
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if ("build" !== 'production') {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

module.exports = instantiateReactComponent;
},{"./ReactCompositeComponent":124,"./ReactEmptyComponent":152,"./ReactHostComponent":157,"./ReactInstrumentation":162,"./reactProdInvariant":224,"fbjs/lib/invariant":19,"fbjs/lib/warning":29,"object-assign":32}],220:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isEventSupported
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;
},{"fbjs/lib/ExecutionEnvironment":5}],221:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isTextInputElement
 * 
 */

'use strict';

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

module.exports = isTextInputElement;
},{}],222:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule onlyChild
 */
'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactElement = require('./ReactElement');

var invariant = require('fbjs/lib/invariant');

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ? "build" !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : _prodInvariant('23') : void 0;
  return children;
}

module.exports = onlyChild;
},{"./ReactElement":150,"./reactProdInvariant":224,"fbjs/lib/invariant":19}],223:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule quoteAttributeValueForBrowser
 */

'use strict';

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;
},{"./escapeTextContentForBrowser":206}],224:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule reactProdInvariant
 * 
 */
'use strict';

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;
},{}],225:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
* @providesModule renderSubtreeIntoContainer
*/

'use strict';

var ReactMount = require('./ReactMount');

module.exports = ReactMount.renderSubtreeIntoContainer;
},{"./ReactMount":165}],226:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setInnerHTML
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var DOMNamespaces = require('./DOMNamespaces');

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node
  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var newNodes = reusableSVGContainer.firstChild.childNodes;
    for (var i = 0; i < newNodes.length; i++) {
      node.appendChild(newNodes[i]);
    }
  } else {
    node.innerHTML = html;
  }
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function (node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xFEFF) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;
},{"./DOMNamespaces":98,"./createMicrosoftUnsafeLocalFunction":204,"fbjs/lib/ExecutionEnvironment":5}],227:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setTextContent
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var setInnerHTML = require('./setInnerHTML');

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;
},{"./escapeTextContentForBrowser":206,"./setInnerHTML":226,"fbjs/lib/ExecutionEnvironment":5}],228:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule shouldUpdateReactComponent
 */

'use strict';

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;
},{}],229:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule traverseAllChildren
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactElement = require('./ReactElement');

var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var warning = require('fbjs/lib/warning');

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if ("build" !== 'production') {
          "build" !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if ("build" !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? "build" !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
},{"./KeyEscapeUtils":112,"./ReactCurrentOwner":125,"./ReactElement":150,"./getIteratorFn":215,"./reactProdInvariant":224,"fbjs/lib/invariant":19,"fbjs/lib/warning":29}],230:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule validateDOMNesting
 */

'use strict';

var _assign = require('object-assign');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var validateDOMNesting = emptyFunction;

if ("build" !== 'production') {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':

      case 'pre':
      case 'listing':

      case 'table':

      case 'hr':

      case 'xmp':

      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function (instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      if (childTag !== '#text') {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        "build" !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
      } else {
        "build" !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;
},{"fbjs/lib/emptyFunction":11,"fbjs/lib/warning":29,"object-assign":32}],231:[function(require,module,exports){
'use strict';

module.exports = require('./lib/React');

},{"./lib/React":115}],232:[function(require,module,exports){
'use strict';
module.exports = function (str) {
	return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
		return '%' + c.charCodeAt(0).toString(16).toUpperCase();
	});
};

},{}],233:[function(require,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = function() {};

if ("build" !== 'production') {
  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
      throw new Error(
        'The warning format should be able to uniquely identify this ' +
        'warning. Please, use a more descriptive format than: ' + format
      );
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' +
        format.replace(/%s/g, function() {
          return args[argIndex++];
        });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch(x) {}
    }
  };
}

module.exports = warning;

},{}],234:[function(require,module,exports){
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactRouter = require('react-router');

var _LeftNav = require('./components/LeftNav');

var _LeftNav2 = _interopRequireDefault(_LeftNav);

var _RightNav = require('./components/RightNav');

var _RightNav2 = _interopRequireDefault(_RightNav);

var _Location = require('./components/Location');

var _Location2 = _interopRequireDefault(_Location);

var _Locations = require('./components/Locations');

var _Locations2 = _interopRequireDefault(_Locations);

var _markers = require('./data/markers.json');

var _markers2 = _interopRequireDefault(_markers);

var _locations = require('./data/locations.json');

var _locations2 = _interopRequireDefault(_locations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Map = function (_React$Component) {
  _inherits(Map, _React$Component);

  function Map(args) {
    _classCallCheck(this, Map);

    var _this = _possibleConstructorReturn(this, (Map.__proto__ || Object.getPrototypeOf(Map)).call(this, args));

    _this.state = {
      markers: _markers2.default,
      locations: _locations2.default
    };
    return _this;
  }

  _createClass(Map, [{
    key: 'render',
    value: function render() {
      var children = _react2.default.cloneElement(this.props.children, _extends({}, this.state));
      return _react2.default.createElement(
        'div',
        { className: 'Map', style: { height: window.outerHeight } },
        _react2.default.createElement(_LeftNav2.default, null),
        _react2.default.createElement(_RightNav2.default, null),
        children
      );
    }
  }]);

  return Map;
}(_react2.default.Component);

var App = function (_React$Component2) {
  _inherits(App, _React$Component2);

  function App() {
    _classCallCheck(this, App);

    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
  }

  _createClass(App, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactRouter.Router,
        { history: _reactRouter.hashHistory },
        _react2.default.createElement(
          _reactRouter.Route,
          { path: '/', component: Map },
          _react2.default.createElement(_reactRouter.IndexRoute, { component: _Locations2.default }),
          _react2.default.createElement(_reactRouter.Route, { path: '/locations', component: _Locations2.default }),
          _react2.default.createElement(_reactRouter.Route, { path: '/locations/:location', component: _Location2.default })
        )
      );
    }
  }]);

  return App;
}(_react2.default.Component);

_reactDom2.default.render(_react2.default.createElement(App, null), document.getElementById('map'));

},{"./components/LeftNav":236,"./components/Location":237,"./components/Locations":238,"./components/RightNav":239,"./data/locations.json":240,"./data/markers.json":241,"react":231,"react-dom":34,"react-router":64}],235:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _svg = require('../data/svg');

var _svg2 = _interopRequireDefault(_svg);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HoverArea = function (_React$Component) {
  _inherits(HoverArea, _React$Component);

  function HoverArea(props) {
    _classCallCheck(this, HoverArea);

    var _this = _possibleConstructorReturn(this, (HoverArea.__proto__ || Object.getPrototypeOf(HoverArea)).call(this, props));

    _this.handleHover = function (colour) {
      return function () {
        _this.setState({ stroke: colour });
      };
    };

    _this.handleClick = function () {
      var name = _this.props.name;

      _this.context.router.push('/locations/' + name);
    };

    _this.state = { stroke: props.stroke };
    return _this;
  }

  _createClass(HoverArea, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
      var name = _props.name;
      var width = _props.width;
      var left = _props.left;
      var top = _props.top;
      var _props$viewBox = _props.viewBox;
      var viewBox = _props$viewBox === undefined ? '0 0 744.09448819 1052.3622047' : _props$viewBox;
      var _props$stroke = _props.stroke;
      var stroke = _props$stroke === undefined ? 'transparent' : _props$stroke;
      var _props$strokeActive = _props.strokeActive;
      var strokeActive = _props$strokeActive === undefined ? 'gold' : _props$strokeActive;

      return _react2.default.createElement(
        'svg',
        {
          className: 'HoverArea',
          viewBox: viewBox,
          preserveAspectRatio: 'xMidYMid slice',
          stroke: this.state.stroke,
          onMouseOver: this.handleHover(strokeActive),
          onMouseOut: this.handleHover(stroke),
          onClick: this.handleClick,
          style: { width: width, left: left, top: top } },
        _svg2.default[name]
      );
    }
  }]);

  return HoverArea;
}(_react2.default.Component);

HoverArea.contextTypes = {
  router: _react.PropTypes.object
};
exports.default = HoverArea;

},{"../data/svg":242,"react":231}],236:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LeftNav = function (_React$Component) {
  _inherits(LeftNav, _React$Component);

  function LeftNav() {
    _classCallCheck(this, LeftNav);

    return _possibleConstructorReturn(this, (LeftNav.__proto__ || Object.getPrototypeOf(LeftNav)).apply(this, arguments));
  }

  _createClass(LeftNav, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement("div", { className: "LeftNav" });
    }
  }]);

  return LeftNav;
}(_react2.default.Component);

exports.default = LeftNav;

},{"react":231}],237:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Location = function (_React$Component) {
  _inherits(Location, _React$Component);

  function Location() {
    _classCallCheck(this, Location);

    return _possibleConstructorReturn(this, (Location.__proto__ || Object.getPrototypeOf(Location)).apply(this, arguments));
  }

  _createClass(Location, [{
    key: 'scrollPanorama',
    value: function scrollPanorama() {
      var direction = arguments.length <= 0 || arguments[0] === undefined ? 'right' : arguments[0];

      var scrollLeftBy = direction === 'right' ? 500 : -500;
      return function () {
        // TODO: animate this (possibly pull jQuery in)
        document.getElementsByClassName('panorama-container')[0].scrollLeft += scrollLeftBy;
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var router = this.context.router;
      document.addEventListener('keydown', function (e) {
        e = e || window.event;
        var isEscape = false;
        if ('key' in e) {
          isEscape = e.key == 'Escape';
        } else {
          isEscape = e.keyCode == 27;
        }
        if (isEscape) {
          router.replace('/locations');
        }
      });
      var locationId = this.props.params.location;
      var location = this.props.locations.find(function (el) {
        return el.id === locationId;
      });
      var imageUrl = '/fantasy-map' + location.backgroundUrl;
      return _react2.default.createElement(
        'div',
        { className: 'Location' },
        _react2.default.createElement(
          'div',
          { className: 'panorama-container', onDragStart: function onDragStart(e) {
              console.log(e);
            } },
          _react2.default.createElement(
            'div',
            { className: 'left-arrow', onClick: this.scrollPanorama('left') },
            '<'
          ),
          _react2.default.createElement('img', { className: 'panorama-image', src: imageUrl }),
          _react2.default.createElement(
            'div',
            { className: 'right-arrow', onClick: this.scrollPanorama('right') },
            '>'
          )
        )
      );
    }
  }]);

  return Location;
}(_react2.default.Component);

Location.contextTypes = {
  router: _react.PropTypes.object
};
exports.default = Location;

},{"react":231}],238:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _HoverArea = require('./HoverArea');

var _HoverArea2 = _interopRequireDefault(_HoverArea);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Locations = function (_React$Component) {
  _inherits(Locations, _React$Component);

  function Locations() {
    _classCallCheck(this, Locations);

    return _possibleConstructorReturn(this, (Locations.__proto__ || Object.getPrototypeOf(Locations)).apply(this, arguments));
  }

  _createClass(Locations, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'map-image' },
        _react2.default.createElement(
          'div',
          { className: 'Locations' },
          _react2.default.createElement(_HoverArea2.default, {
            name: 'ivoryKingdoms',
            width: '379px',
            left: '217px',
            top: '144px',
            viewBox: '35 97 680 775',
            strokeActive: 'gold' }),
          _react2.default.createElement(_HoverArea2.default, {
            name: 'jungle',
            width: '347px',
            left: '516px',
            top: '358px',
            viewBox: '0 350 745 450',
            strokeActive: 'gold' }),
          _react2.default.createElement(_HoverArea2.default, {
            name: 'desert',
            width: '687px',
            left: '373px',
            top: '442px',
            viewBox: '20 410 700 380',
            strokeActive: 'gold' }),
          _react2.default.createElement(_HoverArea2.default, {
            name: 'steppes',
            width: '230px',
            left: '383px',
            top: '416px',
            viewBox: '35 275 700 520',
            strokeActive: 'gold' }),
          _react2.default.createElement(_HoverArea2.default, {
            name: 'swamps',
            width: '132px',
            left: '707px',
            top: '354px',
            viewBox: '50 150 680 710',
            strokeActive: 'gold' }),
          _react2.default.createElement(_HoverArea2.default, {
            name: 'mountains',
            width: '642px',
            left: '501px',
            top: '168px',
            viewBox: '25 320 710 240',
            strokeActive: 'gold' }),
          _react2.default.createElement(_HoverArea2.default, {
            name: 'plains',
            width: '498px',
            left: '803px',
            top: '309px',
            viewBox: '10 280 725 355',
            strokeActive: 'gold' })
        )
      );
    }
  }]);

  return Locations;
}(_react2.default.Component);

exports.default = Locations;

},{"./HoverArea":235,"react":231}],239:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RightNav = function (_React$Component) {
  _inherits(RightNav, _React$Component);

  function RightNav() {
    _classCallCheck(this, RightNav);

    return _possibleConstructorReturn(this, (RightNav.__proto__ || Object.getPrototypeOf(RightNav)).apply(this, arguments));
  }

  _createClass(RightNav, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement("div", { className: "RightNav" });
    }
  }]);

  return RightNav;
}(_react2.default.Component);

exports.default = RightNav;

},{"react":231}],240:[function(require,module,exports){
module.exports=[
  {
    "id": "ivoryKingdoms",
    "backgroundUrl": "/images/ivory-kingdoms-panorama.jpg"
  },
  {
    "id": "jungle",
    "backgroundUrl": "/images/jungle-panorama.jpg"
  },
  {
    "id": "desert",
    "backgroundUrl": "/images/desert-panorama.jpg"
  },
  {
    "id": "steppes",
    "backgroundUrl": "/images/steppes-panorama.jpg"
  },
  {
    "id": "swamps",
    "backgroundUrl": "/images/swamps-panorama.jpg"
  },
  {
    "id": "mountains",
    "backgroundUrl": "/images/mountains-panorama.jpg"
  },
  {
    "id": "plains",
    "backgroundUrl": "/images/plains-panorama.jpg"
  }
]

},{}],241:[function(require,module,exports){
module.exports=[
  {
    "id": "cursed-swamps",
    "left": 100,
    "top": 100,
    "hoverText": "cursed-swamps"
  },
  {
    "id": "ivory-kingdoms",
    "left": 450,
    "top": 400,
    "hoverText": "ivory-kingdoms"
  },
  {
    "id": "northern-mountains",
    "left": 743,
    "top": 400,
    "hoverText": "northern-mountains"
  },
  {
    "id": "steppes",
    "left": 1085,
    "top": 250,
    "hoverText": "stepps"
  },
  {
    "id": "location-4",
    "left": 600,
    "top": 300,
    "hoverText": "someHoverText"
  }
]

},{}],242:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _react=require('react');var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var style={fill:'none',fillRule:'evenodd',strokeWidth:'2px',strokeLinejoin:'miter',strokeOpacity:'1'};var midBoldStyle=_extends({},style,{strokeWidth:'5px'});var boldStyle=_extends({},style,{strokeWidth:'10px'});var SVGs={};SVGs.ivoryKingdoms=_react2.default.createElement('g',{transform:'matrix(0.28717692,0,0,0.28717692,-353.68322,-161.80584)',style:boldStyle},_react2.default.createElement('path',{d:'m 1435.9323,1821.1477 c 7.5675,-1.8919 15.7256,-2.1872 22.7025,-5.6757 1.6921,-0.846 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3377 3.9834,0.8461 5.6756,0 4.7861,-2.393 6.5651,-8.9582 11.3512,-11.3512 1.6922,-0.8461 4.3379,1.3377 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6757,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6757 1.3377,-1.3377 4.3378,1.3378 5.6756,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3377 4.3379,1.3378 5.6756,0 1.3378,-1.3377 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6757,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6757 1.3377,-1.3377 4.3378,1.3378 5.6756,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3377 4.3378,1.3378 5.6756,0 1.3378,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3378,-1.3378 3.9835,0.8461 5.6756,0 2.3931,-1.1965 3.2826,-4.4791 5.6756,-5.6756 1.6922,-0.8461 4.3379,1.3377 5.6757,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 3.9834,0.846 5.6756,0 2.393,-1.1966 3.2826,-4.4791 5.6756,-5.6757 1.6922,-0.846 4.3379,1.3378 5.6756,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.3378,-1.3377 4.3379,1.3378 5.6757,0 1.3377,-1.3377 -1.3378,-4.3379 0,-5.6756 15.1349,0 -1.8919,1.8919 5.6756,-5.6756 11.743,-11.7431 -0.4591,17.9449 11.3512,-5.6757 0.8461,-1.6921 -1.3377,-4.3378 0,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3513,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3378 4.3378,1.3378 5.6756,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 3.9835,0.8461 5.6756,0 23.6206,-11.8103 -6.0674,0.3918 5.6756,-11.3513 1.3378,-1.3377 4.3379,1.3378 5.6756,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.3378,-1.3377 4.3379,1.3378 5.6757,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3378 4.3378,1.3378 5.6756,0 1.8935,-1.8935 -1.8935,-9.4578 0,-11.3512 1.3377,-1.3378 4.3379,1.3377 5.6756,0 1.8833,-1.8834 -1.8833,-9.468 0,-11.3513 1.3378,-1.3377 4.3379,1.3378 5.6756,0 1.3658,-1.3657 -1.3657,-21.3367 0,-22.7025 1.3378,-1.3377 4.3379,1.3378 5.6757,0 1.1603,-1.1603 -1.1252,-14.7765 0,-17.0268 1.1965,-2.3931 4.4791,-3.2826 5.6756,-5.6757 0.846,-1.6921 -0.8461,-3.9834 0,-5.6756 1.1965,-2.393 4.4791,-3.2826 5.6756,-5.6756 0.8461,-1.6921 -1.3378,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6756,0 2.6755,-2.6755 -2.6755,-8.6758 0,-11.3513 1.3378,-1.3377 4.3379,1.3378 5.6756,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.3378,-1.3377 4.3379,1.3378 5.6757,0 1.3377,-1.3377 -0.8461,-3.9835 0,-5.6756 1.1965,-2.3931 4.4791,-3.2826 5.6756,-5.6756 0.8461,-1.6922 -1.3378,-4.3379 0,-5.6757 1.3377,-1.3377 4.3379,1.3378 5.6756,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.3378,-1.3377 4.3379,1.3378 5.6756,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 2.6755,-2.6755 8.6758,2.6755 11.3513,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 2.8378,-2.8378 14.189,2.8378 17.0268,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 2.6756,-2.6756 8.6758,2.6755 11.3513,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6757 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.888,-1.888 9.4633,1.888 11.3513,0 1.3377,-1.3377 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 3.9834,0.8461 5.6756,0 2.393,-1.1965 3.2826,-4.4791 5.6756,-5.6756 1.6922,-0.8461 3.7838,0 5.6756,0 1.8919,-1.8919 3.2826,-4.4791 5.6757,-5.6757 1.6921,-0.846 3.7837,0 5.6756,0 1.8918,-1.8918 3.2825,-4.479 5.6756,-5.6756 3.3843,-1.6921 8.6757,2.6755 11.3512,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 2.6756,-2.6755 8.6758,2.6755 11.3513,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 3.9835,0.846 5.6756,0 2.3931,-1.1966 3.2826,-4.4791 5.6757,-5.6757 3.3843,-1.6921 8.6757,2.6756 11.3512,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3513,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 2.6755,-2.6755 7.9669,1.6921 11.3512,0 2.3931,-1.1965 3.2826,-4.4791 5.6756,-5.6756 1.6922,-0.8461 3.9835,0.846 5.6756,0 14.0268,-7.0134 -1.9591,-5.6756 11.3513,-5.6756 1.8919,0 5.6756,-1.8919 5.6756,0 0,1.8918 -5.6756,1.8918 -5.6756,0 0,-2.6756 4.4791,-3.2826 5.6756,-5.6757 0.8461,-1.6921 -1.3377,-4.3378 0,-5.6756 1.3378,-1.3377 4.3379,1.3378 5.6756,0 1.3378,-1.3377 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6757,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 4.3378,1.3377 5.6756,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6757 1.3377,-1.3377 3.9835,0.8461 5.6756,0 2.393,-1.1965 3.2826,-4.479 5.6756,-5.6756 15.135,0 -1.8919,1.8919 5.6756,-5.6756 2.6756,-2.6755 8.6758,2.6755 11.3513,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.1603,-1.1603 14.7765,1.1251 17.0268,0 2.3931,-1.1965 3.2826,-4.4791 5.6757,-5.6756 2.2503,-1.1252 15.8665,1.1603 17.0268,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6757 1.1603,-1.1603 14.7766,1.1252 17.0269,0 2.393,-1.1965 3.2826,-4.4791 5.6756,-5.6756 3.3843,-1.6921 7.967,1.6922 11.3513,0 2.393,-1.1965 3.2825,-4.4791 5.6756,-5.6756 3.3843,-1.6921 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 2.6755,-2.6755 8.6758,2.6755 11.3513,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3657,-1.3658 21.3367,1.3657 22.7025,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6757 1.7574,-1.7574 26.6206,1.7575 28.3781,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 0.2284,-0.2284 20.6182,0 22.7025,0 3.7666,0 7.5845,0 11.3512,0 1.8919,0 5.6756,-1.8919 5.6756,0 0,1.8919 -7.5675,0 -5.6756,0 3.7837,0 7.967,-1.6921 11.3512,0 1.6922,0.8461 -1.3377,4.3379 0,5.6756 2.6756,2.6755 8.6758,-2.6755 11.3513,0 1.3377,1.3378 0,3.7838 0,5.6757 0,1.8918 1.3377,4.3378 0,5.6756 -2.6755,2.6755 -8.6757,-2.6755 -11.3513,0 -1.3377,1.3377 1.3378,4.3378 0,5.6756 -2.6755,2.6755 -8.6757,-2.6755 -11.3512,0 -1.3378,1.3378 1.3378,4.3379 0,5.6756 -1.8935,1.8935 -9.4578,-1.8935 -11.3512,0 -1.3378,1.3378 1.3377,4.3379 0,5.6756 -2.6756,2.6756 -8.6758,-2.6755 -11.3513,0 -1.3377,1.3378 0.8461,3.9835 0,5.6757 -1.1965,2.393 -4.4791,3.2825 -5.6756,5.6756 -1.6922,3.3843 1.6921,7.9669 0,11.3512 -1.1965,2.3931 -4.4791,3.2826 -5.6756,5.6756 -0.8461,1.6922 1.8918,5.6757 0,5.6757 -1.8919,0 0,-7.5675 0,-5.6757 0,5.6757 0,11.3513 0,17.0269 0,3.7907 0,7.5606 0,11.3513 0,1.8918 1.8918,5.6756 0,5.6756 -1.8919,0 0,-7.5675 0,-5.6756 0,3.7837 0,7.5674 0,11.3512 0,1.8919 1.8918,5.6756 0,5.6756 -1.8919,0 0,-7.5675 0,-5.6756 0,32.1619 -3.7838,1.8919 5.6756,11.3512 1.3377,1.3378 -1.3378,4.3379 0,5.6757 1.3377,1.3377 4.3379,-1.3378 5.6756,0 11.7431,11.743 -17.9449,-0.4591 5.6756,11.3512 1.6922,0.8461 4.3379,-1.3378 5.6757,0 2.6755,2.6755 -2.6756,8.6757 0,11.3512 1.3377,1.3378 4.3378,-1.3377 5.6756,0 1.3377,1.3378 -1.3378,4.3379 0,5.6757 2.6755,2.6755 8.6757,-2.6755 11.3512,0 1.3378,1.3377 -1.3377,4.3378 0,5.6756 1.3378,1.3377 4.3379,-1.3378 5.6756,0 1.3378,1.3377 -1.3377,4.3379 0,5.6756 1.3378,1.3378 4.3379,-1.3377 5.6757,0 1.3377,1.3378 -1.3378,4.3379 0,5.6756 1.3377,1.3378 4.3378,-1.3377 5.6756,0 1.3377,1.3378 -1.3378,4.3379 0,5.6757 1.3377,1.3377 4.3378,-1.3378 5.6756,0 1.3378,1.3377 -1.3378,4.3378 0,5.6756 1.3378,1.3377 4.3379,-1.3378 5.6756,0 1.3378,1.3377 -1.3377,4.3378 0,5.6756 1.3378,1.3378 4.3379,-1.3378 5.6756,0 1.3378,1.3378 0,3.7837 0,5.6756 1.8919,0 4.3379,-1.3377 5.6757,0 1.3377,1.3378 -1.3378,4.3379 0,5.6756 1.3377,1.3378 4.3378,-1.3377 5.6756,0 1.3377,1.3378 -1.3378,4.3379 0,5.6757 1.3377,1.3377 4.3379,-1.3378 5.6756,0 1.3378,1.3377 -1.3377,4.3378 0,5.6756 1.3378,1.3377 4.3379,-1.3378 5.6756,0 1.3378,1.3377 -1.3377,4.3379 0,5.6756 1.3378,1.3378 4.3379,-1.3377 5.6757,0 2.6755,2.6755 -2.6756,8.6757 0,11.3513 1.3377,1.3377 4.3378,-1.3378 5.6756,0 1.3377,1.3377 -1.3378,4.3378 0,5.6756 13.3103,13.3103 0,-17.4859 0,-5.6756 0,4.2303 4.3378,7.3379 5.6756,11.3512 1.1965,3.5896 -2.6755,8.6757 0,11.3512 7.5675,7.5675 5.6756,-9.4593 5.6756,5.6757 0,9.4593 0,18.9187 0,28.3781 0,1.8918 1.3378,4.3378 0,5.6756 -7.5675,7.5675 -5.6756,-9.4594 -5.6756,5.6756 0,5.6756 0,11.3513 0,17.0269 0,1.8919 0,7.5675 0,5.6756 0,-3.7837 3.7837,-11.3512 0,-11.3512 -4.2304,0 -4.3379,7.3379 -5.6756,11.3512 -1.0674,3.2022 0,13.2974 0,17.0269 0,15.135 0,30.2699 0,45.4049 0,11.3513 0,22.7025 0,34.0538 0,2.556 -0.8637,15.2995 0,17.0268 1.1965,2.3931 4.4791,3.2826 5.6756,5.6757 1.9602,3.9203 -1.9923,26.3858 0,28.3781 1.3378,1.3377 4.3379,-1.3378 5.6756,0 1.3378,1.3377 0,3.7837 0,5.6756 0,1.8919 0,3.7837 0,5.6756 0,1.8919 1.8919,5.6756 0,5.6756 -1.8919,0 0,-7.5675 0,-5.6756 0,3.7838 0,7.5675 0,11.3512 0,1.8919 1.8919,5.6757 0,5.6757 -1.8919,0 0,-7.5675 0,-5.6757 0,3.7838 1.6922,7.967 0,11.3513 -0.8461,1.6921 -4.3378,-1.3378 -5.6756,0 -1.3378,1.3377 1.3378,4.3379 0,5.6756 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -1.3378,1.3378 1.8919,5.6756 0,5.6756 -1.8919,0 0,-7.5675 0,-5.6756 0,3.7838 0,7.5675 0,11.3513 0,1.8918 -1.3378,4.3378 0,5.6756 1.3377,1.3377 4.3378,-1.3378 5.6756,0 1.3378,1.3377 -0.8461,3.9835 0,5.6756 1.1965,2.3931 4.4791,3.2826 5.6756,5.6756 1.6922,3.3843 -2.6755,8.6758 0,11.3513 1.3378,1.3377 4.3379,-1.3378 5.6756,0 1.3378,1.3377 0,3.7837 0,5.6756 1.8919,0 4.3379,-1.3378 5.6757,0 1.3377,1.3377 -1.3378,4.3379 0,5.6756 2.6755,2.6755 8.6757,-2.6755 11.3512,0 1.3378,1.3378 -1.3378,4.3379 0,5.6756 2.6755,2.6755 8.6757,-2.6755 11.3513,0 1.3377,1.3378 -1.3378,4.3379 0,5.6757 2.6755,2.6755 8.6757,-2.6756 11.3512,0 1.3378,1.3377 -1.3378,4.3378 0,5.6756 1.3378,1.3377 3.9835,-0.8461 5.6756,0 2.3931,1.1965 3.2826,4.4791 5.6756,5.6756 1.6922,0.8461 4.3379,-1.3378 5.6757,0 1.3377,1.3378 -1.3378,4.3379 0,5.6756 1.3377,1.3378 4.3378,-1.3377 5.6756,0 1.3377,1.3378 0,3.7838 0,5.6756 1.8919,0 3.9835,-0.846 5.6756,0 2.3931,1.1966 3.2826,4.4791 5.6756,5.6757 1.6922,0.846 4.3379,-1.3378 5.6756,0 1.3378,1.3377 -1.3377,4.3378 0,5.6756 1.8935,1.8935 9.4578,-1.8935 11.3513,0 1.3377,1.3377 -1.3378,4.3378 0,5.6756 2.6755,2.6755 8.6757,-2.6755 11.3512,0 1.3378,1.3378 -1.3377,4.3379 0,5.6756 2.8378,2.8378 14.1891,-2.8378 17.0269,0 1.3378,1.3378 -1.3378,4.3379 0,5.6756 0.2284,0.2284 20.6182,0 22.7025,0 1.8919,0 3.7837,0 5.6756,0 1.8919,0 5.6756,-1.8918 5.6756,0 0,1.8919 -7.5675,0 -5.6756,0 5.6756,0 11.3512,0 17.0269,0 1.8918,0 4.3378,1.3378 5.6756,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3377 5.6756,-1.8919 5.6756,0 0,1.8919 -4.3379,1.3378 -5.6756,0 -1.3378,-1.3377 1.3377,-4.3378 0,-5.6756 -1.8935,-1.8935 -9.4578,1.8935 -11.3513,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -4.3378,1.3377 -5.6756,0 -7.5675,-7.5675 9.4594,-5.6756 -5.6756,-5.6756 -3.992,0 -15.8206,3.263 -11.3512,-5.6757 1.1965,-2.393 4.4791,-3.2825 5.6756,-5.6756 3.9143,-7.8287 -6.8735,-5.0767 5.6756,-11.3512 1.6921,-0.8461 4.3379,1.3377 5.6756,0 1.3378,-1.3378 -0.846,-3.9835 0,-5.6756 0.8108,-1.6215 10.5405,-9.7298 11.3513,-11.3513 0.846,-1.6921 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 4.3378,1.3377 5.6756,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 4.3379,1.3377 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6757 1.3378,-1.3377 4.3379,1.3378 5.6756,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.3378,-1.3377 3.9835,0.8461 5.6757,0 2.393,-1.1965 3.2825,-4.4791 5.6756,-5.6756 1.6921,-0.8461 4.3378,1.3378 5.6756,0 1.3378,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 3.7838,0 5.6756,0 1.8919,0 3.7838,0 5.6757,0 1.8918,0 7.5675,0 5.6756,0 -3.7838,0 -15.135,0 -11.3513,0 5.6757,0 11.3513,0 17.0269,0 3.787,0 7.5643,0 11.3513,0 1.8918,0 7.5674,0 5.6756,0 -3.7838,0 -15.135,0 -11.3513,0 5.6757,0 11.6425,-1.7948 17.0269,0 3.5896,1.1965 -2.6755,8.6757 0,11.3512 1.3378,1.3378 4.3379,-1.3378 5.6756,0 2.6755,2.6755 -2.6755,8.6757 0,11.3512 1.3378,1.3378 4.3379,-1.3377 5.6756,0 1.8954,1.8954 -1.8953,9.456 0,11.3513 1.3378,1.3377 4.3379,1.3377 5.6757,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3378,-4.3379 0,-5.6757 2.8378,-2.8378 14.1891,2.8379 17.0269,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 2.8378,-2.8378 14.189,2.8378 17.0268,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.3378,-1.3378 3.7838,0 5.6757,0 1.8918,0 5.6756,-1.8919 5.6756,0 0,1.8919 -7.5675,0 -5.6756,0 32.1618,0 1.8918,3.7837 11.3512,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 3.7838,0 5.6757,0 1.8918,0 7.5675,0 5.6756,0 -3.7838,0 -15.135,0 -11.3513,0 9.4594,0 18.9188,0 28.3781,0 11.3513,0 22.7025,0 34.0538,0 1.8919,0 4.3378,1.3377 5.6756,0 7.5675,-7.5675 -9.4594,-5.6757 5.6756,-5.6757 1.8919,0 3.7838,0 5.6756,0 1.8919,0 3.9835,0.8461 5.6757,0 2.393,-1.1965 3.2825,-4.4791 5.6756,-5.6756 3.0133,-1.5067 8.3379,1.5067 11.3512,0 14.0268,-7.0134 -1.9591,-5.6756 11.3513,-5.6756 1.8918,0 3.7837,0 5.6756,0 1.8919,0 5.6756,-1.8919 5.6756,0 0,1.8919 -5.6756,-1.8919 -5.6756,0 0,11.8103 7.9593,2.2837 11.3512,5.6756 1.3378,1.3378 -1.3377,4.3379 0,5.6756 1.3378,1.3378 4.3379,-1.3377 5.6757,0 0.5675,0.5676 0.5675,16.4593 0,17.0269 -1.3378,1.3378 -4.3379,-1.3378 -5.6757,0 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -3.7837,0 -5.6756,0 -1.8919,0 -3.7837,0 -5.6756,0 71.4558,22.5213 -4.2859,0 28.3781,0 1.8919,0 3.7838,0 5.6756,0 1.8919,0 4.3379,1.3378 5.6756,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.8834,-1.8833 9.468,1.8833 11.3513,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.9922,-1.9923 24.4578,1.9601 28.3781,0 2.3931,-1.1965 3.2826,-4.4791 5.6756,-5.6756 1.7273,-0.8637 14.4708,0 17.0269,0 1.8919,0 7.5675,0 5.6756,0 -3.7837,0 -15.135,0 -11.3512,0 52.9724,0 5.6756,5.6756 17.0268,-5.6757 2.6755,-2.6755 8.6758,2.6755 11.3513,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3377 4.3378,1.3378 5.6756,0 1.3377,-1.3377 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 4.3379,1.3377 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6757 2.6756,-2.6755 8.6758,2.6756 11.3513,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3377 3.9835,0.8461 5.6756,0 2.3931,-1.1965 3.2826,-4.4791 5.6756,-5.6756 1.6922,-0.8461 4.3379,1.3378 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 3.9835,0.8461 5.6757,0 2.393,-1.1965 3.7837,-3.7838 5.6756,-5.6756 1.8919,-1.8919 4.4791,-3.2826 5.6756,-5.6757 0.8461,-1.6921 -1.3377,-4.3378 0,-5.6756 1.3378,-1.3377 4.3379,1.3378 5.6756,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.3378,-1.3378 4.3379,1.3378 5.6757,0 1.3377,-1.3378 -0.8461,-3.9835 0,-5.6756 1.1965,-2.3931 4.479,-3.2826 5.6756,-5.6756 0.846,-1.6922 -1.3378,-4.3379 0,-5.6757 1.3377,-1.3377 4.3378,1.3378 5.6756,0 1.3378,-1.3377 -1.3378,-4.3378 0,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3377 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 3.9835,0.8461 5.6757,0 2.393,-1.1965 3.2825,-4.4791 5.6756,-5.6756 3.3843,-1.6922 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6757 2.6755,-2.6755 8.6758,2.6756 11.3513,0 1.3377,-1.3377 0,-3.7837 0,-5.6756 1.8918,0 4.3378,1.3378 5.6756,0 1.3377,-1.3377 -1.8919,-5.6756 0,-5.6756 1.8919,0 -1.8919,5.6756 0,5.6756 2.2165,0 6.392,-10.6348 11.3512,-5.6756 2.6755,2.6755 -2.6755,8.6757 0,11.3512 1.3378,1.3378 4.3379,-1.3377 5.6757,0 1.3377,1.3378 -1.3378,4.3379 0,5.6757 1.3377,1.3377 4.3378,-1.3378 5.6756,0 1.3377,1.3377 -1.3378,4.3378 0,5.6756 1.3377,1.3377 3.7837,0 5.6756,0 1.8919,0 4.3379,1.3377 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6756,0 1.3378,-1.3378 0,-3.7838 0,-5.6757 0,-1.8918 0,-3.7837 0,-5.6756 0,-3.7837 0,-15.135 0,-11.3512 0,3.7837 0,15.135 0,11.3512 0,-5.6756 -1.7947,-11.6425 0,-17.0268 0.078,-0.2346 16.1438,-0.4416 17.0269,0 2.3931,1.1965 3.2826,4.4791 5.6756,5.6756 1.6922,0.8461 4.3379,-1.3378 5.6757,0 1.3377,1.3377 -1.3378,4.3378 0,5.6756 1.3377,1.3378 4.3378,-1.3378 5.6756,0 1.3377,1.3378 -1.3378,4.3379 0,5.6756 0.2284,0.2284 20.6182,0 22.7025,0 1.8918,0 5.6756,-1.8919 5.6756,0 0,1.8919 -5.6756,1.8919 -5.6756,0 0,-2.6755 4.4791,-3.2825 5.6756,-5.6756 0.8636,-1.7273 0,-14.4708 0,-17.0269 0,-1.8918 0,-7.5675 0,-5.6756 0,3.7838 0,15.135 0,11.3513 0,-9.4594 0,-18.9188 0,-28.3782 0,-3.7837 0,-15.1349 0,-11.3512 0,3.7838 0,15.135 0,11.3512 0,-52.9724 5.6756,-5.6756 -5.6756,-17.0268 -1.8834,-1.8833 1.8833,-9.4679 0,-11.3513 -1.3378,-1.3377 -3.7838,0 -5.6757,0 -1.8918,0 -3.7837,0 -5.6756,0 -1.8919,0 -7.5675,0 -5.6756,0 3.7837,0 11.3512,3.7838 11.3512,0 0,-10.6158 -31.4346,-3.0565 -34.0537,-5.6756 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3657,-1.3657 -21.3367,1.3657 -22.7025,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6756 -2.6755,-2.6755 -8.6757,2.6755 -11.3512,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6756 -2.6755,-2.6756 -8.6758,2.6755 -11.3513,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6757 -1.3377,-1.3377 -3.9834,0.8461 -5.6756,0 -2.393,-1.1965 -3.2826,-4.4791 -5.6756,-5.6756 -1.6922,-0.8461 -4.3379,1.3378 -5.6756,0 -1.3378,-1.3377 0,-3.7837 0,-5.6756 -1.8919,0 -4.3379,1.3377 -5.6757,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -5.6756,1.8918 -5.6756,0 0,-1.8919 7.5675,0 5.6756,0 -32.1618,0 -1.8918,3.7837 -11.3512,-5.6757 -2.6755,-2.6755 -11.3512,3.7838 -11.3512,0 0,-1.8918 7.5675,0 5.6756,0 -3.7838,0 -7.5675,0 -11.3513,0 -1.8918,0 -3.9834,-0.846 -5.6756,0 -2.393,1.1966 -3.2826,4.4791 -5.6756,5.6757 -3.3843,1.6921 -8.6757,-2.6755 -11.3512,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -1.3377,1.3377 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3379,-1.3377 -5.6756,0 -1.3378,1.3378 1.3377,4.3379 0,5.6757 -1.3378,1.3377 -5.6756,1.8918 -5.6756,0 0,-1.8919 7.5675,0 5.6756,0 -3.7838,0 -7.967,-1.6922 -11.3513,0 -1.6921,0.846 1.3378,4.3378 0,5.6756 -1.3377,1.3377 -3.7837,0 -5.6756,0 -1.8919,0 -4.3378,1.3377 -5.6756,0 -0.5676,-0.5676 -0.5676,-16.4593 0,-17.0269 1.3378,-1.3377 4.3379,1.3378 5.6756,0 2.6755,-2.6755 -2.6755,-8.6757 0,-11.3512 1.3378,-1.3378 4.3379,1.3377 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6757 1.3378,-1.3377 4.3379,1.3378 5.6757,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3377 4.3378,1.3378 5.6756,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3378 4.3379,1.3378 5.6756,0 1.8935,-1.8935 -1.8935,-9.4578 0,-11.3512 1.3378,-1.3378 4.3379,1.3377 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6757 1.3378,-1.3377 4.3379,1.3378 5.6757,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3377 4.3378,1.3378 5.6756,0 1.3377,-1.3377 -0.8461,-3.9835 0,-5.6756 1.1965,-2.3931 3.2825,-4.4791 5.6756,-5.6756 1.6921,-0.8461 4.3379,1.3377 5.6756,0 1.3378,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -4.3378,-1.3378 -5.6756,0 -1.3378,1.3377 1.3378,4.3378 0,5.6756 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -2.8378,2.8378 -14.1891,-2.8378 -17.0269,0 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3379,-1.3377 -5.6756,0 -1.3378,1.3378 1.3377,4.3379 0,5.6756 -2.6755,2.6756 -8.6757,-2.6755 -11.3513,0 -1.3377,1.3378 1.3378,4.3379 0,5.6757 -0.1825,0.1825 -15.6503,0 -17.0268,0 -9.4594,0 -18.9188,0 -28.3781,0 -6.471,0 -14.758,0 -11.3513,0 14.4881,0 18.9485,0 -5.6756,0 -3.7837,0 -7.5675,0 -11.3512,0 -1.8919,0 -5.6757,1.8918 -5.6757,0 0,-1.8919 5.6757,1.8918 5.6757,0 0,-2.6756 -3.2826,-4.4791 -5.6757,-5.6757 -1.4674,-0.7337 -30.0308,0 -34.0537,0 -15.135,0 1.8919,1.8919 -5.6756,-5.6756 -1.3378,-1.3377 -3.7838,0 -5.6756,0 -9.4594,0 -18.9188,0 -28.3781,0 -1.8919,0 -4.3379,1.3378 -5.6757,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3378 -3.7837,0 -5.6756,0 -1.8919,0 -3.7837,0 -5.6756,0 -20.9417,0 -11.2429,0 -34.0537,0 1.8919,-7.5675 4.1458,-15.0536 5.6756,-22.7025 0.742,-3.7103 0,-7.5675 0,-11.3512 0,-11.3513 0,-22.7025 0,-34.0538 0,-3.7869 0,-7.5643 0,-11.3512 0,-1.8919 0,-7.5675 0,-5.6756 0,3.7837 3.7837,11.3512 0,11.3512 -4.2304,0 -4.3379,-7.338 -5.6756,-11.3512 -7.5675,-22.7025 9.4593,9.4593 -5.6757,-5.6757 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3377 -4.3378,1.3378 -5.6756,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3378 -4.3378,1.3378 -5.6756,0 -1.3378,-1.3378 1.3378,-4.3379 0,-5.6756 -0.1825,-0.1825 -15.6504,0 -17.0269,0 -1.8918,0 -7.5675,0 -5.6756,0 3.7838,0 15.135,0 11.3513,0 -52.9725,0 -5.6757,5.6756 -17.0269,-5.6756 -0.1825,-0.1826 -15.6504,0 -17.0269,0 -1.8918,0 -7.5675,0 -5.6756,0 3.7838,0 15.135,0 11.3512,0 -5.6756,0 -11.3512,0 -17.0268,0 -7.5675,0 -15.135,0 -22.7025,0 -2.6667,0 -24.2307,0 -11.3512,0 3.7837,0 15.1349,0 11.3512,0 -5.6756,0 -11.3512,0 -17.0269,0 -1.8918,0 -3.7837,0 -5.6756,0 -1.8919,0 -4.3379,1.3377 -5.6756,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6757 -1.3378,-1.3377 -3.7838,0 -5.6756,0 -1.8919,0 -3.7838,0 -5.6757,0 -1.8918,0 -5.6756,1.8919 -5.6756,0 0,-1.8918 7.5675,0 5.6756,0 -3.7837,0 -7.5674,0 -11.3512,0 -1.8919,0 -4.3379,1.3378 -5.6756,0 -1.3378,-1.3377 0,-3.7837 0,-5.6756 0,-1.8919 0,-3.7837 0,-5.6756 0,-17.0269 0,-34.0537 0,-51.0806 0,-1.3765 0.1825,-16.8443 0,-17.0269 -1.3378,-1.3377 -4.3379,1.3378 -5.6756,0 -0.1826,-0.1825 0,-15.6503 0,-17.0268 0,-30.27 0,-60.54 0,-90.81 0,-1.3765 0.1825,-16.8443 0,-17.0268 -1.3378,-1.3378 -4.3379,1.3377 -5.6757,0 -0.1825,-0.1826 0,-15.6504 0,-17.0269 0,-11.3512 0,-22.7025 0,-34.0537 0,-1.8919 0,-3.7838 0,-5.6757 0,-1.8918 -0.846,-3.9834 0,-5.6756 1.1966,-2.393 4.4791,-3.2825 5.6757,-5.6756 0.846,-1.6921 0,-3.7837 0,-5.6756 0,-1.8919 0,-3.7838 0,-5.6756 0,-15.135 0,-30.27 0,-45.405 0,-1.8919 1.3377,-4.3379 0,-5.6756 -7.5675,-7.5675 -5.6757,9.4593 -5.6757,-5.6757 5.6756,1.8919 11.3513,3.7838 17.0269,5.6757 0,1.8918 -1.3378,4.3378 0,5.6756 1.3378,1.3377 4.3379,-1.3378 5.6756,0 1.3378,1.3377 -1.3377,4.3378 0,5.6756 1.3378,1.3378 3.9835,-0.8461 5.6756,0 2.3931,1.1965 3.2826,4.4791 5.6757,5.6756 1.6921,0.8461 4.3378,-1.3377 5.6756,0 1.3377,1.3378 -1.3378,4.3379 0,5.6757 1.3377,1.3377 3.9835,-0.8461 5.6756,0 2.3931,1.1965 3.2826,4.479 5.6756,5.6756 1.6922,0.846 4.3379,-1.3378 5.6757,0 1.3377,1.3377 -1.3378,4.3378 0,5.6756 2.6755,2.6755 8.6757,-2.6755 11.3512,0 1.3378,1.3378 -1.3378,4.3379 0,5.6756 1.3378,1.3378 5.6756,-1.8919 5.6756,0 0,1.696 -18.8236,-3.7362 0,5.6756 2.2504,1.1252 15.8666,-1.1603 17.0269,0 1.3377,1.3378 -1.3378,4.3379 0,5.6757 0.1825,0.1825 15.6504,0 17.0268,0 1.8919,0 4.3379,1.3377 5.6757,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6757 1.3657,-1.3657 21.3367,1.3658 22.7025,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 2.8378,-2.8378 14.189,2.8378 17.0268,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.3378,-1.3378 3.7838,0 5.6756,0 1.8919,0 3.7838,0 5.6757,0 9.4593,0 18.9187,0 28.3781,0 1.8918,0 3.7837,0 5.6756,0 1.8919,0 3.9835,0.8461 5.6756,0 2.3931,-1.1965 3.2826,-4.4791 5.6756,-5.6756 2.2504,-1.1252 15.8666,1.1603 17.0269,0 1.3378,-1.3378 -1.3378,-4.3379 0,-5.6756 2.6755,-2.6756 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6757 1.3378,-1.3377 3.9835,0.8461 5.6757,0 2.393,-1.1965 3.2825,-4.4791 5.6756,-5.6756 1.6921,-0.8461 4.3379,1.3378 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3513,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 4.3378,1.3377 5.6756,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6757 1.3377,-1.3377 3.9835,0.8461 5.6756,0 4.7861,-2.393 6.5651,-8.9581 11.3512,-11.3512 1.6922,-0.8461 4.3379,1.3378 5.6757,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 4.3378,1.3377 5.6756,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 4.3378,1.3377 5.6756,0 1.3378,-1.3378 -1.3378,-4.3379 0,-5.6757 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.3378,-1.3377 4.3379,1.3378 5.6757,0 1.3377,-1.3377 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 4.3378,1.3377 5.6756,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6757 1.3378,-1.3377 4.3379,1.3378 5.6757,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3377 3.9834,0.8461 5.6756,0 2.393,-1.1965 3.2825,-4.4791 5.6756,-5.6756 1.6921,-0.8461 4.3379,1.3378 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 2.8378,-2.8378 14.1891,2.8378 17.0269,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 2.6755,-2.6756 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6757 2.6755,-2.6755 7.967,1.6922 11.3513,0 2.393,-1.1965 3.2825,-4.4791 5.6756,-5.6756 1.6921,-0.8461 4.3379,1.3378 5.6756,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3513,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3378,-4.3379 0,-5.6756 2.6755,-2.6756 7.967,1.6921 11.3512,0 2.3931,-1.1966 3.2826,-4.4791 5.6757,-5.6757 3.3843,-1.6921 8.6757,2.6755 11.3512,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 2.6755,-2.6755 7.967,1.6922 11.3513,0 2.393,-1.1965 3.2825,-4.4791 5.6756,-5.6756 3.3843,-1.6922 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 2.6755,-2.6755 7.967,1.6921 11.3513,0 2.393,-1.1966 3.2825,-4.4791 5.6756,-5.6757 1.6921,-0.846 3.9835,0.8461 5.6756,0 2.3931,-1.1965 3.2826,-4.47905 5.6756,-5.67558 1.6922,-0.84607 3.9835,0.84607 5.6757,0 2.393,-1.19652 3.2825,-4.47909 5.6756,-5.67562 1.6921,-0.84607 3.7837,0 5.6756,0 1.8919,-1.89187 3.2826,-4.47909 5.6756,-5.67562 1.6922,-0.84607 4.3379,1.33776 5.6756,0 1.3378,-1.33776 -1.3377,-4.33787 0,-5.67562 2.6756,-2.67552 8.6758,2.67551 11.3513,0 1.3377,-1.33776 -1.3378,-4.33787 0,-5.67562 2.6755,-2.67552 7.9669,1.69214 11.3512,0 2.3931,-1.19653 3.2826,-4.4791 5.6756,-5.67563 3.3843,-1.69214 8.6758,2.67552 11.3513,0 1.3377,-1.33775 -1.3378,-4.33786 0,-5.67562 2.6755,-2.67551 8.6757,2.67552 11.3512,0 1.3378,-1.33775 -1.3377,-4.33786 0,-5.67562 2.8378,-2.83781 14.1891,2.83781 17.0269,0 1.3378,-1.33776 -1.3378,-4.33786 0,-5.67562 2.8378,-2.83781 14.1891,2.83781 17.0269,0 1.3377,-1.33776 -1.3378,-4.33787 0,-5.67562 1.3377,-1.33776 3.7837,0 5.6756,0 3.9476,0 26.3256,1.02624 28.3781,0 2.393,-1.19653 3.2826,-4.4791 5.6756,-5.67562 3.9204,-1.96017 26.3859,1.99225 28.3781,0 1.3378,-1.33776 -1.3377,-4.33787 0,-5.67563 2.8378,-2.83781 14.1891,2.83782 17.0269,0 1.3377,-1.33775 -1.3378,-4.33786 0,-5.67562 1.7574,-1.75744 26.6207,1.75744 28.3781,0 1.3378,-1.33775 -1.3378,-4.33786 0,-5.67562 2.6755,-2.67551 8.6757,2.67551 11.3512,0 1.3378,-1.33776 -1.3377,-4.33786 0,-5.67562 2.6756,-2.67551 8.6758,2.67551 11.3513,0 1.3377,-1.33776 -1.3378,-4.33787 0,-5.67562 1.3377,-1.33776 5.6756,-1.89188 5.6756,0 0,1.89187 -3.7837,0 -5.6756,0 -1.8919,0 -3.7838,0 -5.6756,0 -25.3822,5.35933 5.0764,23.90087 0,34.05373 -1.1966,2.39305 -4.4791,3.28257 -5.6757,5.67562 -0.846,1.69214 0.8461,3.98348 0,5.67562 -1.1965,2.39305 -4.4791,3.28257 -5.6756,5.67562 -0.8461,1.69215 1.3378,4.33787 0,5.67562 -1.3377,1.33776 -4.3378,-1.33775 -5.6756,0 -1.3378,1.33776 1.3378,4.33787 0,5.67563 -1.3378,1.33775 -4.3379,-1.33776 -5.6756,0 -1.3378,1.33775 0.846,3.98347 0,5.67562 -1.1966,2.39305 -4.4791,3.28257 -5.6756,5.67562 -0.8461,1.69214 1.3377,4.33786 0,5.67562 -1.3378,1.33776 -4.3379,-1.33776 -5.6757,0 -1.3377,1.33776 1.3378,4.33787 0,5.67562 -1.3377,1.33776 -4.3378,-1.33775 -5.6756,0 -2.6755,2.67548 2.6755,8.67578 0,11.35128 -1.3377,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 0.846,3.9835 0,5.6756 -1.1966,2.3931 -4.4791,3.2826 -5.6757,5.6756 -0.846,1.6922 1.3378,4.3379 0,5.6757 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 -1.3377,1.3377 0.8461,3.9834 0,5.6756 -1.1965,2.393 -4.4791,3.2825 -5.6756,5.6756 -0.8461,1.6921 1.3378,4.3379 0,5.6756 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -2.6755,2.6755 2.6755,8.6757 0,11.3513 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -2.6756,2.6755 2.6755,8.6757 0,11.3512 -1.3378,1.3378 -4.3379,-1.3378 -5.6757,0 -2.6755,2.6755 2.6755,8.6757 0,11.3512 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -2.6755,2.6756 2.6755,8.6758 0,11.3513 -1.3377,1.3377 -4.3379,-1.3378 -5.6756,0 -2.6755,2.6755 2.6755,8.6757 0,11.3512 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -2.6755,2.6755 2.6755,8.6758 0,11.3513 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -2.6755,2.6755 1.6922,7.9669 0,11.3512 -2.0076,4.0153 -16.6767,11.3513 0,11.3513 -0.6028,23.7161 17.1868,0.1599 22.7025,5.6756 1.3378,1.3377 -1.3377,4.3378 0,5.6756 2.6755,2.6755 7.967,-1.6921 11.3513,0 2.393,1.1965 3.2825,4.4791 5.6756,5.6756 3.0296,1.5148 8.3217,-1.5147 11.3512,0 2.3931,1.1966 3.2826,4.4791 5.6757,5.6757 3.5672,1.7836 19.1352,-1.7837 22.7025,0 2.393,1.1965 3.2825,4.479 5.6756,5.6756 1.6921,0.846 3.7837,0 5.6756,0 1.8919,0 3.7837,0 5.6756,0 1.8919,0 7.5675,0 5.6756,0 -3.7837,0 -11.3512,-3.7838 -11.3512,0 0,4.2303 7.338,4.3378 11.3512,5.6756 3.1292,1.043 21.4891,-1.2134 22.7025,0 1.3378,1.3378 -1.3377,4.3379 0,5.6756 1.3378,1.3378 4.3379,-1.3377 5.6756,0 1.3378,1.3378 -1.3377,4.3379 0,5.6756 1.3378,1.3378 4.3379,-1.3377 5.6757,0 1.3377,1.3378 -1.3378,4.3379 0,5.6757 1.3377,1.3377 4.3378,-1.3378 5.6756,0 1.3377,1.3377 -1.3378,4.3378 0,5.6756 1.3377,1.3377 4.3379,-1.3378 5.6756,0 1.3378,1.3377 -1.3377,4.3378 0,5.6756 1.3378,1.3378 4.3379,-1.3378 5.6756,0 1.3378,1.3378 -1.3377,4.3379 0,5.6756 1.3378,1.3378 4.3379,-1.3377 5.6757,0 1.3377,1.3378 -1.3378,4.3379 0,5.6756 1.3377,1.3378 4.3378,-1.3377 5.6756,0 1.3377,1.3378 -1.3378,4.3379 0,5.6757 1.3377,1.3377 4.3378,-1.3378 5.6756,0 1.3378,1.3377 -1.3378,4.3378 0,5.6756 2.6755,2.6755 8.6757,-2.6755 11.3512,0 1.3378,1.3377 -1.3377,4.3379 0,5.6756 1.3378,1.3378 4.3379,-1.3377 5.6757,0 1.3377,1.3378 -1.3378,4.3379 0,5.6756 15.135,0 -1.8919,-1.8918 5.6756,5.6757 1.3377,1.3377 4.3378,-1.3378 5.6756,0 1.3378,1.3377 0,3.7837 0,5.6756 0,1.8918 0,3.7837 0,5.6756 0,1.8919 1.8919,5.6756 0,5.6756 -1.8919,0 0,-7.5675 0,-5.6756 0,13.2431 0,26.4862 0,39.7293 0,1.3765 0.1825,16.8444 0,17.0269 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -1.3657,1.3657 1.3657,21.3368 0,22.7025 -1.3378,1.3378 -4.3379,-1.3378 -5.6756,0 -2.8378,2.8378 2.8378,14.1891 0,17.0269 -7.5675,7.5675 -5.6757,-9.4594 -5.6757,5.6756 0,1.3765 -0.1825,16.8443 0,17.0269 1.3378,1.3377 4.3379,-1.3378 5.6757,0 1.3377,1.3377 0,3.7837 0,5.6756 0,1.8918 1.8918,5.6756 0,5.6756 -1.8919,0 0,-7.5675 0,-5.6756 0,25.837 -2.6756,0.3246 5.6756,17.0268 0.8461,1.6922 1.3377,7.0134 0,5.6757 -2.9913,-2.9914 -5.6756,-15.5816 -5.6756,-11.3513 0,5.9826 4.2246,11.2229 5.6756,17.0269 0.4588,1.8354 -1.3378,4.3378 0,5.6756 1.3377,1.3378 4.3378,-1.3378 5.6756,0 2.6755,2.6755 -1.6921,7.967 0,11.3512 1.1965,2.3931 4.4791,3.2826 5.6756,5.6757 1.6922,3.3843 -2.6755,8.6757 0,11.3512 1.3378,1.3378 4.3379,-1.3377 5.6756,0 1.3378,1.3378 0,3.7838 0,5.6756 0,1.8919 0,3.7838 0,5.6757 0,11.3512 0,22.7024 0,34.0537 0,1.8919 1.3378,4.3378 0,5.6756 -1.3377,1.3378 -4.3378,-1.3378 -5.6756,0 -1.3377,1.3378 0,3.7838 0,5.6756 0,1.8919 0,3.7838 0,5.6756 0,22.7025 0,45.405 0,68.1075 0,1.8919 0,3.7838 0,5.6756 0,1.8919 1.3378,4.3379 0,5.6757 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 -1.3378,1.3377 0,3.7837 0,5.6756 0,2.676 0.2572,28.1209 0,28.3781 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -0.2284,0.2284 0,20.6182 0,22.7025 0,7.5675 0,15.135 0,22.7025 0,1.8918 1.8919,5.6756 0,5.6756 -1.8919,0 0,-7.5675 0,-5.6756 0,3.7837 -1.6922,7.9669 0,11.3512 0.8461,1.6921 5.6756,-1.8919 5.6756,0 0,1.8919 -7.0134,-1.3378 -5.6756,0 2.9913,2.9913 7.338,4.3379 11.3512,5.6756 1.7948,0.5983 4.3379,-1.3377 5.6756,0 1.3378,1.3378 -0.846,3.9835 0,5.6756 1.1966,2.3931 7.5675,3.7838 5.6757,5.6757 -1.8919,1.8918 -5.6757,-8.3512 -5.6757,-5.6757 0,28.6722 4.3619,4.3619 11.3513,11.3513 1.3377,1.3377 -1.3378,4.3378 0,5.6756 1.3377,1.3378 4.3379,-1.3378 5.6756,0 1.3378,1.3378 -1.3377,4.3379 0,5.6756 1.3378,1.3378 4.3379,-1.3377 5.6756,0 1.3378,1.3378 -1.3377,4.3379 0,5.6756 1.3378,1.3378 4.3379,-1.3377 5.6757,0 1.3377,1.3378 -1.3378,4.3379 0,5.6757 2.6755,2.6755 8.6757,-2.6755 11.3512,0 1.3378,1.3377 -1.3378,4.3378 0,5.6756 2.8378,2.8378 14.1891,-2.8378 17.0269,0 1.3377,1.3377 -1.3378,4.3379 0,5.6756 1.8934,1.8935 9.4577,-1.8935 11.3512,0 1.3378,1.3378 1.8919,5.6756 0,5.6756 -1.8919,0 0,-3.7837 0,-5.6756'}),_react2.default.createElement('path',{d:'m 3405.373,1718.9865 c 0,7.5675 1.8354,15.3609 0,22.7025 -0.4589,1.8353 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -1.3377,1.3377 1.3378,4.3378 0,5.6756 -1.3377,1.3378 -4.3378,-1.3378 -5.6756,0 -2.6755,2.6755 2.6755,8.6757 0,11.3512 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.3378,1.3378 1.3378,4.3379 0,5.6757 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.8834,1.8833 1.8833,9.4679 0,11.3512 -1.3378,1.3378 -4.3379,-1.3377 -5.6757,0 0,15.135 1.8919,-1.8918 -5.6756,5.6757 -1.3377,1.3377 1.3378,4.3378 0,5.6756 -1.3377,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -2.6755,2.6755 -8.6757,-2.6755 -11.3513,0 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -2.6755,2.6755 -8.6757,-2.6755 -11.3512,0 -1.3378,1.3378 1.3378,4.3379 0,5.6756 -2.8378,2.8379 -14.189,-2.8378 -17.0269,0 -1.3377,1.3378 1.3378,4.3379 0,5.6757 -1.3377,1.3377 -3.7837,0 -5.6756,0 -1.8919,0 -7.5675,0 -5.6756,0 3.7837,0 11.3512,-3.7838 11.3512,0 0,15.6287 -12.954,1.6028 -17.0268,5.6756 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3378 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3378 1.3377,4.3379 0,5.6756 -1.3378,1.3378 -4.3379,-1.3377 -5.6757,0 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -2.6755,2.6756 2.6755,8.6758 0,11.3513 -1.3377,1.3377 -4.3379,-1.3378 -5.6756,0 -1.8833,1.8833 1.8833,9.4679 0,11.3512 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -2.6755,2.6755 2.6755,8.6758 0,11.3513 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -2.6755,2.6755 3.7838,11.3512 0,11.3512 -1.8918,0 1.8919,-5.6756 0,-5.6756 -11.8102,0 -2.2836,7.9593 -5.6756,11.3512 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.3378,1.3378 1.3378,4.3379 0,5.6757 -2.6755,2.6755 -8.6757,-2.6755 -11.3512,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3377 -3.9835,-0.8461 -5.6757,0 -2.393,1.1965 -3.2825,4.4791 -5.6756,5.6756 -1.6921,0.8461 -4.3378,-1.3377 -5.6756,0 -1.3378,1.3378 1.3378,4.3379 0,5.6756 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -1.3378,1.3378 1.3377,4.3379 0,5.6757 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 0,3.7837 0,5.6756 0,1.8918 0,3.7837 0,5.6756 0,15.135 0,30.27 0,45.405 0,1.8918 0,3.7837 0,5.6756 0,1.8919 1.3377,4.3379 0,5.6756 -1.3378,1.3378 -4.3379,-1.3377 -5.6757,0 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -2.6755,2.6755 2.6755,8.6758 0,11.3513 -1.3377,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3378 -4.3379,-1.3378 -5.6756,0 -2.6755,2.6755 2.6755,8.6757 0,11.3512 -1.3378,1.3378 -4.3379,-1.3377 -5.6757,0 -1.3377,1.3378 0,3.7838 0,5.6757 0,2.676 -0.2572,28.1208 0,28.3781 1.3378,1.3377 4.3379,-1.3378 5.6757,0 2.6755,2.6755 -1.6922,7.9669 0,11.3512 1.1965,2.3931 4.4791,3.2826 5.6756,5.6756 1.1252,2.2504 -1.1603,15.8666 0,17.0269 1.3377,1.3378 4.3379,-1.3378 5.6756,0 2.6755,2.6755 -2.6755,8.6757 0,11.3512 1.3378,1.3378 4.3379,-1.3377 5.6756,0 2.6755,2.6756 -2.6755,8.6758 0,11.3513 1.3378,1.3377 4.3379,-1.3378 5.6757,0 2.6755,2.6755 -2.6756,8.6757 0,11.3512 13.3103,13.3104 0,-17.4859 0,-5.6756 0,13.0434 4.3618,11.3513 11.3512,11.3513 6.471,0 14.758,0 11.3512,0 -3.7837,0 -11.3512,-3.7838 -11.3512,0 0,15.6287 12.9541,1.6028 17.0269,5.6756 2.6755,2.6755 -1.6922,7.9669 0,11.3512 1.1965,2.3931 4.4791,3.2826 5.6756,5.6756 0.8636,1.7273 0,14.4708 0,17.0269 0,5.6756 0,11.3512 0,17.0269 0,1.8918 0,7.5675 0,5.6756 0,-3.7838 0,-15.135 0,-11.3513 0,5.6757 -1.7948,11.6425 0,17.0269 0.5982,1.7948 4.3378,-1.3377 5.6756,0 1.3378,1.3378 -1.3378,4.3379 0,5.6756 1.3378,1.3378 4.3379,-1.3377 5.6756,0 1.3378,1.3378 0,3.7838 0,5.6757 0,2.0843 0.2284,22.474 0,22.7024 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -2.6755,2.6756 2.6755,8.6758 0,11.3513 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3378 -4.3379,-1.3378 -5.6756,0 -1.8935,1.8935 1.8934,9.4578 0,11.3512 -1.3378,1.3378 -5.6757,1.8919 -5.6757,0 0,-2.6755 5.6757,-8.3511 5.6757,-5.6756 0,4.2304 -2.6843,8.36 -5.6757,11.3513 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 -2.6755,2.6755 2.6755,8.6757 0,11.3512 -1.3377,1.3378 -5.6756,1.8919 -5.6756,0 0,-2.6755 5.6756,-8.3511 5.6756,-5.6756 0,4.2304 -4.3378,7.338 -5.6756,11.3512 -0.5983,1.7948 1.3378,4.3379 0,5.6757 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -2.6755,2.6755 2.6755,8.6757 0,11.3512 -1.3378,1.3378 -4.3379,-1.3378 -5.6756,0 -0.8005,0.8004 -0.5822,15.8626 0,17.0269 11.8102,23.6205 -0.3919,-6.0675 11.3512,5.6756 0,15.135 -1.8919,-1.8919 5.6756,5.6756 1.3378,1.3378 -1.3377,4.3379 0,5.6756 2.6755,2.6755 7.967,-1.6921 11.3513,0 2.393,1.1966 3.2825,4.4791 5.6756,5.6757 1.6921,0.846 4.3378,-1.3378 5.6756,0 1.3378,1.3377 -1.3378,4.3378 0,5.6756 1.3378,1.3377 3.7838,0 5.6756,0 2.6761,0 28.1209,0.2572 28.3781,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 2.8378,-2.8379 14.1891,2.8378 17.0269,0 1.3378,-1.3378 -1.3378,-4.3379 0,-5.6757 1.8935,-1.8934 9.4578,1.8935 11.3512,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.3378,-1.3377 4.3379,1.3378 5.6757,0 1.3377,-1.3377 -1.3378,-4.3379 0,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6757 2.6755,-2.6755 8.6758,2.6756 11.3513,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.8833,-1.8833 9.4679,1.8833 11.3513,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 3.7837,0 5.6756,0 1.8919,0 5.6756,-1.8919 5.6756,0 0,1.8919 -7.5675,0 -5.6756,0 7.5675,0 15.135,0 22.7025,0 2.0843,0 22.4741,-0.2284 22.7025,0 1.3377,1.3377 -1.3378,4.3378 0,5.6756 1.3377,1.3378 3.7837,0 5.6756,0 2.676,0 28.1209,0.2572 28.3781,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 3.9835,0.846 5.6756,0 2.3931,-1.1966 3.2826,-4.4791 5.6757,-5.6757 1.6921,-0.846 4.3378,1.3378 5.6756,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3377 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 3.7838,0 5.6757,0 1.8918,0 3.7837,0 5.6756,0 1.8919,0 7.5675,0 5.6756,0 -3.7837,0 -14.0268,2.6755 -11.3512,0 4.2303,-4.2304 11.2228,-4.2246 17.0268,-5.6756 3.6708,-0.9177 15.135,0 11.3513,0 -3.7838,0 -15.135,0 -11.3513,0 5.6756,0 11.3513,0 17.0269,0 1.8919,0 5.6756,-1.8919 5.6756,0 0,8.0404 -26.4862,-16.081 5.6756,0 1.6922,0.846 -1.3377,4.3378 0,5.6756 2.6755,2.6755 8.6758,-2.6755 11.3513,0 1.3377,1.3377 -1.3378,4.3379 0,5.6756 1.3377,1.3378 3.9835,-0.8461 5.6756,0 2.393,1.1965 3.2826,4.4791 5.6756,5.6756 1.6922,0.8461 4.3379,-1.3377 5.6756,0 1.3378,1.3378 -1.3377,4.3379 0,5.6757 1.3378,1.3377 4.3379,-1.3378 5.6757,0 1.3377,1.3377 -1.3378,4.3378 0,5.6756 1.3377,1.3377 3.9834,-0.8461 5.6756,0 4.7861,2.393 6.5651,8.9582 11.3512,11.3512 1.6922,0.8461 4.3379,-1.3377 5.6756,0 1.3378,1.3378 -1.3377,4.3379 0,5.6756 1.3378,1.3378 4.3379,-1.3377 5.6757,0 1.3377,1.3378 -1.3378,4.3379 0,5.6757 1.3377,1.3377 3.9834,-0.8461 5.6756,0 2.393,1.1965 3.2826,4.4791 5.6756,5.6756 1.6922,0.8461 3.9835,-0.8461 5.6756,0 2.3931,1.1965 3.2826,4.4791 5.6757,5.6756 1.6921,0.8461 3.9834,-0.8461 5.6756,0 14.0267,7.0134 -1.9591,5.6756 11.3512,5.6756 5.6756,0 11.3513,0 17.0269,0 1.8919,0 7.5675,0 5.6756,0 -3.7837,0 -11.3512,-3.7837 -11.3512,0 0,10.6496 25.7612,3.0588 28.3781,5.6757 7.5675,7.5674 -9.4594,5.6756 5.6756,5.6756'}),_react2.default.createElement('path',{d:'m 3694.8297,2348.9805 c 12.457,57.1639 -20.5777,9.2264 -28.3781,17.0268 -1.3378,1.3378 1.3377,4.3379 0,5.6757 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -2.6756,2.6755 -8.6758,-2.6755 -11.3513,0 -1.3377,1.3377 1.3378,4.3378 0,5.6756 -1.3377,1.3378 -3.9835,-0.8461 -5.6756,0 -18.8237,18.8237 5.351,-2.6755 -11.3512,5.6756 -2.3931,1.1966 -3.2826,4.4791 -5.6757,5.6756 -3.3843,1.6922 -8.6757,-2.6755 -11.3512,0 -1.3378,1.3378 -1.3378,4.3379 0,5.6757 1.3377,1.3377 4.3379,-1.3378 5.6756,0 1.3378,1.3377 -1.3377,4.3378 0,5.6756 1.3378,1.3377 3.9835,-0.8461 5.6756,0 2.3931,1.1965 3.2826,4.4791 5.6757,5.6756 3.3842,1.6922 8.6757,-2.6755 11.3512,0 1.3378,1.3378 -1.3378,4.3379 0,5.6756 1.3378,1.3378 4.3379,-1.3377 5.6756,0 1.3378,1.3378 -1.3377,4.3379 0,5.6757 1.3378,1.3377 4.3379,-1.3378 5.6756,0 1.3378,1.3377 1.3378,4.3378 0,5.6756 -1.3377,1.3377 -3.7837,0 -5.6756,0 -1.8919,0 -3.7837,0 -5.6756,0 -1.3765,0 -16.8443,-0.1826 -17.0269,0 -1.3377,1.3377 1.3378,4.3378 0,5.6756 -2.6755,2.6755 -8.6757,-2.6755 -11.3512,0 0,15.135 1.8919,-1.8919 -5.6756,5.6756 -2.6755,2.6755 2.6755,8.6757 0,11.3513 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -2.6755,2.6755 2.6756,8.6757 0,11.3512 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.3378,1.3378 1.3378,4.3379 0,5.6757 -1.3378,1.3377 -5.6756,1.8918 -5.6756,0 0,-1.8919 5.6756,-1.8919 5.6756,0 0,2.6755 -3.2826,4.479 -5.6756,5.6756 -1.6922,0.846 -3.7838,0 -5.6756,0 -1.8919,0 -5.6757,1.8918 -5.6757,0 0,-1.8919 7.5675,0 5.6757,0 -5.6757,0 -11.3513,0 -17.0269,0 -3.7906,0 -7.5606,0 -11.3512,0 -1.8919,0 -7.5675,0 -5.6757,0 3.7838,0 15.135,0 11.3513,0 -5.6756,0 -11.3513,0 -17.0269,0 -1.8919,0 -5.6756,1.8918 -5.6756,0 0,-1.8919 7.5675,0 5.6756,0 -3.7837,0 -7.5675,0 -11.3512,0 -1.8919,0 -4.3379,1.3377 -5.6757,0 -2.6755,-2.6755 2.6756,-8.6758 0,-11.3513 -1.3377,-1.3377 -4.3378,1.3378 -5.6756,0 -1.3377,-1.3377 -1.8919,-5.6756 0,-5.6756 1.8919,0 1.8919,5.6756 0,5.6756 -2.6755,0 -3.2825,-4.4791 -5.6756,-5.6756 -1.6921,-0.8461 -3.7837,0 -5.6756,0 -1.8919,0 -7.5675,0 -5.6756,0 3.7837,0 11.3512,3.7838 11.3512,0 0,-5.8372 -26.9325,-7.1213 -28.3781,-5.6756 -1.3378,1.3377 1.3377,4.3379 0,5.6756 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -2.8378,2.8378 2.8378,14.1891 0,17.0269 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -2.6755,2.6755 2.6756,8.6757 0,11.3512 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.8833,1.8833 1.8834,9.4679 0,11.3513 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 -1.3378,1.3377 1.3378,4.3378 0,5.6756 -1.3378,1.3377 -4.3379,1.3377 -5.6756,0 -2.6755,-2.6755 2.6755,-8.6757 0,-11.3513 -1.3378,-1.3377 -3.7838,0 -5.6756,0 0,-1.8918 1.3377,-4.3378 0,-5.6756 -1.3378,-1.3377 -4.3379,1.3378 -5.6757,0 -2.6755,-2.6755 2.6756,-8.6757 0,-11.3512 -15.135,0 1.8919,1.8918 -5.6756,-5.6756 -2.6755,-2.6756 -8.6757,2.6755 -11.3512,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6757 -1.3378,-1.3377 -3.9835,0.8461 -5.6756,0 -2.3931,-1.1965 -3.2826,-4.4791 -5.6757,-5.6756 -1.6921,-0.8461 -4.3378,1.3378 -5.6756,0 -1.3377,-1.3377 1.3378,-4.3379 0,-5.6756 -2.6755,-2.6755 -8.6757,2.6755 -11.3512,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6756 -0.1826,-0.1826 -15.6504,0 -17.0269,0 -1.8919,0 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 0,3.7837 0,5.6756 0,11.3513 0,22.7025 0,34.0537 0,1.8919 0,3.7838 0,5.6757 0,1.8918 1.8918,5.6756 0,5.6756 -1.8919,0 1.8918,-5.6756 0,-5.6756 -2.6756,0 -4.4791,3.2825 -5.6757,5.6756 -0.846,1.6921 0.8461,3.9835 0,5.6756 -1.1965,2.3931 -3.7837,7.5675 -5.6756,5.6756 -1.8919,-1.8919 5.6756,-8.3511 5.6756,-5.6756 0,28.6721 -4.3618,4.3619 -11.3512,11.3512 -1.3378,1.3378 1.3377,4.3379 0,5.6757 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 0,3.7837 0,5.6756 0,1.8919 0,3.7837 0,5.6756 0,1.8919 0,7.5675 0,5.6756 0,-3.7837 1.6921,-14.7355 0,-11.3512 -6.1345,12.2689 -5.6757,17.8777 -5.6757,28.3781 0,11.3512 0,22.7025 0,34.0537 0,1.8919 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.8833,1.8834 1.8834,9.468 0,11.3513 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 -1.3378,1.3377 -1.8919,5.6756 0,5.6756 2.6755,0 5.6756,-8.3511 5.6756,-5.6756 0,28.6721 -4.3618,4.3618 -11.3512,11.3512 -2.6755,2.6755 2.6755,8.6758 0,11.3513 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.8918,5.6756 0,5.6756 -1.8919,0 1.8918,-5.6756 0,-5.6756 -2.6756,0 -3.0001,5.6756 -5.6757,5.6756 -4.5297,0 -11.8336,-17.5092 -5.6756,-11.3512 2.9913,2.9913 9.906,11.3512 5.6756,11.3512 -5.351,0 -6.8989,-8.383 -11.3512,-11.3512 -1.5741,-1.0495 -4.3379,1.3377 -5.6756,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6757 -1.3378,-1.3377 -3.7838,0 -5.6756,0 -1.8919,0 -3.7838,0 -5.6757,0 -2.0843,0 -22.4741,-0.2284 -22.7025,0 -1.3377,1.3378 1.3378,4.3379 0,5.6757 -1.3377,1.3377 -3.7837,0 -5.6756,0 -1.8918,0 -3.7837,0 -5.6756,0 -1.8919,0 -7.5675,0 -5.6756,0 3.7837,0 15.135,0 11.3512,0 -5.6756,0 -11.6425,-1.7948 -17.0268,0 -1.7948,0.5982 1.8918,5.6756 0,5.6756 -1.8919,0 1.8918,-5.6756 0,-5.6756 -1.8301,0 -8.1977,9.7744 -11.3513,11.3512 -1.6921,0.8461 -4.3378,-1.3378 -5.6756,0 -1.3378,1.3378 1.3378,4.3379 0,5.6756 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -1.3378,1.3378 1.3377,4.3379 0,5.6756 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -1.3378,1.3378 0.846,3.9835 0,5.6757 -1.1966,2.393 -4.4791,3.2825 -5.6757,5.6756 -0.846,1.6921 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -2.6755,2.6755 -8.6757,-2.6755 -11.3512,0 -1.3378,1.3378 1.3377,4.3379 0,5.6757 -1.3378,1.3377 -3.7838,0 -5.6757,0 -1.8918,0 -5.6756,1.8918 -5.6756,0 0,-1.8919 7.5675,0 5.6756,0 -3.7837,0 -7.5675,0 -11.3512,0 -1.8919,0 -3.9835,0.846 -5.6756,0 -2.3931,-1.1966 -3.2826,-4.4791 -5.6756,-5.6757 -1.6922,-0.846 -3.7838,0 -5.6757,0 -1.8918,0 -3.7837,0 -5.6756,0 -1.8919,0 -7.5675,0 -5.6756,0 3.7837,0 11.3512,3.7838 11.3512,0 0,-11.6979 -19.5694,-2.5425 -22.7025,-5.6756 -1.3377,-1.3377 1.8919,-5.6756 0,-5.6756 -11.1762,0 -2.5544,19.5813 -5.6756,22.7025 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 -2.6755,2.6755 2.6755,8.6757 0,11.3512 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -2.6755,2.6755 2.6755,8.6757 0,11.3513 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 0.846,3.9834 0,5.6756 -1.1966,2.393 -4.4791,3.2826 -5.6757,5.6756 -0.846,1.6921 1.3378,4.3379 0,5.6756 -15.135,0 1.8919,-1.8918 -5.6756,5.6756 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.3378,1.3378 1.3378,4.3379 0,5.6757 -1.8953,1.8953 -9.4559,-1.8954 -11.3512,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3377 -3.9835,-0.8461 -5.6757,0 -2.393,1.1965 -3.2825,4.4791 -5.6756,5.6756 -1.6921,0.8461 -4.3379,-1.3377 -5.6756,0 -1.3378,1.3378 1.3377,4.3379 0,5.6756 -1.8935,1.8935 -9.4578,-1.8934 -11.3513,0 -1.3377,1.3378 1.3378,4.3379 0,5.6757 -1.3657,1.3657 -21.3367,-1.3658 -22.7024,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -0.2573,0.2572 -25.7021,0 -28.3781,0 -2.0843,0 -22.4741,0.2284 -22.7025,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6756 -1.8935,-1.8935 -9.4578,1.8934 -11.3513,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6757 -1.3377,-1.3377 -3.7837,0 -5.6756,0 -11.3512,0 -22.7025,0 -34.0537,0 -1.8919,0 -3.7838,0 -5.6757,0 -1.8918,0 -3.9834,-0.846 -5.6756,0 -2.393,1.1966 -3.2825,4.4791 -5.6756,5.6757 -2.0525,1.0262 -24.4305,0 -28.3781,0 -1.8919,0 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3377 -3.9835,-0.8461 -5.6756,0 -2.3931,1.1965 -3.2826,4.4791 -5.6757,5.6756 -3.3843,1.6921 -8.6757,-2.6755 -11.3512,0 -1.3378,1.3378 1.3377,4.3379 0,5.6756 -2.6755,2.6755 -8.6757,-2.6755 -11.3513,0 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -1.8814,1.8815 -9.4697,-1.8814 -11.3512,0 -1.3378,1.3378 1.3378,4.3379 0,5.6757 -1.3378,1.3377 -3.9835,-0.8461 -5.6756,0 -2.3931,1.1965 -3.2826,4.4791 -5.6756,5.6756 -1.6922,0.8461 -4.3379,-1.3378 -5.6757,0 -1.3377,1.3377 1.3378,4.3378 0,5.6756 -2.6755,2.6755 -8.6757,-2.6755 -11.3512,0 -1.3378,1.3378 1.3377,4.3379 0,5.6756 -2.6755,2.6755 -7.967,-1.6921 -11.3513,0 -2.393,1.1966 -8.3511,5.6756 -5.6756,5.6756 4.2304,0 15.5816,-5.6756 11.3513,-5.6756 -49.4144,0 -7.3526,1.677 -17.0269,11.3513 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -4.4368,4.4368 4.9368,9.8736 5.6756,11.3512 0,15.135 -1.8919,-1.8919 5.6756,5.6756 2.8378,2.8378 -2.8378,14.1891 0,17.0269 1.3378,1.3378 4.3379,-1.3378 5.6756,0 1.3378,1.3378 0,3.7837 0,5.6756 0,1.8919 0,3.7838 0,5.6756 0,1.8919 0,3.7838 0,5.6757 0,1.8918 1.3378,4.3378 0,5.6756 -1.3377,1.3377 -5.6756,1.8919 -5.6756,0 0,-4.3463 20.5758,-14.9002 0,5.6756 -1.3377,1.3378 -3.7837,0 -5.6756,0 -1.8919,0 -3.7837,0 -5.6756,0 -1.8919,0 -7.5675,0 -5.6756,0 3.7837,0 15.135,0 11.3512,0 -13.2431,0 -26.4862,0 -39.7293,0 -2.5561,0 -15.2996,0.8637 -17.0269,0 -2.3931,-1.1965 -3.2826,-4.4791 -5.6756,-5.6756 -3.079,-1.5395 -21.1495,1.553 -22.7025,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6756 -2.6755,-2.6755 -8.6757,2.6755 -11.3513,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6757 -2.6755,-2.6755 -8.6757,2.6756 -11.3512,0 -1.3378,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3378,-1.3377 -4.3379,1.3378 -5.6756,0 -1.3378,-1.3377 1.3377,-4.3378 0,-5.6756 -2.6755,-2.6755 -11.3513,3.7837 -11.3513,0 0,-1.8919 3.7838,0 5.6757,0 -5.6756,1.8919 -11.2229,4.2246 -17.0269,5.6756 -1.8354,0.4589 -3.7838,0 -5.6756,0 -1.8919,0 -4.3379,1.3378 -5.6757,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3378 -4.3378,1.3378 -5.6756,0 -2.8378,-2.8378 2.8378,-14.1891 0,-17.0269 -1.3377,-1.3377 -4.3378,1.3378 -5.6756,0 -2.6755,-2.6755 2.6755,-8.6757 0,-11.3512 -1.3378,-1.3378 -4.3379,1.3377 -5.6756,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6756 -1.3378,-1.3378 -4.3379,1.3377 -5.6756,0 -2.6756,-2.6755 2.6755,-8.6758 0,-11.3513 -1.3378,-1.3377 -4.3379,1.3378 -5.6757,0 -1.3377,-1.3377 0.8461,-3.9835 0,-5.6756 -1.1965,-2.393 -4.4791,-3.2826 -5.6756,-5.6756 -0.8461,-1.6922 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -4.3379,1.3377 -5.6756,0 -1.3378,-1.3378 0.8461,-3.9835 0,-5.6757 -1.1965,-2.393 -4.4791,-3.2825 -5.6756,-5.6756 -0.8461,-1.6921 1.3377,-4.3378 0,-5.6756 -1.3378,-1.3378 -4.3379,1.3378 -5.6757,0 -1.3377,-1.3378 -1.8918,-5.6756 0,-5.6756 1.8919,0 1.8919,5.6756 0,5.6756 -11.8102,0 -2.2836,-7.9593 -5.6756,-11.3512 -1.3377,-1.3378 -3.7837,0 -5.6756,0 -1.8919,0 -7.5675,0 -5.6756,0 3.7837,0 15.135,0 11.3512,0 -20.8106,0 -41.6212,0 -62.4318,0 -1.8919,0 -3.7838,0 -5.6756,0 -1.8919,0 -4.3379,1.3377 -5.6757,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6757 -1.3377,-1.3377 -3.7837,0 -5.6756,0 -15.135,0 -30.27,0 -45.4049,0 -2.6761,0 -28.1209,0.2573 -28.3782,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3657,-1.3657 -21.3367,1.3657 -22.7024,0 -1.3378,-1.3377 1.3377,-4.3379 0,-5.6756 -0.1826,-0.1825 -15.6504,0 -17.0269,0 -1.8919,0 -7.5675,0 -5.6756,0 3.7837,0 15.135,0 11.3512,0 -5.6756,0 -11.6425,1.7948 -17.0269,0 -1.7947,-0.5983 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -5.6756,1.8918 -5.6756,0 0,-1.8919 5.6756,1.8918 5.6756,0 0,-11.8103 -7.9593,-2.2837 -11.3512,-5.6757 -2.6755,-2.6755 2.6755,-8.6757 0,-11.3512 -1.3378,-1.3378 -4.3379,1.3378 -5.6756,0 -2.6755,-2.6755 2.6755,-8.6757 0,-11.3512 -1.3378,-1.3378 -3.9835,0.846 -5.6756,0 -2.3931,-1.1966 -7.5675,-3.7838 -5.6757,-5.6757 1.8919,-1.8918 8.3512,5.6757 5.6757,5.6757 -4.2304,0 -7.338,-4.3379 -11.3513,-5.6757 -1.7948,-0.5982 -4.3378,1.3378 -5.6756,0 -1.3378,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3378,-1.3377 -5.6756,1.8919 -5.6756,0 0,-1.8919 7.5675,0 5.6756,0 -7.5675,0 -15.135,0 -22.7025,0 -1.8919,0 -5.6756,1.8919 -5.6756,0 0,-1.8919 7.5675,0 5.6756,0 -3.7837,0 -7.5675,0 -11.3512,0 -1.8919,0 -4.3379,-1.3377 -5.6757,0 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.3377,1.3378 1.3378,4.3379 0,5.6757 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 -1.3378,1.3377 0.8461,3.9834 0,5.6756 -1.1965,2.393 -3.7837,3.7837 -5.6756,5.6756 -1.8919,1.8919 -3.2826,4.4791 -5.6756,5.6756 -1.6922,0.8461 -4.3379,-1.3377 -5.6757,0 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.3377,1.3378 1.3378,4.3379 0,5.6757 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 -1.3378,1.3377 1.3378,4.3378 0,5.6756 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -2.6755,2.6755 2.6755,8.6757 0,11.3512 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -2.6756,2.6755 2.6755,8.6758 0,11.3513 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -1.3377,1.3377 1.3378,4.3378 0,5.6756 -1.3377,1.3378 -4.3378,-1.3378 -5.6756,0 -2.6755,2.6755 2.6755,8.6757 0,11.3512 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -1.3378,1.3378 1.3377,4.3379 0,5.6757 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.7575,1.7574 1.7574,26.6206 0,28.3781 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -1.3377,1.3377 0,3.7837 0,5.6756 0,1.8919 0,3.7837 0,5.6756 0,13.2431 0,26.4862 0,39.7294 0,1.8918 -1.3377,4.3378 0,5.6756 1.3378,1.3377 4.3379,-1.3378 5.6757,0 1.3377,1.3377 -0.8461,3.9835 0,5.6756 1.1965,2.3931 3.7837,3.7838 5.6756,5.6756 1.8919,1.8919 3.2826,4.4791 5.6756,5.6757 1.6922,0.846 4.3379,-1.3378 5.6756,0 1.3378,1.3377 0,3.7837 0,5.6756 0,1.8918 0,3.7837 0,5.6756 0,2.0843 0.2284,22.4741 0,22.7025 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 0,15.135 1.8919,-1.8919 -5.6756,5.6756 -1.3378,1.3378 0.8461,3.9835 0,5.6756 -1.1965,2.3931 -4.4791,3.2826 -5.6756,5.6756 -0.8461,1.6922 1.3377,4.3379 0,5.6757 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -1.3377,1.3377 1.3378,4.3378 0,5.6756 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 -1.3377,1.3377 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.3378,1.3378 1.3378,4.3379 0,5.6756 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -1.3378,1.3378 1.3377,4.3379 0,5.6757 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 0.846,3.9834 0,5.6756 -1.1966,2.393 -4.4791,3.2825 -5.6757,5.6756 -0.846,1.6921 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -3.9834,-0.8461 -5.6756,0 -2.393,1.1965 -3.2826,4.4791 -5.6756,5.6756 -1.6922,0.8461 -4.3379,-1.3377 -5.6756,0 -1.3378,1.3378 1.3377,4.3379 0,5.6757 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -2.6755,2.6755 2.6756,8.6757 0,11.3512 -1.3377,1.3378 -4.3378,-1.3378 -5.6756,0 -7.5675,7.5675 9.4594,5.6756 -5.6756,5.6756'}),_react2.default.createElement('path',{d:'m 2151.0606,3018.7038 c 0,5.6756 -1.3765,11.5207 0,17.0269 2.6891,10.7564 6.0578,3.0289 11.3512,5.6756 2.3931,1.1965 3.2826,4.4791 5.6757,5.6756 3.3843,1.6922 8.6757,-2.6755 11.3512,0 1.3378,1.3378 -1.3377,4.3379 0,5.6757 1.3378,1.3377 4.3379,-1.3378 5.6756,0 2.6755,2.6755 -2.6755,8.6757 0,11.3512 1.3378,1.3378 4.3379,-1.3378 5.6757,0 2.8378,2.8378 -2.8379,14.1891 0,17.0269 1.3377,1.3377 4.3378,-1.3378 5.6756,0 1.8953,1.8953 -1.8953,9.4559 0,11.3512 1.3377,1.3378 4.3378,-1.3377 5.6756,0 1.7574,1.7574 -1.7574,26.6207 0,28.3781 1.3378,1.3378 4.3379,-1.3377 5.6756,0 0.2572,0.2572 0,25.7021 0,28.3781 0,32.1619 0,-37.8375 0,-5.6756 0,15.135 0,30.27 0,45.405 0,2.0843 -0.2284,22.4741 0,22.7025 1.3378,1.3377 4.3379,-1.3378 5.6756,0 1.3378,1.3377 0,3.7837 0,5.6756 0,1.8919 0,3.7837 0,5.6756 0,13.2431 0,26.4862 0,39.7294 0,1.8918 1.3378,4.3378 0,5.6756 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 -1.3377,1.3377 0,3.7837 0,5.6756 0,11.3512 0,22.7025 0,34.0537 0,1.8919 1.3378,4.3379 0,5.6757 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 -0.2572,0.2572 0,25.702 0,28.3781 0,1.8918 1.3378,4.3378 0,5.6756 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.1603,1.1603 1.1251,14.7765 0,17.0268 -1.1965,2.3931 -4.4791,3.2826 -5.6756,5.6757 -1.6922,3.3843 1.6921,7.9669 0,11.3512 -1.1966,2.3931 -4.4791,3.2826 -5.6757,5.6756 -1.6921,3.3843 2.6755,8.6758 0,11.3513 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 -2.8378,2.8378 2.8378,14.189 0,17.0268 -1.3377,1.3378 -4.3379,-1.3377 -5.6756,0 -2.8378,2.8379 2.8378,14.1891 0,17.0269 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -2.8378,2.8378 2.8378,14.1891 0,17.0269 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -2.8378,2.8378 2.8379,14.189 0,17.0268 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -2.8378,2.8378 2.8378,14.1891 0,17.0269 -1.3377,1.3378 -4.3378,-1.3378 -5.6756,0 -2.6755,2.6755 2.6755,8.6757 0,11.3512 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -11.7431,11.7431 17.9449,-0.459 -5.6756,11.3513 -1.6922,0.8461 -7.0134,1.3377 -5.6757,0 2.9914,-2.9913 14.3426,-8.6669 11.3513,-5.6756 -4.8234,4.8233 -10.9258,8.3007 -17.0269,11.3512 -1.6921,0.8461 -4.3378,-1.3377 -5.6756,0 -1.3378,1.3378 1.3378,4.3379 0,5.6756 -1.8935,1.8935 -9.4578,-1.8934 -11.3512,0 -1.3378,1.3378 1.3377,4.3379 0,5.6757 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 0,15.1349 1.8919,-1.8919 -5.6756,5.6756 -1.3377,1.3377 1.3378,4.3378 0,5.6756 -1.3377,1.3378 -5.6756,1.8919 -5.6756,0 0,-2.6755 8.3511,-5.6756 5.6756,-5.6756 -28.6721,0 -4.3618,4.3618 -11.3512,11.3512 -1.3378,1.3378 -3.7838,0 -5.6757,0 -1.3764,0 -16.8443,0.1825 -17.0268,0 -1.3378,-1.3377 1.3377,-4.3378 0,-5.6756 -2.6755,-2.6755 -8.6758,2.6755 -11.3513,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3657,-1.3658 -21.3367,1.3657 -22.7025,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -3.7837,0 -5.6756,0 -13.2431,0 -26.4862,0 -39.7293,0 -1.8919,0 -3.7838,0 -5.6756,0 -1.8919,0 -4.3379,1.3377 -5.6757,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6757 -1.3377,-1.3377 -3.7837,0 -5.6756,0 -1.8919,0 -3.7837,0 -5.6756,0 -1.3765,0 -16.8443,0.1826 -17.0269,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3657,-1.3657 -21.3367,1.3657 -22.7025,0 -1.3377,-1.3377 1.3378,-4.3379 0,-5.6756 -0.2284,-0.2284 -20.6182,0 -22.7024,0 -3.7838,0 -15.135,0 -11.3513,0 3.7838,0 15.135,0 11.3513,0 -5.6757,0 -11.6425,1.7948 -17.0269,0 -1.7948,-0.5983 1.3377,-4.3379 0,-5.6756 -1.3378,-1.3378 -3.7838,0 -5.6756,0 -1.8919,0 -3.7838,0 -5.6757,0 -2.0843,0 -22.474,0.2284 -22.7024,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6757 -1.3378,-1.3377 -3.7838,0 -5.6757,0 -1.8918,0 -3.7837,0 -5.6756,0 -15.135,0 1.8919,1.8919 -5.6756,-5.6756 -1.3378,-1.3377 -3.7838,0 -5.6756,0 -9.4594,0 -18.9188,0 -28.3781,0 -5.6757,0 -11.3513,0 -17.0269,0 -1.8919,0 -7.5675,0 -5.6756,0 3.7837,0 11.3512,3.7838 11.3512,0 0,-6.5217 -12.954,-5.6756 -17.0268,-5.6756 -1.8919,0 -5.6757,1.8919 -5.6757,0 0,-8.0405 26.4863,16.0809 -5.6756,0 -1.6921,-0.8461 0,-3.7837 0,-5.6756 0,-1.8919 0,-3.7838 0,-5.6756 0,-1.8919 0,-3.7838 0,-5.6757 0,-1.8918 -1.3377,-4.3378 0,-5.6756 1.3378,-1.3377 4.3379,1.3378 5.6756,0 2.6755,-2.6755 -2.6755,-8.6757 0,-11.3512 1.3378,-1.3378 4.3379,1.3377 5.6757,0 1.3377,-1.3378 0,-3.7838 0,-5.6756 0,-2.6761 -0.2573,-28.1209 0,-28.3782 1.3377,-1.3377 4.3378,1.3378 5.6756,0 0.2284,-0.2284 0,-20.6181 0,-22.7024 0,-15.135 -1.8919,1.8918 5.6756,-5.6757 0.1825,-0.1825 0,-15.6503 0,-17.0268 0,-3.7723 0,-7.579 0,-11.3513 0,-1.8918 -1.8919,-5.6756 0,-5.6756 1.8919,0 0,7.5675 0,5.6756 0,-7.5675 0,-15.135 0,-22.7025 0,-2.0843 -0.2284,-22.4741 0,-22.7024 1.3378,-1.3378 3.7837,0 5.6756,0 1.8919,0 3.7838,0 5.6756,0 9.4594,0 18.9188,0 28.3781,0 1.8919,0 4.3379,-1.3378 5.6757,0 1.3377,1.3377 1.8918,5.6756 0,5.6756 -1.8919,0 0,-3.7838 0,-5.6756 -4.0179,-17.3054 -15.7256,-2.1872 -22.7025,-5.6757 -2.3931,-1.1965 -3.2826,-4.4791 -5.6756,-5.6756 -1.6922,-0.8461 -4.3379,1.3378 -5.6757,0 -1.3377,-1.3377 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -4.3378,1.3377 -5.6756,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -4.3378,1.3377 -5.6756,0 -1.3378,-1.3378 1.3378,-4.3379 0,-5.6757 -1.3378,-1.3377 -4.3379,1.3378 -5.6756,0 -1.3378,-1.3377 -1.8919,-5.6756 0,-5.6756 1.8918,0 0,7.5675 0,5.6756 0,-17.0268 0,-34.0537 0,-51.0805 0,-1.8919 0,-3.7838 0,-5.6757 0,-1.8918 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3377 4.3378,1.3378 5.6756,0 0.5676,-0.5676 0.5676,-16.4593 0,-17.0269 -2.6755,-2.6755 -8.6757,2.6756 -11.3512,0 -1.3378,-1.3377 1.3377,-4.3378 0,-5.6756 -2.6756,-2.6755 -8.6758,2.6755 -11.3513,0 -7.5675,-7.5675 9.4594,-5.6756 -5.6756,-5.6756 -15.135,0 1.8919,1.8919 -5.6756,-5.6756 -1.3378,-1.3378 -3.9835,0.846 -5.6757,0 -2.393,-1.1965 -3.2825,-4.4791 -5.6756,-5.6756 -1.6921,-0.8461 -4.3378,1.3377 -5.6756,0 -1.3378,-1.3378 1.3378,-4.3379 0,-5.6757 -2.8378,-2.8378 -14.1891,2.8378 -17.0269,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3377 -3.7837,0 -5.6756,0 -1.8919,0 -3.7837,0 -5.6756,0 -9.4594,0 -18.9187,0 -28.3781,0 -1.8919,0 -4.3379,-1.3377 -5.6756,0 -1.3378,1.3378 1.3377,4.3379 0,5.6756 -1.3378,1.3378 -3.7838,0 -5.6757,0 -1.8918,0 -3.7837,0 -5.6756,0 -1.8919,0 -7.5675,0 -5.6756,0 3.7837,0 15.135,0 11.3512,0 -5.6756,0 -11.3512,0 -17.0268,0 -1.8919,0 -5.6756,1.8919 -5.6756,0 0,-1.8918 7.5675,0 5.6756,0 -3.7838,0 -7.967,1.6922 -11.3513,0 -1.6921,-0.846 0,-3.7837 0,-5.6756 0,-1.8919 0,-7.5675 0,-5.6756 0,8.9917 1.6922,22.1033 -5.6756,0 -1.1281,-3.3842 0,-28.5548 0,-34.0537 0,-1.8919 1.3378,-4.3379 0,-5.6757 -1.3377,-1.3377 -4.3379,1.3378 -5.6756,0 -5.5989,-5.5988 11.6298,-11.3512 -5.6756,-11.3512 -3.7838,0 -15.135,0 -11.3513,0 3.7838,0 11.3513,3.7837 11.3513,0 0,-4.2304 -7.338,-4.3379 -11.3513,-5.6756 -3.2022,-1.0674 -13.2973,0 -17.0268,0 -1.8919,0 -7.5675,0 -5.6757,0 8.9917,0 22.1033,1.6921 0,-5.6756 -3.5895,-1.1966 -8.6757,2.6755 -11.3512,0 -1.3378,-1.3378 0,-3.7838 0,-5.6757 0,-1.8918 0,-3.7837 0,-5.6756 0,-11.3512 0,-22.7025 0,-34.0537 0,-1.8919 0,-3.7838 0,-5.6756 0,-1.8919 0.8461,-3.9835 0,-5.6757 -1.1965,-2.393 -4.4791,-3.2825 -5.6756,-5.6756 -1.6922,-3.3843 2.6755,-8.6757 0,-11.3512 -1.3378,-1.3378 -4.3379,1.3377 -5.6756,0 -1.3378,-1.3378 -1.8919,-5.6757 0,-5.6757 2.6755,0 5.6756,3.0002 5.6756,5.6757 0,1.8918 -3.9835,-0.8461 -5.6756,0 -2.3931,1.1965 -4.4791,3.2825 -5.6757,5.6756 0,15.135 1.8919,-1.8919 -5.6756,5.6756 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3379,-1.3377 -5.6756,0 -1.3378,1.3378 1.3377,4.3379 0,5.6757 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -1.3377,1.3377 1.3378,4.3378 0,5.6756 -1.3657,1.3657 -21.3367,-1.3657 -22.7024,0 -1.3378,1.3378 1.3377,4.3379 0,5.6756 -0.1826,0.1826 -15.6504,0 -17.0269,0 -1.8919,0 -4.3379,1.3378 -5.6756,0 -1.3378,-1.3377 1.3377,-4.3378 0,-5.6756 -2.6755,-2.6755 -11.3513,3.7837 -11.3513,0 0,-1.8919 5.6756,1.8919 5.6756,0 0,-2.2165 -10.6348,-6.392 -5.6756,-11.3512 1.3378,-1.3378 4.3379,1.3377 5.6756,0 2.6756,-2.6756 -1.6921,-7.967 0,-11.3513 1.1966,-2.393 4.4791,-3.2826 5.6757,-5.6756 0.846,-1.6922 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 4.3378,1.3377 5.6756,0 2.8378,-2.8378 -2.8378,-14.1891 0,-17.0269 1.3377,-1.3378 4.3379,1.3378 5.6756,0 2.8378,-2.8378 -2.8378,-14.189 0,-17.0269 1.3378,-1.3377 4.3379,1.3378 5.6756,0 2.6755,-2.6755 -1.6921,-7.9669 0,-11.3512 1.1966,-2.3931 4.4791,-3.2826 5.6757,-5.6756 1.1251,-2.2504 -1.1603,-15.8666 0,-17.0269 1.3377,-1.3377 4.3378,1.3378 5.6756,0 1.3657,-1.3657 -1.3658,-21.3367 0,-22.7025 15.135,0 -1.8919,1.8919 5.6756,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6757,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 4.3378,1.3377 5.6756,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6757 1.3377,-1.3377 4.3379,1.3378 5.6756,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 1.888,-1.888 9.4633,1.888 11.3513,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 15.1349,0 -1.8919,1.8919 5.6756,-5.6756 1.888,-1.888 9.4632,1.888 11.3512,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6757 1.3378,-1.3377 4.3379,1.3378 5.6757,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3377 3.9834,0.8461 5.6756,0 7.5713,-3.7856 3.7799,-7.5656 11.3512,-11.3512 1.6922,-0.8461 4.3379,1.3377 5.6756,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6757 1.3378,-1.3377 4.3379,1.3378 5.6757,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 15.135,0 -1.8919,1.8919 5.6756,-5.6756 1.3377,-1.3378 3.9835,0.8461 5.6756,0 2.3931,-1.1965 3.2826,-4.4791 5.6756,-5.6756 1.6922,-0.8461 4.3379,1.3377 5.6757,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 4.3378,1.3377 5.6756,0 1.3377,-1.3378 -0.8461,-3.9835 0,-5.6757 0.5432,-1.0864 21.616,-22.1592 22.7025,-22.7025 1.6921,-0.846 4.3378,1.3378 5.6756,0 1.3377,-1.3377 -0.8461,-3.9834 0,-5.6756 11.8103,-23.6206 -0.3918,6.0675 11.3512,-5.6756 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6757,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 15.1349,0 -1.8919,1.8918 5.6756,-5.6757 1.3377,-1.3377 3.9835,0.8461 5.6756,0 6.8107,-3.4053 10.2161,-13.6215 17.0269,-17.0268 1.6921,-0.8461 4.3378,1.3377 5.6756,0 2.6755,-2.6755 -3.7838,-11.3513 0,-11.3513 1.8919,0 0,7.5675 0,5.6757 0,-3.7838 0,-7.5675 0,-11.3513 0,-1.8919 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 4.3378,1.3377 5.6756,0 0.2284,-0.2284 0,-20.6182 0,-22.7025 0,-1.8919 0,-7.5675 0,-5.6756 0,3.7837 0,15.135 0,11.3512 0,-5.6756 0,-11.3512 0,-17.0268 0,-1.8919 0,-3.7838 0,-5.6757 0,-1.8918 -1.3378,-4.3378 0,-5.6756 1.3378,-1.3377 4.3379,1.3378 5.6756,0 2.8378,-2.8378 -2.8378,-14.189 0,-17.0268 1.3378,-1.3378 4.3379,1.3377 5.6756,0 2.8379,-2.8379 -2.8378,-14.1891 0,-17.0269 1.3378,-1.3378 4.3379,1.3377 5.6757,0 1.3377,-1.3378 0,-3.7838 0,-5.6756 0,-2.6761 -0.2573,-28.1209 0,-28.3781 1.3377,-1.3378 4.3378,1.3377 5.6756,0 1.1603,-1.1603 -1.1252,-14.7766 0,-17.0269 1.1965,-2.3931 4.4791,-3.2826 5.6756,-5.6756 1.6922,-3.3843 -1.6921,-7.967 0,-11.3513 1.1965,-2.393 4.4791,-3.2825 5.6756,-5.6756 0.7462,-1.4924 0,-19.7346 0,-22.7025 0,-1.8919 -1.8918,-5.6756 0,-5.6756 1.8919,0 0,7.5675 0,5.6756 0,-5.6756 0,-11.3512 0,-17.0268 0,-1.8919 0,-7.5675 0,-5.6757 0,3.7838 0,15.135 0,11.3513 0,-11.3513 0,-22.7025 0,-34.0538 0,-1.8918 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3377 -4.3378,1.3378 -5.6756,0 -1.3377,-1.3377 0,-3.7837 0,-5.6756 0,-1.8919 0,-7.5675 0,-5.6756 0,3.7837 0,15.135 0,11.3512 0,-5.6756 1.7948,-11.6425 0,-17.0268 -0.5983,-1.7948 -5.6756,1.8918 -5.6756,0 0,-8.3512 18.8237,13.148 0,-5.6757 -44.4147,6.6075 -4.1472,-21.174 -11.3513,-28.3781 -1.3377,-1.3377 -4.3378,1.3378 -5.6756,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3377 -4.3378,1.3378 -5.6756,0 -1.3378,-1.3377 1.3378,-4.3379 0,-5.6756 -1.3378,-1.3378 -4.3379,1.3377 -5.6756,0 -2.6755,-2.6755 2.6755,-8.6757 0,-11.3513 -2.6755,-2.6755 -8.6757,2.6756 -11.3513,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.888,-1.888 -9.4632,1.888 -11.3512,0 -1.3378,-1.3377 -1.8919,-5.6756 0,-5.6756 2.6755,0 8.3511,5.6756 5.6756,5.6756 -4.2303,0 -7.8314,-3.329 -11.3512,-5.6756 -2.2262,-1.4841 -7.5675,-3.7837 -5.6756,-5.6756 1.8918,-1.8919 8.3511,5.6756 5.6756,5.6756 -4.2304,0 -8.36,-2.6843 -11.3513,-5.6756 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -3.7837,0 -5.6756,0 -1.8919,0 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -15.135,0 1.8919,-1.8919 -5.6756,5.6756 -1.3378,1.3378 -5.6757,1.8919 -5.6757,0 0,-1.8919 5.6757,-1.8919 5.6757,0 0,2.6755 -3.2826,4.4791 -5.6757,5.6756 -3.3842,1.6922 -8.6757,-2.6755 -11.3512,0 -1.3378,1.3378 1.3378,4.3379 0,5.6756 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -1.3378,1.3378 1.3377,4.3379 0,5.6757 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -1.3377,1.3377 1.3378,4.3379 0,5.6756 -15.135,0 1.8919,-1.8919 -5.6756,5.6756 -1.3377,1.3378 -4.3379,-1.3377 -5.6756,0 -2.6755,2.6755 2.6755,8.6758 0,11.3513 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3378 -4.3379,-1.3378 -5.6757,0 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.8833,1.8833 1.8834,9.4679 0,11.3513 -1.3377,1.3377 -4.3378,-1.3378 -5.6756,0 -1.3378,1.3377 1.3378,4.3378 0,5.6756 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3378 -3.7838,0 -5.6756,0 -1.8919,0 -5.6757,1.8919 -5.6757,0 0,-1.8919 7.5675,0 5.6757,0 -3.7838,0 -7.5675,0 -11.3513,0 -1.8919,0 -4.3378,1.3378 -5.6756,0 -1.3378,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3378,-1.3378 -5.6756,1.8919 -5.6756,0 0,-1.8919 7.5675,0 5.6756,0 -3.7838,0 -7.5675,0 -11.3512,0 -1.8919,0 -4.3379,-1.3378 -5.6757,0 -1.3377,1.3377 1.3378,4.3378 0,5.6756 -15.135,0 1.8919,-1.8919 -5.6756,5.6756 -2.6755,2.6755 -8.6757,-2.6755 -11.3512,0 -1.3378,1.3378 1.3377,4.3379 0,5.6756 -1.3378,1.3378 -3.9835,-0.846 -5.6757,0 -2.393,1.1966 -3.2825,4.4791 -5.6756,5.6757 -1.6921,0.846 -4.3378,-1.3378 -5.6756,0 -1.3378,1.3377 1.3378,4.3378 0,5.6756 -1.888,1.888 -9.4632,-1.888 -11.3512,0 -1.3378,1.3377 1.3377,4.3379 0,5.6756 -1.3378,1.3378 -4.3379,-1.3377 -5.6757,0 -1.3377,1.3378 1.3378,4.3379 0,5.6756 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -1.3377,1.3378 1.3378,4.3379 0,5.6757 -2.6755,2.6755 -8.6757,-2.6756 -11.3512,0 -1.3378,1.3377 1.3377,4.3378 0,5.6756 -1.3378,1.3377 -3.7838,0 -5.6757,0 -1.8918,0 -4.3378,1.3377 -5.6756,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -4.3378,1.3377 -5.6756,0 -1.3378,-1.3378 1.3378,-4.3379 0,-5.6757 -1.3378,-1.3377 -4.3379,1.3378 -5.6756,0 -1.8935,-1.8934 1.8935,-9.4577 0,-11.3512 -1.3378,-1.3378 -4.3379,1.3377 -5.6756,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6756 -1.3378,-1.3378 -4.3379,1.3377 -5.6757,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6757 -1.3377,-1.3377 -4.3378,1.3378 -5.6756,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3377 -4.3378,1.3378 -5.6756,0 -1.3378,-1.3377 0.8461,-3.9835 0,-5.6756 -2.3931,-4.7861 -8.9582,-6.5651 -11.3512,-11.3512 -0.8461,-1.6922 1.3377,-4.3379 0,-5.6757 -1.3378,-1.3377 -4.3379,1.3378 -5.6757,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3377 -4.3378,1.3378 -5.6756,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3378 -4.3379,1.3378 -5.6756,0 -1.8935,-1.8935 1.8935,-9.4578 0,-11.3512 -1.3378,-1.3378 -4.3379,1.3377 -5.6756,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6757 -1.3378,-1.3377 -4.3379,1.3378 -5.6757,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3377 -4.3378,1.3378 -5.6756,0 -2.6755,-2.6755 2.6755,-8.6757 0,-11.3512 -1.3377,-1.3378 -4.3378,1.3377 -5.6756,0 -1.3378,-1.3378 1.3378,-4.3379 0,-5.6757 -1.3378,-1.3377 -4.3379,1.3378 -5.6756,0 -2.6755,-2.6755 2.6755,-8.6757 0,-11.3512 -1.3378,-1.3378 -4.3379,1.3378 -5.6756,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6756 -1.888,-1.888 -9.4633,1.888 -11.3513,0 0,-15.135 1.8919,1.8919 -5.6756,-5.6756 -1.3378,-1.3378 0,-3.7838 0,-5.6757 0,-1.8918 -1.3378,-4.3378 0,-5.6756 1.3378,-1.3377 4.3379,1.3378 5.6756,0 1.3378,-1.3377 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6756,0 2.6756,-2.6755 -2.6755,-8.6757 0,-11.3513 1.3378,-1.3377 3.7838,0 5.6757,0 1.8918,0 5.6756,-1.8918 5.6756,0 0,1.8919 -5.6756,1.8919 -5.6756,0 0,-2.6755 3.2825,-4.479 5.6756,-5.6756 3.3843,-1.6921 8.6757,2.6755 11.3512,0 1.8935,-1.8934 -1.8934,-9.4577 0,-11.3512 1.3378,-1.3378 4.3379,1.3377 5.6756,0 1.8834,-1.8834 -1.8833,-9.4679 0,-11.3513 1.3378,-1.3377 4.3379,1.3378 5.6757,0 2.6755,-2.6755 -2.6755,-8.6757 0,-11.3512 7.5675,-7.5675 5.6756,9.4594 5.6756,-5.6756 0,-1.8919 0,-7.5675 0,-5.6756 0,8.9916 -1.6922,22.1032 5.6756,0 1.3303,-3.9909 -1.5557,-26.8224 0,-28.3782 1.3378,-1.3377 4.3379,1.3378 5.6756,0 2.8378,-2.8378 -2.8378,-14.189 0,-17.0268 1.3378,-1.3378 4.3379,1.3377 5.6757,0 1.3377,-1.3378 0,-3.7838 0,-5.6756 0,-1.8919 0,-3.7838 0,-5.6757 0,-9.4593 0,-18.9187 0,-28.3781 0,-1.8918 0,-3.7837 0,-5.6756 0,-1.8919 -0.8461,-3.9835 0,-5.6756 1.1965,-2.3931 4.4791,-3.2826 5.6756,-5.6756 1.7836,-3.5673 -1.7837,-19.1353 0,-22.7025 7.0134,-14.0268 5.6756,1.9591 5.6756,-11.3513 0,-1.3765 -0.1825,-16.8443 0,-17.0268 1.3378,-1.3378 4.3379,1.3377 5.6756,0 1.3378,-1.3378 0,-3.7838 0,-5.6757 0,-9.4593 0,-18.9187 0,-28.3781 0,-1.8918 0,-3.7837 0,-5.6756 0,-1.8919 -1.8919,-5.6756 0,-5.6756 1.8919,0 0,3.7837 0,5.6756 0,1.3765 0.1825,16.8444 0,17.0269 -1.3377,1.3377 -3.7837,0 -5.6756,0 23.7221,-26.0267 16.1639,-22.7025 39.7293,-22.7025 1.8919,0 4.3379,-1.3378 5.6757,0 1.3377,1.3378 -1.3378,4.3379 0,5.6756 2.6755,2.6755 11.3512,-3.7837 11.3512,0 0,1.8919 -7.0134,-1.3377 -5.6756,0 6.5217,6.5217 10.0375,5.6756 17.0269,5.6756 1.8918,0 4.3378,1.3378 5.6756,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.7574,-1.7574 26.6206,1.7575 28.3781,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 2.8378,-2.8378 14.189,2.8378 17.0269,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 3.7837,0 5.6756,0 1.8918,0 3.7837,0 5.6756,0 15.135,0 30.27,0 45.405,0 1.8918,0 4.3378,-1.3378 5.6756,0 1.3377,1.3377 -1.3378,4.3378 0,5.6756 1.3377,1.3378 3.7837,0 5.6756,0 1.8919,0 3.7838,0 5.6756,0 11.3513,0 22.7025,0 34.0538,0 2.556,0 15.2995,-0.8636 17.0268,0 2.3931,1.1965 3.2826,4.4791 5.6757,5.6756 1.4923,0.7462 19.7345,0 22.7024,0 17.0269,0 34.0538,0 51.0806,0 9.4594,0 18.9188,0 28.3781,0 3.7838,0 15.135,0 11.3513,0 -3.7838,0 -15.135,0 -11.3513,0 52.9725,0 5.6757,5.6756 17.0269,-5.6756 2.6755,-2.6755 8.6757,2.6755 11.3512,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6756 1.3378,-1.3378 4.3379,1.3377 5.6757,0 2.6755,-2.6755 -2.6755,-8.6758 0,-11.3513 1.3377,-1.3377 4.3378,1.3378 5.6756,0 1.3377,-1.3377 -1.3378,-4.3378 0,-5.6756 1.3377,-1.3377 3.7837,0 5.6756,0 0,-1.8919 -0.8461,-3.9835 0,-5.6756 1.1965,-2.3931 4.4791,-3.2826 5.6756,-5.6756 0.8461,-1.6922 1.3378,-7.0134 0,-5.6757 -2.9913,2.9914 -9.9059,11.3513 -5.6756,11.3513 12.689,0 11.3513,-10.4865 11.3513,-17.0269 0,-1.8919 -1.8919,-5.6756 0,-5.6756 1.8918,0 0,7.5675 0,5.6756 0,-3.7837 0,-7.5675 0,-11.3512 0,-1.8919 -1.3378,-4.3379 0,-5.6756 1.3377,-1.3378 4.3378,1.3377 5.6756,0 1.3377,-1.3378 0,-3.7838 0,-5.6757 0,-1.8918 1.3377,-4.3378 0,-5.6756 -1.3378,-1.3377 -4.3379,1.3378 -5.6756,0 -1.3378,-1.3377 1.3377,-4.3379 0,-5.6756 -1.3378,-1.3378 -4.3379,1.3377 -5.6757,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6756 -1.888,-1.888 -9.4632,1.888 -11.3512,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6757 -1.3378,-1.3377 -4.3379,1.3378 -5.6756,0 -1.3378,-1.3377 1.3377,-4.3378 0,-5.6756 -1.3378,-1.3377 -4.3379,1.3378 -5.6757,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3378 -4.3378,1.3378 -5.6756,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -4.3378,1.3377 -5.6756,0 -1.3378,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3378,-1.3378 -4.3379,1.3377 -5.6756,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6757 -1.3378,-1.3377 -4.3379,1.3378 -5.6756,0 -1.3378,-1.3377 1.3377,-4.3378 0,-5.6756 -1.3378,-1.3377 -4.3379,1.3378 -5.6757,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3378 -4.3378,1.3378 -5.6756,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -4.3378,1.3377 -5.6756,0 -1.3378,-1.3378 1.3378,-4.3379 0,-5.6756 -0.2284,-0.2284 -20.6182,0 -22.7025,0 -1.8919,0 -7.5675,0 -5.6756,0 3.7837,0 15.135,0 11.3512,0 -22.7025,0 -45.4049,0 -68.1074,0 -1.8919,0 -3.7838,0 -5.6756,0 -1.8919,0 -4.3379,1.3377 -5.6757,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6757 -15.135,0 1.8919,1.8919 -5.6756,-5.6756 -1.3377,-1.3377 -4.3379,1.3378 -5.6756,0 -1.3378,-1.3377 0.8461,-3.9835 0,-5.6756 -1.1965,-2.3931 -4.4791,-3.2826 -5.6756,-5.6756 -0.8461,-1.6922 -1.8919,-5.6757 0,-5.6757 1.8918,0 1.8918,5.6757 0,5.6757 -11.3403,0 -2.294,-13.6453 -5.6757,-17.0269 -1.3377,-1.3378 -4.3378,1.3378 -5.6756,0 -0.2572,-0.2572 0,-25.7021 0,-28.3781 0,-9.4594 0,-18.9187 0,-28.3781 0,-3.7667 0,-7.5846 0,-11.3513 0,-1.8918 -1.8919,-5.6756 0,-5.6756 1.8919,0 0,7.5675 0,5.6756 0,-3.7837 0,-7.5675 0,-11.3512 0,-1.8919 -1.8919,-5.6756 0,-5.6756 1.8919,0 1.8919,5.6756 0,5.6756 -2.6755,0 -3.2825,-4.4791 -5.6756,-5.6756 -1.6921,-0.8461 -3.9835,0.846 -5.6756,0 -4.6149,-2.3075 -4.6961,-9.0032 -11.3513,-5.6756 -2.393,1.1965 -3.2825,4.4791 -5.6756,5.6756 -3.5672,1.7836 -19.1352,-1.7836 -22.7025,0 -2.393,1.1965 -3.2825,4.4791 -5.6756,5.6756 -3.9203,1.9602 -26.3859,-1.9923 -28.3781,0 -1.3378,1.3378 0,3.7837 0,5.6756 0,9.4594 0,18.9188 0,28.3781 0,1.8919 -1.3378,4.3379 0,5.6757 1.3378,1.3377 3.7837,0 5.6756,0 0,1.8918 -0.8461,3.9834 0,5.6756 1.1965,2.393 4.4791,3.2825 5.6756,5.6756 0.8461,1.6921 1.8919,5.6756 0,5.6756 -1.8918,0 1.8919,-5.6756 0,-5.6756 -2.6755,0 -3.0001,5.6756 -5.6756,5.6756 -1.8919,0 1.3378,-4.3378 0,-5.6756 -1.3377,-1.3378 -4.3378,1.3378 -5.6756,0 -1.3378,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3378,-1.3378 -4.3379,1.3377 -5.6756,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6756 -1.888,-1.888 -9.4633,1.8879 -11.3513,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6757 -2.8378,-2.8378 -14.189,2.8378 -17.0268,0 -1.3378,-1.3377 1.3377,-4.3378 0,-5.6756 -1.888,-1.888 -9.4633,1.888 -11.3513,0 -1.3377,-1.3377 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -4.3378,1.3377 -5.6756,0 -1.3378,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3378,-1.3378 -4.3379,1.3377 -5.6756,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6757 -1.3378,-1.3377 -4.3379,1.3378 -5.6756,0 -1.3378,-1.3377 1.3377,-4.3378 0,-5.6756 -1.888,-1.888 -9.4633,1.888 -11.3513,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -2.6755,-2.6755 -8.6757,2.6755 -11.3512,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6756 -1.3378,-1.3378 -4.3379,1.3377 -5.6757,0 -1.3377,-1.3378 1.3378,-4.3379 0,-5.6756 -1.3377,-1.3378 -3.9834,0.846 -5.6756,0 -2.393,-1.1966 -3.7837,-3.7838 -5.6756,-5.6757 -1.8919,-1.8918 -4.4791,-3.2825 -5.6756,-5.6756 -0.8461,-1.6921 1.3377,-4.3379 0,-5.6756 -1.3378,-1.3378 -4.3379,1.3377 -5.6756,0 -2.6756,-2.6755 2.6755,-8.6757 0,-11.3513 -1.3378,-1.3377 -4.3379,1.3378 -5.6757,0 -1.8833,-1.8833 1.8834,-9.4679 0,-11.3512 -1.3377,-1.3378 -4.3378,1.3378 -5.6756,0 -1.3377,-1.3378 0,-3.7837 0,-5.6756 0,-1.8919 -1.8919,-5.6756 0,-5.6756 1.8919,0 0,7.5675 0,5.6756 0,-3.7838 0,-7.5675 0,-11.3513 0,-1.8918 1.8919,5.6757 0,5.6757 -1.8919,0 0,-3.7838 0,-5.6757'}));SVGs.jungle=_react2.default.createElement('g',{transform:'matrix(0.34000712,0,0,0.34000712,-1092.0047,-410.6681)',style:boldStyle},_react2.default.createElement('path',{d:'m 3303.0326,2696.0558 c 2.3376,-4.6752 4.6752,-9.3504 7.0128,-14.0256 0,-1.1688 -0.5227,-2.461 0,-3.5064 0.7392,-1.4784 2.7672,-2.028 3.5064,-3.5064 0.5227,-1.0454 -0.8265,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5064,0 1.653,-1.6529 -1.6529,-5.3599 0,-7.0128 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.5227,-2.461 0,-3.5064 2.1039,-4.2077 8.4154,-6.3115 10.5192,-10.5192 0.5227,-1.0454 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.461,0.5227 3.5064,0 1.4785,-0.7392 2.3376,-2.3376 3.5064,-3.5064 1.1688,-1.1688 2.7672,-2.028 3.5064,-3.5064 0,-9.3504 -1.1688,1.1688 3.5065,-3.5064 0.8264,-0.8265 -0.5228,-2.461 0,-3.5064 0.7392,-1.4785 2.3376,-2.3376 3.5064,-3.5064 1.1688,-1.1688 2.0279,-2.7672 3.5064,-3.5064 1.0454,-0.5227 3.5064,-1.1688 3.5064,0 0,1.1688 -3.5064,1.1688 -3.5064,0 0,-1.653 2.0279,-2.7672 3.5064,-3.5064 1.0454,-0.5227 2.6799,0.8264 3.5064,0 0.8264,-0.8265 -1.1688,-3.5064 0,-3.5064 1.1688,0 0,2.3376 0,3.5064'}),_react2.default.createElement('path',{d:'m 3359.1351,2622.4214 c -10.6913,0 -0.047,-3.5539 -3.5064,-7.0129 -0.8265,-0.8264 -2.3376,0 -3.5064,0 -9.3504,0 -18.7009,0 -28.0513,0 14.9425,-22.4137 8.0659,-15.0786 17.532,-24.5448 1.1689,-1.1688 2.7672,-2.028 3.5065,-3.5064 0.5227,-1.0454 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8265 2.6799,0.8265 3.5064,0 0.8264,-0.8265 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8265 2.6799,0.8265 3.5064,0 0.8264,-0.8265 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8265 2.6799,0.8265 3.5064,0 0.8264,-0.8265 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8265 2.6799,0.8265 3.5064,0 0.8264,-0.8265 0,-2.3376 0,-3.5064 0,-1.1688 0,-2.3376 0,-3.5064 0,-9.3504 0,-18.7008 0,-28.0512 0,-5.844 0,-11.6881 0,-17.5321 0,-1.1688 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8264 2.6799,0.8265 3.5064,0 0.8264,-0.8264 -0.8265,-2.6799 0,-3.5064 1.6529,-1.6529 5.3598,1.653 7.0128,0 0.8264,-0.8264 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8264 2.6799,0.8265 3.5064,0 0.1128,-0.1127 0,-9.6688 0,-10.5192 0,-8.1816 0,-16.3632 0,-24.5448 0,-1.1688 -0.8265,-2.68 0,-3.5064 0.8265,-0.8265 2.6799,0.8264 3.5064,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 1.7532,-1.7532 8.766,1.7532 10.5192,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 0.1128,-0.1128 9.6688,0 10.5192,0 15.0852,0 10.0653,0 24.5448,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 2.68,-0.8265 3.5065,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 1.6529,1.6529 5.3598,-1.653 7.0128,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 1.6529,1.6529 5.3598,-1.653 7.0128,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.3376,0 3.5064,0 1.1688,0 4.6752,0 3.5064,0 -2.3376,0 -7.0128,-2.3376 -7.0128,0 0,9.6554 8.003,0.9902 10.5192,3.5064 0.8264,0.8265 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.461,-0.5227 3.5064,0 1.4784,0.7392 2.028,2.7672 3.5064,3.5064 1.0454,0.5227 2.6799,-0.8265 3.5064,0 1.6529,1.6529 -1.6529,5.3599 0,7.0128 0.8265,0.8265 2.6799,-0.8265 3.5064,0 0.8265,0.8265 0.8265,2.6799 0,3.5064 -0.8265,0.8265 -2.3376,0 -3.5064,0 0,-34.9465 -3.3059,-3.9075 3.5064,-17.532 0.5227,-1.0454 -0.5227,-2.461 0,-3.5064 0.7392,-1.4784 2.7672,-2.028 3.5064,-3.5064 0.5227,-1.0454 -0.5227,-2.461 0,-3.5064 0.7392,-1.4785 2.7672,-2.028 3.5064,-3.5064 0.5227,-1.0454 -0.8265,-2.68 0,-3.5064 0.8265,-0.8265 2.6799,0.8264 3.5064,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 0.8265,-0.8265 2.6799,0.8264 3.5064,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 0.8265,-0.8265 2.6799,0.8264 3.5064,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 1.6529,-1.653 5.3599,1.6529 7.0128,0 0.8265,-0.8265 -1.1688,-3.5064 0,-3.5064 1.1688,0 -0.8264,2.6799 0,3.5064 0.8265,0.8264 2.68,-0.8265 3.5064,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 0.8265,0.8264 2.68,-0.8265 3.5064,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 0.8265,0.8264 2.68,-0.8265 3.5064,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 0.8265,0.8264 2.68,-0.8265 3.5064,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 1.7532,1.7532 8.766,-1.7532 10.5193,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 0.8264,0.8264 2.3376,0 3.5064,0 1.1688,0 2.3376,0 3.5064,0 9.3504,0 18.7008,0 28.0512,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 2.6799,-0.8265 3.5064,0 4.6752,4.6752 -5.844,3.5064 3.5064,3.5064 2.3376,0 9.3504,0 7.0128,0 -2.3376,0 -9.3504,0 -7.0128,0 3.5064,0 7.0128,0 10.5192,0 1.1688,0 3.5064,-1.1688 3.5064,0 0,1.1688 -4.6752,0 -3.5064,0 2.3376,0 4.6752,0 7.0128,0 1.1688,0 3.5064,-1.1688 3.5064,0 0,1.1688 -2.3376,0 -3.5064,0 3.5064,-1.1688 7.0128,-2.3376 10.5192,-3.5064 0,-1.1688 -0.8264,-2.68 0,-3.5064 0.8265,-0.8265 2.461,0.5227 3.5064,0 1.4785,-0.7392 2.028,-2.7672 3.5064,-3.5064 1.0455,-0.5227 2.461,0.5227 3.5064,0 0.9338,-0.4669 6.0791,-6.546 7.0129,-7.0128 1.0454,-0.5227 2.461,0.5227 3.5064,0 2.9568,-1.4785 4.0559,-5.5344 7.0128,-7.0128 1.0454,-0.5228 2.6799,0.8264 3.5064,0 0.8264,-0.8265 -0.8265,-2.68 0,-3.5065 0.8264,-0.8264 2.461,0.5228 3.5064,0 1.4784,-0.7392 2.028,-2.7671 3.5064,-3.5064 1.0454,-0.5227 2.6799,0.8265 3.5064,0 0.8265,-0.8264 -0.8265,-2.6799 0,-3.5064 0.8265,-0.8264 2.6799,0.8265 3.5064,0 0.8265,-0.8264 -0.8265,-2.6799 0,-3.5064 0.8265,-0.8264 2.461,0.5227 3.5064,0 1.4784,-0.7392 2.028,-2.7672 3.5064,-3.5064 1.0454,-0.5227 2.6799,0.8265 3.5064,0 0.8265,-0.8264 -0.8265,-2.6799 0,-3.5064 0.8265,-0.8264 2.6799,0.8265 3.5064,0 0.8265,-0.8264 -0.8265,-2.6799 0,-3.5064 0.8265,-0.8264 2.6799,0.8265 3.5064,0 0.8265,-0.8264 0,-2.3376 0,-3.5064 0,-1.1688 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8265 0.5227,-2.461 0,-3.5064 -0.7392,-1.4784 -2.7672,-2.028 -3.5064,-3.5064 -0.5227,-1.0454 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8265 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8265 0.8265,-2.6799 0,-3.5064 -1.169,-1.169 -5.8439,1.1689 -7.0128,0 -0.8265,-0.8265 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.68,0.8265 -3.5064,0 -0.8265,-0.8265 0.8264,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.68,0.8265 -3.5064,0 -0.8265,-0.8265 -0.8265,-2.6799 0,-3.5064 1.7532,-1.7532 8.766,1.7532 10.5192,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 1.6529,-1.653 5.3599,1.6529 7.0128,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 1.6529,-1.653 5.3599,1.6529 7.0128,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 1.6529,-1.653 5.3599,1.6529 7.0128,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 0.8265,-0.8265 3.5064,-1.1688 3.5064,0 0,1.6529 -3.5064,5.1593 -3.5064,3.5064 0,-17.7137 2.6948,-2.6948 7.0128,-7.0128 1.653,-1.653 -1.6529,-5.3599 0,-7.0128 0.8265,-0.8265 2.68,0.8264 3.5064,0 0.8265,-0.8265 -0.5227,-2.461 0,-3.5064 1.4785,-2.9569 5.5344,-4.056 7.0128,-7.0129 0.5227,-1.0454 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8264 2.68,0.8265 3.5064,0 0.8265,-0.8264 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8264 2.68,0.8265 3.5064,0 0.8265,-0.8264 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8264 3.5064,-1.1688 3.5064,0 0,1.1688 -3.5064,1.1688 -3.5064,0 0,-1.6529 2.028,-2.7672 3.5064,-3.5064 2.0909,-1.0454 4.922,1.0454 7.0129,0 1.4784,-0.7392 2.0279,-2.7672 3.5064,-3.5064 1.3902,-0.6951 9.8023,0.7169 10.5192,0 0.8264,-0.8264 -0.8265,-2.6799 0,-3.5064 0.1127,-0.1127 9.6688,0 10.5192,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 2.461,0.5227 3.5064,0 1.4784,-0.7392 2.028,-2.7672 3.5064,-3.5064 1.0454,-0.5227 2.3376,0 3.5064,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 3.5064,-1.1688 3.5064,0 0,1.1688 -4.6752,0 -3.5064,0 3.5064,0 7.0128,0 10.5192,0 1.1688,0 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.1411,-0.1411 12.738,0 14.0256,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 3.5064,-1.1688 3.5064,0 0,1.1688 -4.6752,0 -3.5064,0 2.3376,0 4.6752,0 7.0128,0 1.1688,0 2.68,-0.8265 3.5064,0 0.8265,0.8265 -0.8264,2.6799 0,3.5064 0.8265,0.8265 2.68,-0.8265 3.5065,0 0.8264,0.8265 -0.5227,2.461 0,3.5064 0.7392,1.4784 2.7671,2.028 3.5064,3.5064 0.5227,1.0454 1.1688,3.5064 0,3.5064 -1.1688,0 -1.1688,-3.5064 0,-3.5064 1.6529,0 2.0279,2.7672 3.5064,3.5064 1.0454,0.5227 2.3376,0 3.5064,0 1.1688,0 2.3376,0 3.5064,0 7.0128,0 14.0256,0 21.0384,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 2.6799,0.8265 3.5064,0 0.8265,-0.8264 -0.8265,-2.6799 0,-3.5064 1.7532,-1.7532 8.766,1.7532 10.5192,0 0.3507,-0.3506 0.3507,-10.1685 0,-10.5192 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -1.0857,-1.0857 1.0858,-16.4463 0,-17.532 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8265 0,-2.3376 0,-3.5064 0,-1.1688 0,-2.3376 0,-3.5064 0,-7.0128 0,-14.0256 0,-21.0384 0,-1.1688 -0.8265,-2.68 0,-3.5064 0.8265,-0.8265 2.6799,0.8264 3.5064,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 0.8265,-0.8265 3.5064,-1.1689 3.5064,0 0,1.6529 -2.3376,2.3376 -3.5064,3.5064 -1.7919,13.5856 13.3179,-7.7206 17.532,-3.5064 0.8265,0.8264 -0.8264,2.6799 0,3.5064 1.653,1.6529 5.3599,-1.653 7.0128,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 1.653,1.6529 5.3599,-1.653 7.0128,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 0.8265,0.8264 2.68,-0.8265 3.5065,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 0.8264,0.8264 2.6799,-0.8265 3.5064,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 9.3504,0 -1.1688,-1.1688 3.5064,3.5064 0.8264,0.8264 2.6799,-0.8265 3.5064,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 0.8264,0.8264 2.6799,-0.8265 3.5064,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.6799,-0.8265 3.5064,0 0.8264,0.8265 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.6799,-0.8265 3.5064,0 0.8264,0.8265 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.6799,-0.8265 3.5064,0 0.8264,0.8265 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.6799,-0.8265 3.5064,0 0.8265,0.8265 -0.8265,2.6799 0,3.5064 1.1678,1.1678 5.845,-1.1678 7.0128,0 0.8265,0.8265 -0.8265,2.6799 0,3.5064 1.6529,1.6529 5.3599,-1.6529 7.0128,0 0.8265,0.8265 -0.8265,2.6799 0,3.5064 1.6529,1.6529 5.3599,-1.6529 7.0128,0 0.8265,0.8265 -0.8265,2.6799 0,3.5064 1.7532,1.7532 8.766,-1.7532 10.5192,0 0.8265,0.8265 -0.8264,2.6799 0,3.5064 1.653,1.653 5.3599,-1.6529 7.0128,0 0.8265,0.8265 -0.8264,2.68 0,3.5064 0.8265,0.8265 2.3376,0 3.5064,0 5.844,0 11.688,0 17.5321,0 1.1688,0 2.6799,-0.8264 3.5064,0 0.8264,0.8265 -0.8265,2.68 0,3.5064 1.7532,1.7532 8.766,-1.7532 10.5192,0 0.8264,0.8265 -0.8265,2.68 0,3.5064 1.0857,1.0858 16.4462,-1.0857 17.532,0 0.8265,0.8265 -0.8265,2.68 0,3.5064 1.7532,1.7532 8.766,-1.7532 10.5192,0 0.8265,0.8265 -0.8265,2.68 0,3.5064 0.8265,0.8265 2.3376,0 3.5064,0 1.1688,0 2.3376,0 3.5064,0 8.1816,0 16.3632,0 24.5448,0 1.1688,0 2.68,-0.8264 3.5064,0 0.8265,0.8265 -0.8264,2.68 0,3.5064 4.6752,4.6752 3.5064,-5.844 3.5064,3.5064 -3.5064,-4.6752 -7.0128,-9.3504 -10.5192,-14.0256 -1.1688,0 -2.6799,0.8265 -3.5064,0 -1.1689,-1.1689 1.169,-5.8438 0,-7.0128 -0.8264,-0.8264 -2.6799,0.8265 -3.5064,0 -0.8264,-0.8264 0,-2.3376 0,-3.5064 0,-1.1688 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.461,0.5227 3.5064,0 1.4785,-0.7392 2.3376,-2.3376 3.5064,-3.5064 1.1689,-1.1688 2.7672,-2.028 3.5065,-3.5064 0.5227,-1.0454 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8265 2.6799,0.8265 3.5064,0 0.8264,-0.8265 -0.8265,-2.68 0,-3.5064 0.8264,-0.8265 2.6799,0.8264 3.5064,0 0.8264,-0.8265 -0.8265,-2.68 0,-3.5064 0.8264,-0.8265 2.6799,0.8264 3.5064,0 0.8264,-0.8265 -0.8265,-2.68 0,-3.5064 0.8264,-0.8265 2.461,0.5227 3.5064,0 1.4784,-0.7392 2.0279,-2.7672 3.5064,-3.5064 2.0908,-1.0454 5.3598,1.6529 7.0128,0 0.8264,-0.8265 -0.8265,-2.68 0,-3.5064 0.8437,-0.8438 13.1818,0.8437 14.0256,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 0.8265,-0.8265 2.3376,0 3.5064,0 2.4388,0 16.264,-0.6341 17.532,0 1.4785,0.7392 2.028,2.7671 3.5064,3.5064 1.0454,0.5227 2.68,-0.8265 3.5064,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 1.1678,1.1678 5.845,-1.1678 7.0128,0 8.2232,8.2231 -10.8028,0 -3.5064,0 2.6136,0 4.5334,2.6799 7.0128,3.5064 1.1089,0.3696 2.68,-0.8265 3.5064,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 0.8265,0.8264 2.68,-0.8265 3.5064,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 1.1679,1.1678 5.845,-1.1678 7.0129,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.6799,-0.8265 3.5064,0 0.8264,0.8265 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.6799,-0.8265 3.5064,0 0.8264,0.8265 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.6799,-0.8265 3.5064,0 0.8264,0.8265 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.6799,-0.8265 3.5064,0 0.8264,0.8265 0,2.3376 0,3.5064 1.1688,0 2.461,-0.5227 3.5064,0 1.4784,0.7392 2.028,2.7672 3.5064,3.5064 1.0454,0.5227 4.3329,0.8265 3.5064,0 -1.8481,-1.848 -7.0128,-6.1199 -7.0128,-3.5064 0,19.268 6.4785,2.9721 10.5192,7.0128 0.8265,0.8265 -0.8265,2.6799 0,3.5064 0.8265,0.8265 2.3376,0 3.5064,0 5.844,0 11.688,0 17.532,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 2.68,0.8265 3.5064,0 0.8265,-0.8265 0,-2.3376 0,-3.5064 1.1688,0 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.3376,0 3.5064,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 4.6752,0 3.5064,0 -2.3376,0 -9.3504,0 -7.0128,0 3.5064,0 7.0128,0 10.5192,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 2.68,-0.8265 3.5065,0 0.8264,0.8265 -0.8265,2.6799 0,3.5064 1.1678,1.1678 5.845,-1.1678 7.0128,0 0.8264,0.8265 -0.8265,2.6799 0,3.5064 1.1689,1.169 5.8438,-1.1689 7.0128,0 0.8264,0.8265 -0.8265,2.6799 0,3.5064 1.7532,1.7532 8.766,-1.7532 10.5192,0 0.8264,0.8265 -0.8265,2.68 0,3.5064 0.1411,0.1411 12.7379,0 14.0256,0 1.1688,0 4.6752,0 3.5064,0 -2.3376,0 -9.3504,0 -7.0128,0 3.5064,0 7.0128,0 10.5192,0 1.1688,0 3.5064,-1.1688 3.5064,0 0,1.1688 -4.6752,0 -3.5064,0 2.3376,0 4.922,1.0454 7.0128,0 1.0454,-0.5227 -0.8265,-2.6799 0,-3.5064 1.1678,-1.1678 5.845,1.1678 7.0128,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.461,0.5227 3.5064,0 1.4785,-0.7392 2.3376,-2.3376 3.5064,-3.5064 1.1688,-1.1688 2.7672,-2.028 3.5064,-3.5064 0.5227,-1.0454 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5065,0 0.8264,-0.8265 -0.8265,-2.68 0,-3.5064 0.8264,-0.8265 2.6799,0.8264 3.5064,0 0.8264,-0.8265 -0.8265,-2.68 0,-3.5064 0.8264,-0.8265 2.461,0.5227 3.5064,0 1.4784,-0.7392 2.0279,-2.7672 3.5064,-3.5064 1.0454,-0.5227 3.5064,-1.1688 3.5064,0 0,1.1688 -3.5064,1.1688 -3.5064,0 0,-1.653 2.0279,-2.7672 3.5064,-3.5064 1.3902,-0.6952 9.8023,0.7168 10.5192,0 0.8264,-0.8265 -0.8265,-2.68 0,-3.5064 0.8264,-0.8265 2.3376,0 3.5064,0 5.844,0 11.688,0 17.532,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 2.6799,-0.8265 3.5064,0 0.8265,0.8264 -0.8265,2.6799 0,3.5064 0.8265,0.8264 2.3376,0 3.5064,0 1.1688,0 2.3376,0 3.5064,0 13.2464,0 -15.584,0 7.0128,0 1.1688,0 3.5064,-1.1688 3.5064,0 0,1.0477 -11.6292,-2.3083 0,3.5064 1.0454,0.5227 2.68,-0.8265 3.5064,0 1.653,1.6529 -1.6529,5.3598 0,7.0128 0.8265,0.8264 2.68,-0.8265 3.5064,0 1.653,1.6529 -1.6529,5.3599 0,7.0128 0.8265,0.8265 2.68,-0.8265 3.5064,0 0.8265,0.8265 -0.5227,2.461 0,3.5064 0.7393,1.4784 2.7672,2.028 3.5064,3.5064 1.0455,2.0908 -1.6529,5.3599 0,7.0128 0.8265,0.8265 2.68,-0.8265 3.5065,0 1.6529,1.6529 -1.653,5.3599 0,7.0128 0.8437,0.8438 13.1818,-0.8437 14.0256,0 4.6752,4.6752 -5.844,3.5064 3.5064,3.5064 -1.7919,-21.1653 13.3178,0.7078 17.532,-3.5064 0.8265,-0.8265 -0.8265,-2.6799 0,-3.5064 0.8265,-0.8265 2.6799,0.8265 3.5064,0 0.8265,-0.8265 -0.8265,-2.6799 0,-3.5064 0.8265,-0.8265 3.5064,-1.1688 3.5064,0 0,1.1688 -4.6752,0 -3.5064,0 0.9048,0 8.314,0 10.5192,0 1.1688,0 4.6752,0 3.5064,0 -13.6976,0 -4.5518,-1.0454 0,3.5064 0.8265,0.8265 -0.8265,2.6799 0,3.5064 0.8265,0.8265 2.461,-0.5227 3.5064,0 1.4784,0.7392 4.6752,2.3376 3.5064,3.5064 -1.1688,1.1688 -5.1593,-3.5064 -3.5064,-3.5064 2.6135,0 4.5334,2.6799 7.0128,3.5064 1.1088,0.3696 2.3376,0 3.5064,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 3.5064,-1.1688 3.5064,0 0,1.1688 -4.6752,0 -3.5064,0 3.5064,0 7.0128,0 10.5192,0 1.2877,0 13.8846,0.1411 14.0257,0 0.8264,-0.8265 -0.8265,-2.6799 0,-3.5064 1.1678,-1.1678 5.845,1.1678 7.0128,0 0.8264,-0.8265 -0.5227,-2.461 0,-3.5064 2.3379,-4.6758 4.6749,-2.337 7.0128,-7.0128 0.5227,-1.0454 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8265 2.6799,0.8265 3.5064,0 0.8264,-0.8265 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8265 2.6799,0.8265 3.5064,0 0.8265,-0.8265 -0.8265,-2.6799 0,-3.5064 0.8265,-0.8265 2.6799,0.8265 3.5064,0 0.8265,-0.8265 -0.8265,-2.6799 0,-3.5064 0.8265,-0.8265 2.6799,0.8265 3.5064,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 1.1689,-1.169 5.8439,1.1689 7.0128,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 0.8265,-0.8265 2.461,0.5227 3.5064,0 1.4784,-0.7392 2.028,-2.7672 3.5064,-3.5064 1.0454,-0.5227 2.6799,0.8264 3.5064,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 1.169,-1.169 5.8439,1.1689 7.0128,0 0.8265,-0.8265 -0.8264,-2.68 0,-3.5064 0.8265,-0.8265 2.68,0.8264 3.5064,0 0.8265,-0.8265 -0.8264,-2.68 0,-3.5064 1.1678,-1.1678 5.845,1.1678 7.0128,0 0.8265,-0.8265 -0.8264,-2.68 0,-3.5064 0.8265,-0.8265 2.68,0.8264 3.5064,0 0.8265,-0.8265 -0.8264,-2.68 0,-3.5064 0.8265,-0.8265 2.68,0.8264 3.5064,0 0.8265,-0.8265 -0.8264,-2.68 0,-3.5065 0.8438,-0.8437 13.1819,0.8438 14.0257,0 0.8264,-0.8264 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8264 2.3376,0 3.5064,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 4.6752,0 3.5064,0 -2.3376,0 -7.0128,2.3376 -7.0128,0 0,-4.4726 11.3809,-3.5064 14.0256,-3.5064 1.1688,0 4.6752,0 3.5064,0 -2.3376,0 -9.3504,0 -7.0128,0 3.5064,0 7.1927,-1.1088 10.5192,0 1.1088,0.3696 -0.8265,2.68 0,3.5064 0.8265,0.8265 2.6799,-0.8264 3.5064,0 0.8265,0.8265 -0.8265,2.68 0,3.5064 0.8265,0.8265 2.6799,-0.8264 3.5064,0 0.8265,0.8265 -0.5227,2.461 0,3.5065 0.7392,1.4784 2.3376,2.3376 3.5064,3.5064 1.1688,1.1688 2.028,2.7671 3.5064,3.5064 1.0454,0.5227 2.6799,-0.8265 3.5064,0 0.8265,0.8264 -0.8265,2.6799 0,3.5064 1.1678,1.1678 5.845,-1.1678 7.0128,0 0.8265,0.8264 -0.8265,2.6799 0,3.5064 1.169,1.1689 5.8439,-1.169 7.0128,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 1.0858,1.0857 16.4463,-1.0858 17.532,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 1.653,1.6529 4.922,-1.0454 7.0129,0 1.4784,0.7392 2.0279,2.7672 3.5064,3.5064 2.0908,1.0454 5.3598,-1.653 7.0128,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 1.6529,1.6529 5.3598,-1.653 7.0128,0 0.8264,0.8265 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.3376,0 3.5064,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 2.461,-0.5227 3.5064,0 0.9129,0.4564 4.2717,6.2474 7.0128,3.5064 0.8265,-0.8265 -0.5227,-2.461 0,-3.5064 7.2964,-14.5928 -0.2421,3.7485 7.0128,-3.5064 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 0.8265,-0.8265 2.3376,0 3.5064,0 1.1688,0 2.6799,-0.8265 3.5064,0 0.8265,0.8264 -0.8265,2.6799 0,3.5064 0.8265,0.8265 2.6799,-0.8265 3.5064,0 0.8265,0.8265 -0.8265,2.6799 0,3.5064 0.8265,0.8265 2.6799,-0.8265 3.5064,0 0.8265,0.8265 -0.8265,2.6799 0,3.5064 0.8265,0.8265 2.461,-0.5227 3.5064,0 1.4785,0.7392 2.028,2.7672 3.5064,3.5064 1.0454,0.5227 2.68,-0.8265 3.5064,0 0.8265,0.8265 0,2.3376 0,3.5064 1.1688,0 2.68,-0.8265 3.5064,0 0.8265,0.8265 -0.8264,2.6799 0,3.5064 0.8265,0.8265 2.68,-0.8265 3.5064,0 0.8265,0.8265 -0.8264,2.6799 0,3.5064 0.5157,0.5157 10.5192,-0.4125 10.5192,0 0,1.1688 -4.6752,0 -3.5064,0 2.3376,0 4.7952,0.7392 7.0129,0 2.3743,-0.7914 7.8407,-9.18 10.5192,-10.5192 1.0454,-0.5227 2.461,0.5227 3.5064,0 1.4784,-0.7392 2.0279,-2.7672 3.5064,-3.5064 1.0454,-0.5227 2.6799,0.8265 3.5064,0 0.8264,-0.8265 -0.8265,-2.6799 0,-3.5064 1.6529,-1.6529 5.3599,1.6529 7.0128,0 0.8265,-0.8265 -0.8265,-2.6799 0,-3.5064 0.8265,-0.8265 2.461,0.5227 3.5064,0 1.4784,-0.7392 2.028,-2.7672 3.5064,-3.5064 2.0908,-1.0454 5.3599,1.6529 7.0128,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 1.169,-1.169 5.8439,1.1689 7.0128,0 0.8265,-0.8265 -0.8265,-2.68 0,-3.5064 1.7532,-1.7532 8.766,1.7532 10.5192,0 0.8265,-0.8265 -0.8264,-2.68 0,-3.5064 0.8265,-0.8265 2.68,0.8264 3.5064,0 0.8265,-0.8265 -0.8264,-2.68 0,-3.5064 0.8265,-0.8265 2.68,0.8264 3.5064,0 0.8265,-0.8265 -0.8264,-2.68 0,-3.5064 0.8265,-0.8265 2.68,0.8264 3.5064,0 1.653,-1.653 -1.6529,-5.3599 0,-7.0128 0.8265,-0.8265 2.68,0.8264 3.5064,0 1.653,-1.653 -1.6529,-5.3599 0,-7.0129 0.8265,-0.8264 2.68,0.8265 3.5064,0 1.7532,-1.7532 -1.7532,-8.766 0,-10.5192 0.8265,-0.8264 2.68,0.8265 3.5064,0 0.8265,-0.8264 0,-2.3376 0,-3.5064 0,-1.1688 0.8265,-2.6799 0,-3.5064 -0.8264,-0.8264 -2.3376,0 -3.5064,0 10.5192,0 21.0385,0 31.5577,0 1.1688,0 2.6799,-0.8264 3.5064,0 0.8264,0.8265 -0.8265,2.68 0,3.5064 1.1689,1.169 5.8438,-1.1689 7.0128,0 0.8265,0.8265 -0.8265,2.68 0,3.5064 0.8265,0.8265 2.6799,-0.8264 3.5064,0 0.8265,0.8265 -0.8265,2.68 0,3.5064 0.8265,0.8265 2.461,-0.5227 3.5064,0 1.4784,0.7392 2.028,2.7672 3.5064,3.5064 1.0454,0.5227 2.6799,-0.8264 3.5064,0 0.8265,0.8265 -0.8265,2.68 0,3.5064 0.8265,0.8265 2.6799,-0.8264 3.5064,0 0.8265,0.8265 -0.8265,2.68 0,3.5064 0.8265,0.8265 2.6799,-0.8264 3.5064,0 0.8265,0.8265 -0.8265,2.68 0,3.5065 0.8265,0.8264 2.68,-0.8265 3.5064,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 0.8265,0.8264 2.68,-0.8265 3.5064,0 4.6752,4.6752 -5.844,3.5064 3.5064,3.5064 0.8504,0 10.4065,0.1127 10.5192,0 0.8265,-0.8265 -0.8264,-2.68 0,-3.5064 0.8265,-0.8265 2.68,0.8264 3.5064,0 0.8265,-0.8265 -0.8264,-2.68 0,-3.5064 0.8265,-0.8265 2.68,0.8264 3.5064,0 0.8265,-0.8265 -0.8264,-2.68 0,-3.5065 0.8265,-0.8264 2.68,0.8265 3.5065,0 0.8264,-0.8264 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8264 2.6799,0.8265 3.5064,0 0.8264,-0.8264 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8264 2.6799,0.8265 3.5064,0 0.8264,-0.8264 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8264 2.6799,0.8265 3.5064,0 0.8264,-0.8264 -0.8265,-2.6799 0,-3.5064 1.1678,-1.1678 5.845,1.1678 7.0128,0 0.8264,-0.8264 -0.8265,-2.6799 0,-3.5064 0.8264,-0.8264 2.3376,0 3.5064,0 1.1688,0 2.3376,0 3.5064,0 9.3504,0 18.7008,0 28.0512,0 0.8504,0 10.4065,0.1128 10.5192,0 0.8265,-0.8264 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8264 2.461,0.5227 3.5064,0 1.4785,-0.7392 2.028,-2.7672 3.5064,-3.5064 1.0454,-0.5227 2.68,0.8265 3.5064,0 0.8265,-0.8264 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 0,-2.3376 0,-3.5064 0,-1.1688 0,-2.3376 0,-3.5064 0,-1.1688 0,-4.6752 0,-3.5064 0,2.3376 0,9.3504 0,7.0128 0,-3.5064 -1.1088,-7.1927 0,-10.5192 0.1349,-0.4046 9.7101,0 10.5193,0 9.3504,0 -1.1688,-1.1688 3.5064,3.5064 1.1678,1.1678 5.845,-1.1678 7.0128,0 0.8264,0.8265 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.6799,-0.8265 3.5064,0 0.8264,0.8265 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.461,-0.5227 3.5064,0 1.4784,0.7392 2.028,2.7672 3.5064,3.5064 1.0454,0.5227 2.6799,-0.8265 3.5064,0 0.8265,0.8265 -0.8265,2.6799 0,3.5064 0.8265,0.8265 2.6799,-0.8265 3.5064,0 1.6529,1.6529 -1.6529,5.3599 0,7.0128 0.8265,0.8265 2.6799,-0.8264 3.5064,0 0.8265,0.8265 0,2.3376 0,3.5064 0,1.1688 1.1688,3.5064 0,3.5064 -1.1688,0 0,-4.6752 0,-3.5064 0,2.3376 0,4.6752 0,7.0128 0,1.1688 0,2.3376 0,3.5064 0,1.1688 0.5227,2.461 0,3.5064 -0.7392,1.4785 -2.7672,2.028 -3.5064,3.5064 -0.5336,1.0672 0,8.9401 0,10.5193 0,2.3376 0,4.6752 0,7.0128 0,1.1688 0,4.6752 0,3.5064 0,-2.3376 0,-9.3504 0,-7.0128 0,7.0128 0,14.0256 0,21.0384 0,1.1688 1.1688,3.5064 0,3.5064 -1.1688,0 0,-4.6752 0,-3.5064 0,2.3376 0,4.6752 0,7.0128 0,1.1688 -0.8265,2.6799 0,3.5064 0.8265,0.8265 2.6799,-0.8265 3.5064,0 1.6529,1.6529 -1.6529,5.3599 0,7.0128 0.8265,0.8265 2.6799,-0.8265 3.5064,0 0.8265,0.8265 -0.8265,2.6799 0,3.5064 0.8265,0.8265 2.6799,-0.8265 3.5064,0 0.8265,0.8265 -0.8265,2.6799 0,3.5064 0.8265,0.8265 2.6799,-0.8265 3.5064,0 0.8265,0.8265 -0.5227,2.461 0,3.5064 0.7392,1.4784 2.7672,2.028 3.5064,3.5064 2.3376,4.6752 -3.5064,3.5064 3.5064,3.5064 9.3504,0 -1.1688,-1.1688 3.5064,3.5064 0.8265,0.8265 2.68,-0.8264 3.5064,0 0.8265,0.8265 0,2.3376 0,3.5064 0,1.1688 0,2.3376 0,3.5064 0,14.0257 0,28.0513 0,42.0769 0,9.3504 -1.1688,-1.1688 3.5064,3.5064 0.1589,0.1589 0,15.8787 0,17.532 0,14.0256 0,28.0512 0,42.0769 0,1.1688 0,2.3376 0,3.5064 0,1.1688 -0.8264,2.6799 0,3.5064 0.8265,0.8264 2.68,-0.8265 3.5064,0 1.653,1.6529 -1.6529,5.3598 0,7.0128 0.8265,0.8264 2.68,-0.8265 3.5064,0 0.8438,0.8437 -0.8437,13.1818 0,14.0256 0.8265,0.8265 2.68,-0.8265 3.5064,0 0.8265,0.8265 -0.8264,2.6799 0,3.5064 0.8265,0.8265 2.68,-0.8265 3.5064,0 0.8265,0.8265 -0.5227,2.461 0,3.5064 0.7393,1.4784 2.7672,2.028 3.5064,3.5064 0.5228,1.0454 -0.8264,2.6799 0,3.5064 0.8265,0.8265 2.68,-0.8265 3.5065,0 0.8264,0.8265 -0.8265,2.6799 0,3.5064 0.8264,0.8265 2.6799,-0.8265 3.5064,0 1.6529,1.6529 -1.653,5.3599 0,7.0128 0.8264,0.8265 2.6799,-0.8265 3.5064,0 0.8264,0.8265 -0.8265,2.68 0,3.5064 0.8264,0.8265 2.6799,-0.8264 3.5064,0 0.8264,0.8265 -0.8265,2.68 0,3.5064 1.1678,1.1678 5.845,-1.1678 7.0128,0 0.8264,0.8265 -0.8265,2.68 0,3.5064 0.8264,0.8265 2.6799,-0.8264 3.5064,0 0.8264,0.8265 -0.8265,2.68 0,3.5064 1.1689,1.169 5.8438,-1.1689 7.0128,0 0.8265,0.8265 -0.8265,2.68 0,3.5064 1.7532,1.7532 8.766,-1.7532 10.5192,0 0.8265,0.8265 -0.8265,2.68 0,3.5064 1.6529,1.653 4.922,-1.0454 7.0128,0 1.4784,0.7393 2.028,2.7672 3.5064,3.5064 1.0454,0.5227 2.6799,-0.8264 3.5064,0 0.8265,0.8265 -0.8265,2.68 0,3.5064 0.8265,0.8265 3.5064,-1.1688 3.5064,0 0,1.1689 -3.5064,-1.1688 -3.5064,0 0,4.9793 8.0262,3.5065 10.5192,3.5065 1.1688,0 4.6752,0 3.5064,0 -2.3376,0 -9.3504,0 -7.0128,0 3.5064,0 7.0128,0 10.5192,0 1.1688,0 2.461,-0.5228 3.5064,0 1.4785,0.7392 2.028,2.7671 3.5064,3.5064 1.0454,0.5227 2.3376,0 3.5064,0 1.1688,0 2.3376,0 3.5064,0 5.8441,0 11.6881,0 17.5321,0 1.1688,0 2.3376,0 3.5064,0 1.1688,0 2.6799,-0.8265 3.5064,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 1.6529,1.6529 4.922,-1.0454 7.0128,0 1.4784,0.7392 2.028,2.7672 3.5064,3.5064 1.0454,0.5227 2.6799,-0.8265 3.5064,0 0.8265,0.8264 -0.8265,2.6799 0,3.5064 1.6529,1.6529 4.922,-1.0454 7.0128,0 1.4784,0.7392 2.028,2.7672 3.5064,3.5064 1.0454,0.5227 2.461,-0.5227 3.5064,0 1.4784,0.7392 2.028,2.7672 3.5064,3.5064 2.0908,1.0454 5.3599,-1.653 7.0128,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 1.169,1.1689 5.8439,-1.169 7.0128,0 0.8265,0.8264 -0.8264,2.6799 0,3.5064 0.8265,0.8265 2.68,-0.8265 3.5064,0 0.8265,0.8265 -0.8264,2.6799 0,3.5064 0.8265,0.8265 2.68,-0.8265 3.5064,0 0.8265,0.8265 -0.8264,2.6799 0,3.5064 0.8265,0.8265 2.68,-0.8265 3.5064,0 0.8265,0.8265 1.1688,3.5064 0,3.5064 -1.1688,0 -1.1688,-3.5064 0,-3.5064 1.653,0 2.7672,2.028 3.5064,3.5064 1.0455,2.0908 -1.6529,5.3599 0,7.0128 0.8265,0.8265 2.68,-0.8265 3.5065,0 1.7532,1.7532 -1.7533,8.766 0,10.5192 4.6752,4.6752 3.5064,-5.844 3.5064,3.5064 0,1.1688 0,4.6752 0,3.5064 0,-2.3376 0,-9.3504 0,-7.0128 0,5.844 0,11.688 0,17.532 -10.8484,-3.9317 -20.6229,-3.5064 -31.5577,-3.5064 -1.1688,0 -2.3376,0 -3.5064,0 -1.1688,0 -2.6799,-0.8264 -3.5064,0 -0.8265,0.8265 0.8265,2.68 0,3.5064 -1.1689,1.169 -5.8438,-1.1689 -7.0128,0 -0.8265,0.8265 0.8265,2.68 0,3.5064 -0.8265,0.8265 -2.461,-0.5227 -3.5064,0 -1.4784,0.7393 -2.028,2.7672 -3.5064,3.5064 -2.0908,1.0455 -5.3599,-1.6529 -7.0128,0 -4.6752,4.6753 5.844,3.5065 -3.5064,3.5065 -9.7099,0 2.6971,3.5064 -7.0128,3.5064 -1.1688,0 -3.5064,1.1688 -3.5064,0 0,-1.1688 3.5064,-1.1688 3.5064,0 0,1.6529 -2.028,2.7671 -3.5064,3.5064 -0.922,0.4609 -12.1921,0 -14.0256,0 -1.1688,0 -2.3376,0 -3.5065,0 -1.1688,0 -3.5064,1.1688 -3.5064,0 0,-1.1688 4.6753,0 3.5064,0 -5.844,0 -11.688,0 -17.532,0 -1.1688,0 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8264 0.8265,2.6799 0,3.5064 -0.8264,0.8264 -2.3376,0 -3.5064,0 -1.1688,0 -4.6752,0 -3.5064,0 2.3376,0 9.3504,0 7.0128,0 -3.5064,0 -7.0128,0 -10.5192,0 -1.1688,0 -2.6799,-0.8265 -3.5064,0 -0.8265,0.8264 0,2.3376 0,3.5064 0,1.6532 -0.1589,17.3731 0,17.532 0.8265,0.8265 2.6799,-0.8265 3.5064,0 0.1128,0.1128 0,9.6688 0,10.5192 0,1.1688 0,2.3376 0,3.5064 0,1.1688 -0.8265,2.6799 0,3.5064 0.8265,0.8265 2.6799,-0.8265 3.5064,0 0.1589,0.1589 0,15.8788 0,17.532 0,14.0256 0,28.0513 0,42.0769 0,1.1688 0,2.3376 0,3.5064 0,1.1688 0.8265,2.6799 0,3.5064 -0.8265,0.8265 -2.6799,-0.8265 -3.5064,0 -1.6529,1.6529 1.0454,4.922 0,7.0128 -0.7392,1.4784 -2.7672,2.028 -3.5064,3.5064 -0.5227,1.0454 0.5227,2.461 0,3.5064 -0.7392,1.4784 -2.7672,2.028 -3.5064,3.5064 -0.5227,1.0454 0.8265,2.6799 0,3.5064 -0.8265,0.8265 -2.6799,-0.8265 -3.5064,0 -0.8265,0.8265 0.8265,2.6799 0,3.5064 -0.8265,0.8265 -2.6799,-0.8265 -3.5064,0 -0.8265,0.8265 0.8265,2.6799 0,3.5064 -0.8265,0.8265 -2.6799,-0.8265 -3.5064,0 -0.8265,0.8265 0.8265,2.68 0,3.5064 -0.8265,0.8265 -2.461,-0.5227 -3.5064,0 -2.9569,1.4784 -4.056,5.5344 -7.0128,7.0128 -1.0454,0.5227 -2.68,-0.8264 -3.5064,0 -0.8265,0.8265 0.8264,2.68 0,3.5064 -0.8265,0.8265 -2.68,-0.8264 -3.5064,0 -0.8265,0.8265 0.8264,2.68 0,3.5064 -1.1678,1.1678 -5.845,-1.1678 -7.0128,0 -0.8265,0.8265 0,2.3376 0,3.5064 -1.1688,0 -2.68,-0.8264 -3.5064,0 -0.8265,0.8265 0.8264,2.68 0,3.5064 -0.8265,0.8265 -2.461,-0.5227 -3.5064,0 -1.4785,0.7393 -2.028,2.7672 -3.5064,3.5064 -2.0909,1.0455 -5.3599,-1.6529 -7.0129,0 -0.8264,0.8265 0,2.3377 0,3.5065 -1.1688,0 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8264 0.8265,2.6799 0,3.5064 -0.8264,0.8264 -2.461,-0.5227 -3.5064,0 -1.4784,0.7392 -2.0279,2.7671 -3.5064,3.5064 -1.0454,0.5227 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8264 0,2.3376 0,3.5064 -1.1688,0 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8264 0.8265,2.6799 0,3.5064 -1.6529,1.6529 -5.3598,-1.653 -7.0128,0 -0.8265,0.8264 0.8265,2.6799 0,3.5064 -1.1678,1.1678 -5.845,-1.1678 -7.0128,0 -0.8265,0.8264 0.8265,2.6799 0,3.5064 -1.1689,1.1689 -5.8439,-1.169 -7.0128,0 -0.8265,0.8264 0.8265,2.6799 0,3.5064 -1.1689,1.1689 -5.8439,-1.169 -7.0128,0 -0.8265,0.8264 0,2.3376 0,3.5064 -1.1688,0 -2.6799,-0.8265 -3.5064,0 -0.8265,0.8265 0.8265,2.6799 0,3.5064 -0.8265,0.8265 -2.6799,-0.8265 -3.5064,0 -0.8265,0.8265 1.1688,3.5064 0,3.5064 -1.1688,0 0,-4.6752 0,-3.5064 0,5.844 0,11.688 0,17.532 0,1.1688 0,2.3376 0,3.5064 0,1.1688 0.5227,2.461 0,3.5064 -0.7392,1.4784 -2.7672,2.028 -3.5064,3.5064 -0.5227,1.0454 0.8264,2.68 0,3.5064 -1.653,1.653 -5.3599,-1.6529 -7.0128,0 -0.8265,0.8265 0.8264,2.68 0,3.5064 -0.8265,0.8265 -2.68,-0.8264 -3.5064,0 -0.8265,0.8265 -1.1688,3.5064 0,3.5064 2.6851,0 9.2053,-12.7117 -3.5064,0 -0.8265,0.8265 0.8264,2.68 0,3.5064 -0.8265,0.8265 -2.3376,0 -3.5064,0 0,1.1688 0.5227,2.461 0,3.5064 -0.7393,1.4785 -2.7672,2.028 -3.5064,3.5064 -0.5227,1.0455 -0.8265,4.3329 0,3.5064 1.848,-1.848 6.1199,-7.0128 3.5064,-7.0128 -7.8393,0 -7.0128,6.4786 -7.0128,10.5193 0,1.1688 0.8264,2.6799 0,3.5064 -0.8265,0.8264 -2.68,-0.8265 -3.5065,0 -0.8264,0.8264 0.5228,2.461 0,3.5064 -0.7392,1.4784 -2.7671,2.0279 -3.5064,3.5064 -1.0454,2.0908 1.653,5.3598 0,7.0128 -0.8264,0.8264 -2.6799,-0.8265 -3.5064,0 -1.6529,1.6529 1.653,5.3598 0,7.0128 -0.8264,0.8264 -2.6799,-0.8265 -3.5064,0 -0.8437,0.8437 0.8438,13.1818 0,14.0256 -0.8264,0.8265 -2.6799,-0.8265 -3.5064,0 -1.7532,1.7532 1.7532,8.766 0,10.5192 -0.8264,0.8265 -2.6799,-0.8265 -3.5064,0 -1.7532,1.7532 1.7532,8.766 0,10.5192 -0.8264,0.8265 -2.6799,-0.8264 -3.5064,0 -0.8264,0.8265 0.8265,2.68 0,3.5064 -0.8264,0.8265 -2.6799,-0.8264 -3.5064,0 -0.8264,0.8265 0.8265,2.68 0,3.5064 -0.8437,0.8438 -13.1818,-0.8437 -14.0256,0 -0.8265,0.8265 0.8265,2.68 0,3.5064 -0.8265,0.8265 -2.3376,0 -3.5064,0 -5.844,0 -11.688,0 -17.532,0 -1.1688,0 -2.68,-0.8264 -3.5064,0 -0.8265,0.8265 0.8264,2.68 0,3.5064 -0.8265,0.8265 -2.3376,0 -3.5064,0 -4.2802,0 -8.0857,-1.3606 -10.5192,3.5064 -3.1168,6.2336 1.948,1.948 3.5064,3.5064 0.8264,0.8265 -0.8265,2.68 0,3.5065 0.8264,0.8264 2.6799,-0.8265 3.5064,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 0.8264,0.8264 2.6799,-0.8265 3.5064,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 0.8264,0.8264 2.6799,-0.8265 3.5064,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 0.8264,0.8264 2.6799,-0.8265 3.5064,0 0.8264,0.8264 -0.8265,2.6799 0,3.5064 0.8264,0.8264 2.6799,-0.8265 3.5064,0 0.8265,0.8264 -0.8265,2.6799 0,3.5064 0.8265,0.8264 2.6799,-0.8265 3.5064,0 0.8265,0.8264 0,2.3376 0,3.5064 0,1.1688 0.8265,2.6799 0,3.5064 -0.8265,0.8264 -2.6799,-0.8265 -3.5064,0 -0.8265,0.8264 0.8265,2.6799 0,3.5064 -1.169,1.1689 -5.8439,-1.169 -7.0128,0 -0.8265,0.8265 0.8264,2.6799 0,3.5064 -0.8265,0.8265 -2.68,-0.8265 -3.5064,0 -0.8265,0.8265 0.8264,2.6799 0,3.5064 -1.7532,1.7532 -8.766,-1.7532 -10.5192,0 -0.8265,0.8265 0.8264,2.6799 0,3.5064 -1.169,1.1689 -5.8439,-1.169 -7.0128,0 -0.8265,0.8265 0.8264,2.6799 0,3.5064 -1.653,1.6529 -5.3599,-1.6529 -7.0129,0 -0.8264,0.8265 0.8265,2.6799 0,3.5064 -1.6529,1.6529 -4.922,-1.0454 -7.0128,0 -1.4784,0.7392 -2.0279,2.7672 -3.5064,3.5064 -1.0454,0.5227 -2.3376,0 -3.5064,0 -1.1688,0 -2.3376,0 -3.5064,0 -1.1688,0 -4.6752,0 -3.5064,0 2.3376,0 9.3504,0 7.0128,0 -32.7264,0 -3.5064,3.5064 -10.5192,-3.5064 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8265 0.8265,-2.6799 0,-3.5064 -1.6529,-1.6529 -4.922,1.0454 -7.0128,0 -1.4784,-0.7392 -2.028,-2.7672 -3.5064,-3.5064 -1.0454,-0.5227 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8265 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -1.6529,-1.6529 1.6529,-5.3599 0,-7.0128 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8265 0.5227,-2.461 0,-3.5064 -0.7392,-1.4785 -2.7672,-2.028 -3.5064,-3.5064 -0.5227,-1.0454 0.8264,-2.68 0,-3.5064 -0.8265,-0.8265 -2.68,0.8264 -3.5064,0 -1.653,-1.653 1.6529,-5.3599 0,-7.0128 -0.8265,-0.8265 -2.68,0.8264 -3.5064,0 -1.653,-1.653 1.6529,-5.3599 0,-7.0128 -0.8265,-0.8265 -2.68,0.8264 -3.5064,0 -0.1589,-0.159 0,-15.8788 0,-17.5321 0,-1.1688 0.8264,-2.6799 0,-3.5064 -0.8265,-0.8264 -2.68,0.8265 -3.5064,0 -0.8265,-0.8264 0.8264,-2.6799 0,-3.5064 -0.8265,-0.8264 -2.68,0.8265 -3.5064,0 -0.8265,-0.8264 0.8264,-2.6799 0,-3.5064 -0.8265,-0.8264 -3.5064,1.1688 -3.5064,0 0,-1.1688 4.6752,0 3.5064,0 -10.5193,0 -21.0385,0 -31.5577,0 -1.1688,0 -2.3376,0 -3.5064,0 -1.1688,0 -2.6799,-0.8264 -3.5064,0 -0.8265,0.8265 0.8265,2.68 0,3.5064 -0.8265,0.8265 -2.3376,0 -3.5064,0 -1.6532,0 -17.3731,-0.1589 -17.532,0 -0.8265,0.8265 0.8265,2.68 0,3.5064 -0.9594,0.9595 -12.1234,-0.9511 -14.0256,0 -1.4785,0.7392 -2.028,2.7672 -3.5064,3.5064 -1.3903,0.6952 -9.8024,-0.7168 -10.5192,0 -0.8265,0.8265 0.8264,2.68 0,3.5064 -1.7532,1.7532 -8.766,-1.7532 -10.5193,0 -0.8264,0.8265 0.8265,2.68 0,3.5064 -0.8264,0.8265 -2.4609,-0.5227 -3.5064,0 -1.4784,0.7393 -2.0279,2.7672 -3.5064,3.5064 -1.0454,0.5228 -2.6799,-0.8264 -3.5064,0 -0.8264,0.8265 0.8265,2.68 0,3.5065 -0.8264,0.8264 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8264 0.8265,2.6799 0,3.5064 -0.8264,0.8264 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8264 0.8265,2.6799 0,3.5064 -0.8264,0.8264 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8264 0.8265,2.6799 0,3.5064 -0.8264,0.8264 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8264 0.8265,2.6799 0,3.5064 -1.6529,1.6529 -5.3599,-1.653 -7.0128,0 -0.8265,0.8264 0.8265,2.6799 0,3.5064 -0.8265,0.8264 -2.6799,-0.8265 -3.5064,0 -0.8265,0.8264 0.5227,2.461 0,3.5064 -0.7392,1.4784 -2.7672,2.0279 -3.5064,3.5064 -0.5227,1.0454 0.8265,2.6799 0,3.5064 -4.6752,4.6752 -3.5064,-5.844 -3.5064,3.5064'}),_react2.default.createElement('path',{d:'m 4691.5686,2994.1002 c 0,4.6752 -1.1339,9.49 0,14.0256 0.2835,1.1339 2.461,-0.5227 3.5064,0 1.4784,0.7392 2.028,2.7672 3.5064,3.5064 1.0454,0.5227 2.6799,-0.8265 3.5064,0 0.8265,0.8265 -0.8265,2.6799 0,3.5064 0.8265,0.8265 2.68,-0.8265 3.5064,0 0.8265,0.8265 -0.8264,2.6799 0,3.5064 0.8265,0.8265 2.68,-0.8265 3.5064,0 0.8265,0.8265 -0.8264,2.6799 0,3.5064 0.8265,0.8265 2.68,-0.8265 3.5064,0 0.8265,0.8265 -0.8264,2.68 0,3.5064 1.1678,1.1678 5.845,-1.1678 7.0128,0 0.8265,0.8265 -0.8264,2.68 0,3.5064 0.8265,0.8265 2.461,-0.5227 3.5064,0 1.4785,0.7392 2.028,2.7672 3.5064,3.5064 1.0455,0.5227 2.68,-0.8264 3.5064,0 1.653,1.653 -1.6529,5.3599 0,7.0128 0.8265,0.8265 2.68,-0.8264 3.5065,0 0.8264,0.8265 -0.8265,2.68 0,3.5064 0.8264,0.8265 2.6799,-0.8264 3.5064,0 1.6529,1.653 -1.653,5.3599 0,7.0128 0.8264,0.8265 2.6799,-0.8264 3.5064,0 0.8264,0.8265 -0.8265,2.68 0,3.5065 0.8264,0.8264 2.6799,-0.8265 3.5064,0 0.8264,0.8264 1.1688,3.5064 0,3.5064 -1.1688,0 0,-4.6752 0,-3.5064 0,2.3376 0,4.6752 0,7.0128 0,1.1688 0.8264,2.6799 0,3.5064 -0.8265,0.8264 -2.68,-0.8265 -3.5064,0 -0.8265,0.8264 0,2.3376 0,3.5064 -1.1688,0 -2.68,-0.8265 -3.5064,0 -0.8265,0.8264 0.8264,2.6799 0,3.5064 -0.8265,0.8264 -2.461,-0.5227 -3.5064,0 -1.4785,0.7392 -2.028,2.7672 -3.5065,3.5064 -2.0908,1.0454 -4.9219,-1.0454 -7.0128,0 -1.4784,0.7392 -2.0279,2.7672 -3.5064,3.5064 -2.2038,1.1019 -11.8217,-1.1019 -14.0256,0 -1.4784,0.7392 -2.028,2.7672 -3.5064,3.5064 -1.0454,0.5227 -2.461,-0.5227 -3.5064,0 -1.4784,0.7392 -2.028,2.7672 -3.5064,3.5064 -2.422,1.211 -16.3012,-1.2308 -17.532,0 -0.8265,0.8265 0.8265,2.6799 0,3.5064 -1.0858,1.0857 -16.4463,-1.0858 -17.532,0 -0.8265,0.8265 0.8264,2.6799 0,3.5064 -0.8265,0.8265 -2.3376,0 -3.5064,0 -5.844,0 -11.688,0 -17.5321,0 -1.1688,0 -2.3376,0 -3.5064,0 -1.1688,0 -2.6799,0.8265 -3.5064,0 -0.8264,-0.8265 0.8265,-2.6799 0,-3.5064 -1.1678,-1.1678 -5.845,1.1678 -7.0128,0 -0.1411,-0.1411 0,-12.7379 0,-14.0256 0,-1.1688 -0.8264,-2.68 0,-3.5064 0.8265,-0.8265 2.68,0.8264 3.5064,0 1.7532,-1.7532 -1.7532,-8.766 0,-10.5192 0.8265,-0.8265 2.68,0.8264 3.5064,0 1.653,-1.653 -2.3376,-7.0128 0,-7.0128 1.1688,0 1.1688,3.5064 0,3.5064 -1.6529,0 -2.0279,-2.7672 -3.5064,-3.5064 -1.0454,-0.5228 -2.3376,0 -3.5064,0 -5.844,0 -11.688,0 -17.532,0 -1.1688,0 -2.3376,0 -3.5064,0 -1.1688,0 -2.461,0.5227 -3.5064,0 -1.4784,-0.7393 -2.028,-2.7672 -3.5064,-3.5065 -1.0454,-0.5227 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8264 0.8265,-2.6799 0,-3.5064 -1.169,-1.1689 -5.8439,1.169 -7.0128,0 -0.8265,-0.8264 0.8265,-2.6799 0,-3.5064 -1.653,-1.6529 -5.3599,1.653 -7.0128,0 -0.8265,-0.8264 0.8264,-2.6799 0,-3.5064 -1.653,-1.6529 -4.922,1.0454 -7.0128,0 -1.4785,-0.7392 -2.028,-2.7672 -3.5064,-3.5064 -1.0454,-0.5227 -2.68,0.8265 -3.5064,0 -0.8265,-0.8264 0.8264,-2.6799 0,-3.5064 -1.169,-1.1689 -5.8439,1.169 -7.0128,0 -0.8265,-0.8264 0.8264,-2.6799 0,-3.5064 -0.8265,-0.8264 -2.68,0.8265 -3.5065,0 -0.8264,-0.8264 0.8265,-2.6799 0,-3.5064 -0.8264,-0.8264 -2.6799,0.8265 -3.5064,0 -0.8264,-0.8264 0.8265,-2.6799 0,-3.5064 -0.8264,-0.8265 -2.6799,0.8265 -3.5064,0 -0.8264,-0.8265 0,-2.3376 0,-3.5064 0,-1.2877 -0.1411,-13.8845 0,-14.0256 0.8265,-0.8265 2.68,0.8265 3.5064,0 1.653,-1.6529 -1.6529,-5.3599 0,-7.0128 0.8265,-0.8265 2.68,0.8265 3.5064,0 1.653,-1.6529 -1.6529,-5.3599 0,-7.0128 0.8265,-0.8265 2.68,0.8264 3.5065,0 1.6529,-1.653 -1.653,-5.3599 0,-7.0128 0.8264,-0.8265 2.6799,0.8264 3.5064,0 0.8264,-0.8265 0,-2.3376 0,-3.5064 0,-0.8504 0.1127,-10.4065 0,-10.5192 -8.2232,-8.2232 0,10.8028 0,3.5064 0,-2.9796 -7.4866,-12.5093 -10.5193,-14.0257 -1.8689,-0.9344 -5.1439,0.9345 -7.0128,0 -1.4784,-0.7392 -2.0279,-2.7671 -3.5064,-3.5064 -2.0908,-1.0454 -5.3598,1.653 -7.0128,0 -0.8264,-0.8264 0.8265,-2.6799 0,-3.5064 -0.8264,-0.8264 -2.461,0.5227 -3.5064,0 -1.4784,-0.7392 -2.028,-2.7672 -3.5064,-3.5064 -1.0454,-0.5227 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8264 0.5227,-2.461 0,-3.5064 -7.2964,-14.5928 0.2421,3.7485 -7.0128,-3.5064 -0.8265,-0.8264 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8264 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8264 0.8265,-2.6799 0,-3.5064 -1.169,-1.1689 -5.8439,1.169 -7.0128,0 -0.8265,-0.8265 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8265 0.8265,-2.6799 0,-3.5064 -1.169,-1.1689 -5.8439,1.169 -7.0128,0 -1.653,-1.6529 1.6529,-5.3599 0,-7.0128 -0.8265,-0.8265 -2.68,0.8265 -3.5064,0 -0.8265,-0.8265 0,-2.3376 0,-3.5064 0,-5.844 0,-11.688 0,-17.532 0,-1.1688 0.8264,-2.68 0,-3.5064 -0.8265,-0.8265 -2.68,0.8264 -3.5064,0 -0.8265,-0.8265 0,-2.3376 0,-3.5064 0,-8.1816 0,-16.3633 0,-24.5449 0,-1.1688 0,-2.3376 0,-3.5064 0,-1.1688 0.8264,-2.6799 0,-3.5064 -0.8265,-0.8264 -2.68,0.8265 -3.5064,0 -0.3507,-0.3506 -0.3507,-10.1685 0,-10.5192 4.6752,-4.6752 3.5064,5.844 3.5064,-3.5064'}),_react2.default.createElement('path',{d:'m 4488.1972,2846.8312 c -12.0074,3.6629 -10.8382,-10.6787 -17.5321,-14.0256 -1.0454,-0.5227 -2.6799,0.8265 -3.5064,0 -0.8264,-0.8265 0.8265,-2.6799 0,-3.5064 -1.7532,-1.7532 -8.766,1.7532 -10.5192,0 -0.8264,-0.8265 0.8265,-2.6799 0,-3.5064 -1.1678,-1.1678 -5.845,1.1678 -7.0128,0 -0.8264,-0.8265 0.8265,-2.6799 0,-3.5064 -0.8437,-0.8438 -13.1818,0.8437 -14.0256,0 -0.8265,-0.8265 0.8265,-2.68 0,-3.5064 -0.8265,-0.8265 -2.3376,0 -3.5064,0 -1.1688,0 -2.3376,0 -3.5064,0 -2.3379,0 -4.6749,0 -7.0128,0 -1.1688,0 -3.5064,1.1688 -3.5064,0 0,-1.1688 2.6799,-0.8265 3.5064,0 0.8265,0.8264 -0.8265,2.6799 0,3.5064 0.8265,0.8265 2.6799,-0.8265 3.5064,0 0.8265,0.8265 0,2.3376 0,3.5064 0,1.1688 0,2.3376 0,3.5064 0,9.3504 -1.1688,-1.1688 3.5064,3.5064 1.7532,1.7532 -1.7532,8.766 0,10.5192 4.6752,4.6752 3.5064,-5.844 3.5064,3.5064 0,2.3376 0,4.6752 0,7.0128 0,1.1688 0,4.6752 0,3.5064 0,-2.3376 0,-9.3504 0,-7.0128 0,24.87 2.4794,2.054 -3.5064,14.0256 -1.4026,2.8052 1.4026,7.7141 0,10.5192 -0.7392,1.4785 -2.7672,2.028 -3.5064,3.5064 -0.634,1.2681 0,15.0932 0,17.5321 0,1.2876 -0.1411,13.8845 0,14.0256 0.8265,0.8265 2.6799,-0.8265 3.5064,0 0.8438,0.8437 -0.8437,13.1819 0,14.0256 0.8265,0.8265 2.6799,-0.8265 3.5064,0 1.6529,1.6529 -1.0454,4.922 0,7.0128 0.7392,1.4784 2.7672,2.028 3.5064,3.5064 0.461,0.922 0,12.1921 0,14.0256 0,1.8336 0.461,13.1037 0,14.0256 -0.7392,1.4785 -2.7672,2.028 -3.5064,3.5065 -1.0646,2.1291 1.0646,18.9092 0,21.0384 -0.7392,1.4784 -2.7672,2.0279 -3.5064,3.5064 -1.211,2.422 1.2308,16.3012 0,17.532 -0.8265,0.8265 -2.6799,-0.8265 -3.5064,0 -1.7532,1.7532 1.7532,8.766 0,10.5192 -4.6752,4.6752 -3.5064,-5.844 -3.5064,3.5064 0,2.3376 0,9.3504 0,7.0128 0,-5.555 1.0454,-13.6554 -3.5064,0 -0.3696,1.1088 0.8265,2.68 0,3.5064 -0.8265,0.8265 -2.6799,-0.8264 -3.5064,0 -1.6529,1.653 1.6529,5.3599 0,7.0128 -0.8265,0.8265 -2.68,-0.8264 -3.5064,0 -0.8265,0.8265 0.8264,2.68 0,3.5064 -0.8265,0.8265 -2.68,-0.8264 -3.5064,0 -0.8265,0.8265 0.5227,2.461 0,3.5064 -0.7392,1.4785 -2.7672,2.028 -3.5064,3.5064 -0.5227,1.0455 0.8264,2.68 0,3.5065 -0.8265,0.8264 -2.461,-0.5228 -3.5064,0 -14.5928,7.2964 3.7484,-0.2421 -3.5064,7.0128 -0.8265,0.8264 -2.68,-0.8265 -3.5064,0 -0.8265,0.8264 0.8264,2.6799 0,3.5064 -0.8265,0.8264 -2.68,-0.8265 -3.5064,0 -0.8265,0.8264 0.8264,2.6799 0,3.5064 -0.8265,0.8264 -2.68,-0.8265 -3.5064,0 -0.8265,0.8264 0.5227,2.461 0,3.5064 -0.7393,1.4784 -2.7672,2.0279 -3.5065,3.5064 -0.5227,1.0454 0.8265,2.6799 0,3.5064 -0.8264,0.8264 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8264 0.8265,2.6799 0,3.5064 -0.8264,0.8265 -2.6799,-0.8265 -3.5064,0 -1.6529,1.6529 1.653,5.3599 0,7.0128 -0.8264,0.8265 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8265 0.8265,2.6799 0,3.5064 -0.8264,0.8265 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8265 0.8265,2.6799 0,3.5064 -0.8264,0.8265 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8265 0.8265,2.6799 0,3.5064 -0.8264,0.8265 -2.6799,-0.8265 -3.5064,0 -1.6529,1.6529 1.653,5.3599 0,7.0128 -0.8264,0.8265 -2.6799,-0.8265 -3.5064,0 -1.7532,1.7532 1.7532,8.766 0,10.5192 -0.8264,0.8265 -2.6799,-0.8264 -3.5064,0 -1.7532,1.7532 1.7532,8.766 0,10.5192 -0.8265,0.8265 -2.6799,-0.8264 -3.5064,0 -0.8265,0.8265 0,2.3376 0,3.5064 0,1.1688 0,2.3376 0,3.5064 0,10.5193 0,21.0385 0,31.5577 0,1.6532 0.1589,17.3731 0,17.532 -0.8265,0.8265 -2.6799,-0.8265 -3.5064,0 -0.8265,0.8265 0,2.3376 0,3.5064 0,1.1688 0,2.3376 0,3.5064 0,12.8568 0,25.7136 0,38.5705 -3.5064,-3.5064 -8.3016,-6.084 -10.5192,-10.5193 -0.7392,-1.4784 2.7672,-2.0279 3.5064,-3.5064 0.3596,-0.7192 0.4945,-10.0247 0,-10.5192 -0.8265,-0.8264 -2.6799,0.8265 -3.5064,0 -7.2549,-7.2548 11.0864,0.2836 -3.5064,-7.0128 -1.0454,-0.5227 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8265 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.3376,0 -3.5064,0 -1.1688,0 -2.3376,0 -3.5064,0 -9.3504,0 1.1688,1.1688 -3.5064,-3.5064 -1.7532,-1.7532 -8.766,1.7532 -10.5192,0 -0.8265,-0.8265 0.8264,-2.6799 0,-3.5064 -1.1678,-1.1678 -5.845,1.1678 -7.0128,0 -0.8265,-0.8265 0.8264,-2.6799 0,-3.5064 -1.169,-1.1689 -5.8439,1.169 -7.0129,0 -0.8264,-0.8265 0.8265,-2.6799 0,-3.5064 -1.7532,-1.7532 -8.766,1.7532 -10.5192,0 -0.8264,-0.8265 0.8265,-2.6799 0,-3.5064 -1.1689,-1.169 -5.8438,1.1689 -7.0128,0 -0.8264,-0.8265 0.8265,-2.6799 0,-3.5064 -1.1689,-1.169 -5.8438,1.1689 -7.0128,0 -0.8264,-0.8265 0.8265,-2.6799 0,-3.5064 -1.7532,-1.7532 -8.766,1.7532 -10.5192,0 -0.8265,-0.8265 0.8265,-2.68 0,-3.5064 -1.6529,-1.653 -4.922,1.0454 -7.0128,0 -1.4784,-0.7392 -2.028,-2.7672 -3.5064,-3.5064 -2.0908,-1.0454 -5.3599,1.6529 -7.0128,0 -0.8265,-0.8265 0.8265,-2.68 0,-3.5064 -0.8265,-0.8265 -3.5064,1.1688 -3.5064,0 0,-1.1688 4.3329,0.8264 3.5064,0 -1.8481,-1.8481 -4.5334,-2.68 -7.0128,-3.5064 -1.1088,-0.3696 -2.68,0.8264 -3.5064,0 -0.8265,-0.8265 0.8264,-2.68 0,-3.5064 -0.8265,-0.8265 -2.68,0.8264 -3.5064,0 -0.8265,-0.8265 0.8264,-2.68 0,-3.5064 -0.8265,-0.8265 -2.68,0.8264 -3.5064,0 -0.8265,-0.8265 0.8264,-2.68 0,-3.5064 -0.8265,-0.8265 -2.461,0.5227 -3.5064,0 -1.4785,-0.7393 -2.028,-2.7672 -3.5064,-3.5064 -1.0454,-0.5228 -2.68,0.8264 -3.5064,0 -0.8265,-0.8265 0.8264,-2.68 0,-3.5065 -1.169,-1.1689 -5.8439,1.169 -7.0129,0 -0.8264,-0.8264 0.8265,-2.6799 0,-3.5064 -1.7532,-1.7532 -8.766,1.7532 -10.5192,0 -0.8264,-0.8264 0.8265,-2.6799 0,-3.5064 -1.7532,-1.7532 -8.766,1.7532 -10.5192,0 -0.8264,-0.8264 0.8265,-2.6799 0,-3.5064 -0.8264,-0.8264 -2.461,0.5227 -3.5064,0 -1.4784,-0.7392 -2.028,-2.7672 -3.5064,-3.5064 -1.0454,-0.5227 -2.3376,0 -3.5064,0 -1.1688,-1.1688 -2.028,-2.7672 -3.5064,-3.5064 -2.0908,-1.0454 -5.3599,1.653 -7.0128,0 -0.8265,-0.8264 0.8265,-2.6799 0,-3.5064 -1.6529,-1.6529 -4.922,1.0454 -7.0128,0 -1.4784,-0.7392 -2.028,-2.7672 -3.5064,-3.5064 -2.0908,-1.0454 -5.3599,1.653 -7.0128,0 -0.8265,-0.8264 0.8264,-2.6799 0,-3.5064 -0.8438,-0.8437 -13.1819,0.8438 -14.0256,0 -0.8265,-0.8265 0.8264,-2.6799 0,-3.5064 -1.169,-1.1689 -5.8439,1.169 -7.0128,0 -0.8265,-0.8265 0.8264,-2.6799 0,-3.5064 -1.1679,-1.1678 -5.845,1.1678 -7.0129,0 -0.8264,-0.8265 0.8265,-2.6799 0,-3.5064 -1.1689,-1.1689 -5.8438,1.169 -7.0128,0 -0.8264,-0.8265 0.8265,-2.6799 0,-3.5064 -1.1678,-1.1678 -5.845,1.1678 -7.0128,0 -0.8264,-0.8265 0.8265,-2.6799 0,-3.5064 -0.7168,-0.7168 -9.1289,0.6951 -10.5192,0 -1.4784,-0.7392 -2.028,-2.7672 -3.5064,-3.5064 -2.0908,-1.0454 -4.922,1.0454 -7.0128,0 -1.4784,-0.7392 -2.028,-2.7672 -3.5064,-3.5064 -1.0454,-0.5227 -2.6799,0.8265 -3.5064,0 -4.6752,-4.6752 5.844,-3.5064 -3.5064,-3.5064 -8.1816,0 -16.3632,0 -24.5448,0 -1.1688,0 -2.68,-0.8265 -3.5064,0 -0.8265,0.8265 0.8264,2.6799 0,3.5064 -0.8265,0.8265 -2.3376,0 -3.5064,0 -5.844,0 -11.6881,0 -17.5321,0 -1.1688,0 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8265 0.8265,2.6799 0,3.5064 -0.1127,0.1128 -9.6688,0 -10.5192,0 -1.1688,0 -2.3376,0 -3.5064,0 -1.1688,0 -2.6799,-0.8265 -3.5064,0 -0.8265,0.8265 0.8265,2.6799 0,3.5064 -0.8265,0.8265 -2.3376,0 -3.5064,0 -1.1688,0 -2.3376,0 -3.5064,0 -2.3376,0 -4.6752,0 -7.0128,0 -1.1688,0 -3.5064,1.1688 -3.5064,0 0,-1.1688 3.5064,1.1688 3.5064,0 0,-7.2964 -4.9173,-1.4109 -7.0128,-3.5064 -1.7532,-1.7532 1.7532,-8.766 0,-10.5192 -0.8265,-0.8265 -2.6799,0.8264 -3.5064,0 -0.8265,-0.8265 0,-2.3376 0,-3.5064 0,-1.1688 -1.1688,-3.5064 0,-3.5064 1.1688,0 0,4.6752 0,3.5064 0,-5.0176 1.6529,-7.9396 -3.5064,-10.5192 -2.0908,-1.0454 -5.3599,1.6529 -7.0128,0 -0.8265,-0.8265 0.8264,-2.68 0,-3.5064 -0.8265,-0.8265 -2.461,0.5227 -3.5064,0 -1.4785,-0.7393 -2.028,-2.7672 -3.5064,-3.5064 -1.0454,-0.5227 -2.68,0.8264 -3.5064,0 -0.8265,-0.8265 0.8264,-2.68 0,-3.5064 -0.8265,-0.8265 -2.68,0.8264 -3.5064,0 -0.8265,-0.8265 0.8264,-2.68 0,-3.5065 -1.653,-1.6529 -5.3599,1.653 -7.0129,0 -0.8264,-0.8264 0.8265,-2.6799 0,-3.5064 -0.8264,-0.8264 -2.3376,0 -3.5064,0 -1.1688,0 -2.3376,0 -3.5064,0 -1.1688,0 -3.5064,1.1688 -3.5064,0 0,-1.1688 4.6752,0 3.5064,0 -2.3376,0 -4.922,1.0455 -7.0128,0 -1.0454,-0.5227 0.8265,-2.6799 0,-3.5064 -0.8264,-0.8264 -2.6799,0.8265 -3.5064,0 -0.8264,-0.8264 0.5227,-2.461 0,-3.5064 -0.7392,-1.4784 -2.7672,-2.0279 -3.5064,-3.5064 -0.5227,-1.0454 0,-2.3376 0,-3.5064 0,-1.1688 0,-2.3376 0,-3.5064 0,-1.1688 -1.1688,-3.5064 0,-3.5064 1.1688,0 0,4.6752 0,3.5064 0,-2.3376 0.7392,-4.7951 0,-7.0128 -0.5227,-1.5681 -2.7672,-2.028 -3.5064,-3.5064 -0.092,-0.1834 -0.092,-10.3358 0,-10.5192 0.7392,-1.4784 2.7672,-2.028 3.5064,-3.5064 1.0454,-2.0908 -1.6529,-5.3599 0,-7.0128 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.6799 0,-3.5064 0.8265,-0.8265 2.68,0.8265 3.5064,0 0.8265,-0.8265 -0.8264,-2.68 0,-3.5064 0.8265,-0.8265 2.68,0.8264 3.5064,0 1.653,-1.653 -1.6529,-5.3599 0,-7.0128 0.8265,-0.8265 2.68,0.8264 3.5064,0 0.8265,-0.8265 -1.1688,-3.5064 0,-3.5064 1.1688,0 0,4.6752 0,3.5064 0,-19.8697 2.3376,-1.1688 -3.5064,-7.0128 -0.8264,-0.8265 0.8265,-2.68 0,-3.5064 -0.8264,-0.8265 -2.6799,0.8264 -3.5064,0 -1.6529,-1.653 1.653,-5.3599 0,-7.0128 -0.8264,-0.8265 -2.6799,0.8264 -3.5064,0 -0.8264,-0.8265 0.8265,-2.68 0,-3.5065 -0.8264,-0.8264 -2.6799,0.8265 -3.5064,0 -1.6529,-1.6529 1.0454,-4.9219 0,-7.0128 -0.7392,-1.4784 -2.7672,-2.0279 -3.5064,-3.5064 -0.5227,-1.0454 0.8265,-2.6799 0,-3.5064 -0.8264,-0.8264 -2.6799,0.8265 -3.5064,0 -1.6529,-1.6529 1.653,-5.3598 0,-7.0128 -0.8265,-0.8264 -2.6799,0.8265 -3.5064,0 -0.8437,-0.8437 0.8438,-13.1818 0,-14.0256 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8265 0,-2.3376 0,-3.5064 0,-1.1688 0,-4.6752 0,-3.5064 0,2.3376 0,4.6752 0,7.0128 -1.1688,3.5064 -2.61,6.9335 -3.5064,10.5192 -0.5669,2.2678 0,4.6752 0,7.0128 0,4.6752 0,9.3504 0,14.0256 0,1.1688 0.8265,2.68 0,3.5064 -0.8265,0.8265 -2.6799,-0.8264 -3.5064,0 -0.8265,0.8265 1.1688,3.5065 0,3.5065 -1.1688,0 0,-4.6753 0,-3.5065 0,3.5065 0,7.0129 0,10.5193 0,1.1688 0.8265,2.6799 0,3.5064 -0.8265,0.8264 -2.6799,-0.8265 -3.5064,0 -0.8265,0.8264 1.1688,3.5064 0,3.5064 -1.1688,0 0,-4.6752 0,-3.5064 0,2.3376 1.0454,4.922 0,7.0128 -0.5227,1.0454 -2.6799,-0.8265 -3.5064,0 -0.8265,0.8264 0.5227,2.461 0,3.5064 -0.7392,1.4784 -2.3376,4.6752 -3.5064,3.5064 -1.1688,-1.1688 5.1593,-3.5064 3.5064,-3.5064 -17.7137,0 -2.6948,2.6947 -7.0128,7.0128 -0.8265,0.8265 -2.68,-0.8265 -3.5064,0 -0.8265,0.8265 0.8264,2.6799 0,3.5064 -0.8265,0.8265 -2.68,-0.8265 -3.5064,0 -0.8265,0.8265 0.8264,2.6799 0,3.5064 -0.8265,0.8265 -2.68,-0.8265 -3.5064,0 -0.8265,0.8265 0.8264,2.6799 0,3.5064 -0.8265,0.8265 -2.68,-0.8265 -3.5064,0 -0.8265,0.8265 0.8264,2.6799 0,3.5064 -1.653,1.6529 -5.3599,-1.6529 -7.0128,0 -0.8265,0.8265 0.8264,2.6799 0,3.5064 -0.8265,0.8265 -2.68,-0.8265 -3.5064,0 -0.8265,0.8265 0.8264,2.6799 0,3.5064 -0.3507,0.3506 -10.1686,0.3506 -10.5193,0 -0.8264,-0.8265 0.8265,-2.6799 0,-3.5064 -0.8264,-0.8265 -2.6799,0.8265 -3.5064,0 -1.6529,-1.6529 1.653,-5.3599 0,-7.0128 -0.8264,-0.8265 -2.6799,0.8265 -3.5064,0 -0.8264,-0.8265 0.5227,-2.461 0,-3.5064 -0.7392,-1.4784 -2.7672,-2.028 -3.5064,-3.5064 -0.5227,-1.0454 0.8265,-2.6799 0,-3.5064 -0.8264,-0.8265 -2.6799,0.8265 -3.5064,0 -1.6529,-1.653 1.653,-5.3599 0,-7.0128 -0.8264,-0.8265 -2.6799,0.8264 -3.5064,0 -1.6529,-1.653 1.653,-5.3599 0,-7.0128 -0.8264,-0.8265 -2.6799,0.8264 -3.5064,0 -0.8264,-0.8265 0.8265,-2.68 0,-3.5064 -0.8264,-0.8265 -2.6799,0.8264 -3.5064,0 -0.8265,-0.8265 0.8265,-2.68 0,-3.5064 -1.6529,-1.653 -5.3599,1.6529 -7.0128,0 -0.8265,-0.8265 0.8265,-2.68 0,-3.5064 -0.8265,-0.8265 -2.461,0.5227 -3.5064,0 -1.4784,-0.7393 -2.028,-2.7672 -3.5064,-3.5064 -1.0454,-0.5228 -2.6799,0.8264 -3.5064,0 -0.8265,-0.8265 0.8265,-2.68 0,-3.5065 -1.169,-1.1689 -5.8439,1.169 -7.0128,0 -0.8265,-0.8264 0.8265,-2.6799 0,-3.5064 -0.1589,-0.1589 -15.8788,0 -17.532,0 -7.0128,0 -14.0257,0 -21.0385,0 -2.3376,0 -9.3504,0 -7.0128,0 2.3376,0 9.3504,0 7.0128,0 -3.5064,0 -7.1927,-1.1088 -10.5192,0 -1.1088,0.3696 0.5227,2.461 0,3.5064 -4.3328,8.6658 -3.5064,-1.2103 -3.5064,7.0129 -7.0128,-4.6752 -14.0256,-9.3504 -21.0384,-14.0257 0,-1.1688 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8264 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8264 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8264 -2.6799,0.8265 -3.5064,0 -1.6529,-1.6529 1.6529,-5.3598 0,-7.0128 -0.8265,-0.8264 -2.6799,0.8265 -3.5064,0 -1.6529,-1.6529 1.6529,-5.3599 0,-7.0128 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -1.6529,-1.6529 1.6529,-5.3599 0,-7.0128 -0.8265,-0.8265 -2.68,0.8265 -3.5064,0 -1.7532,-1.7532 1.7532,-8.766 0,-10.5192 -0.8265,-0.8265 -2.68,0.8265 -3.5064,0 -1.7532,-1.7532 1.7532,-8.766 0,-10.5192 -0.8265,-0.8265 -2.68,0.8264 -3.5064,0 -0.8265,-0.8265 0,-2.3376 0,-3.5064 0,-1.6533 0.1589,-17.3731 0,-17.532 -0.8265,-0.8265 -2.68,0.8264 -3.5064,0 -0.1411,-0.1411 0,-12.738 0,-14.0257 0,-9.3504 0,-18.7008 0,-28.0512 0,-2.3376 0,-4.6752 0,-7.0128 0,-1.1688 0,-4.6752 0,-3.5064 0,2.3376 0,9.3504 0,7.0128 0,-3.5064 1.1088,-7.1927 0,-10.5192 -0.3696,-1.1088 -3.5064,1.1688 -3.5064,0 0,-4.9674 16.3632,9.9348 -3.5064,0 -1.0454,-0.5227 0.8264,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.3376,0 -3.5064,0 -1.2877,0 -13.8846,-0.1411 -14.0257,0 -1.6529,1.6529 1.653,5.3599 0,7.0128 -0.8264,0.8265 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8265 0.5227,2.461 0,3.5064 -0.7392,1.4784 -2.7672,2.028 -3.5064,3.5064 -0.5227,1.0454 0.8265,2.6799 0,3.5064 -0.8264,0.8265 -2.6799,-0.8265 -3.5064,0 -0.8264,0.8265 0.8265,2.6799 0,3.5064 -1.6529,1.6529 -5.3598,-1.6529 -7.0128,0 -0.8264,0.8265 0.8265,2.6799 0,3.5064 -0.3506,0.3507 -10.1686,0.3507 -10.5192,0 -0.8265,-0.8265 0.8265,-2.6799 0,-3.5064 -1.6529,-1.6529 -5.3599,1.6529 -7.0128,0 -0.8265,-0.8265 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8265 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8265 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.6799,0.8265 -3.5064,0 -0.8265,-0.8265 0.8265,-2.6799 0,-3.5064 -1.6529,-1.6529 -5.3599,1.6529 -7.0128,0 -0.8265,-0.8265 0.8264,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.68,0.8265 -3.5064,0 -0.8265,-0.8265 0.8264,-2.6799 0,-3.5064 -0.8265,-0.8265 -2.68,0.8265 -3.5064,0 -0.8265,-0.8265 0.8264,-2.6799 0,-3.5064 -1.653,-1.6529 -7.0128,2.3376 -7.0128,0 0,-4.9674 16.3632,9.9348 -3.5064,0 -9.3505,-4.6752 10.5192,-3.5064 -3.5064,-3.5064 -8.1817,0 -16.3633,0 -24.5449,0 -1.1688,0 -2.6799,0.8264 -3.5064,0 -0.8264,-0.8265 0.8265,-2.68 0,-3.5064 -0.8264,-0.8265 -2.3376,0 -3.5064,0 -1.1688,0 -2.3376,0 -3.5064,0 -1.1688,0 -4.6752,0 -3.5064,0 2.3376,0 9.3504,0 7.0128,0 -4.6752,0 -9.3504,0 -14.0256,0 -1.1688,0 -2.3376,0 -3.5064,0 -1.1688,0 -3.5064,1.1688 -3.5064,0 0,-1.1688 3.5064,1.1688 3.5064,0 0,-1.653 -3.5064,-1.8535 -3.5064,-3.5064 0,-1.653 2.7672,-2.028 3.5064,-3.5064 0.5227,-1.0454 0,-2.3376 0,-3.5064 0,-1.1688 0,-2.3376 0,-3.5064 0,-7.0128 0,-14.0257 0,-21.0385 0,-6.4065 -0.841,-3.5064 -7.0128,-3.5064 -1.1688,0 -4.6752,0 -3.5064,0 2.3376,0 9.3504,0 7.0128,0 -7.0128,0 -14.0256,0 -21.0384,0 -1.1688,0 -2.68,0.8265 -3.5064,0 -0.8265,-0.8264 0.8264,-2.6799 0,-3.5064 -1.653,-1.6529 -5.3599,1.653 -7.0128,0 -0.8265,-0.8264 0.8264,-2.6799 0,-3.5064 -1.169,-1.1689 -5.8439,1.169 -7.0128,0 -0.8265,-0.8264 0.8264,-2.6799 0,-3.5064 -1.653,-1.6529 -5.3599,1.653 -7.0129,0 -0.8264,-0.8264 0.8265,-2.6799 0,-3.5064 -1.6529,-1.6529 -5.3598,1.653 -7.0128,0 -0.8264,-0.8265 0.8265,-2.6799 0,-3.5064 -1.6529,-1.6529 -7.0128,2.3376 -7.0128,0 0,-1.1688 2.3376,0 3.5064,0 1.1688,0 2.3376,0 3.5064,0 -2.3376,-5.844 -5.0224,-11.5608 -7.0128,-17.532 -0.3471,-1.0413 -0.3598,-16.8123 0,-17.532 0.7392,-1.4785 2.7672,-2.028 3.5064,-3.5064 0.5227,-1.0454 0,-2.3376 0,-3.5064 0,-1.1688 0,-2.3376 0,-3.5064 0,-1.1688 -1.1688,-3.5064 0,-3.5064 1.1688,0 1.1688,3.5064 0,3.5064 -1.6529,0 -2.0279,-2.7672 -3.5064,-3.5064 -1.3902,-0.6952 -9.8023,0.7168 -10.5192,0 -0.8265,-0.8265 0.8265,-2.68 0,-3.5064 -0.8265,-0.8265 -2.3376,0 -3.5064,0 -7.0128,0 -14.0256,0 -21.0384,0 -1.1688,0 -2.3376,0 -3.5064,0 -1.1688,0 -2.68,0.8264 -3.5064,0 -0.8265,-0.8265 0.8264,-2.68 0,-3.5065 -0.8265,-0.8264 -2.3376,0 -3.5064,0 -1.1688,0 -2.3376,0 -3.5064,0 -10.5192,0 -21.0385,0 -31.5577,0 -0.8504,0 -10.4064,0.1128 -10.5192,0 -0.8264,-0.8264 0.8265,-2.6799 0,-3.5064 -0.8264,-0.8264 -2.3376,0 -3.5064,0 -1.1688,0 -2.3376,0 -3.5064,0 -14.0256,0 -28.0512,0 -42.0768,0 -7.0128,0 -14.0257,0 -21.0385,0 -1.1688,0 -2.6799,0.8265 -3.5064,0 -0.8264,-0.8264 0.8265,-2.6799 0,-3.5064 -0.1127,-0.1127 -9.6688,0 -10.5192,0 -1.1688,0 -2.6799,-0.8264 -3.5064,0 -0.8264,0.8265 0.8265,2.68 0,3.5064 -0.8264,0.8265 -2.3376,0 -3.5064,0 -1.1688,0 -3.5064,1.1688 -3.5064,0 0,-1.1688 4.6752,0 3.5064,0 -2.3376,0 -4.6752,0 -7.0128,0 -1.1688,0 -3.5064,1.1688 -3.5064,0 0,-1.1688 4.6752,0 3.5064,0 -2.3376,0 -5.3599,-1.6529 -7.0128,0 -1.1688,1.1688 2.7672,2.028 3.5064,3.5064 0.5227,1.0455 0,2.3377 0,3.5065 3.876,-11.6281 3.5064,-6.8232 3.5064,-14.0257 0,-1.1688 -0.8265,-2.6799 0,-3.5064 0.8265,-0.8264 2.6799,0.8265 3.5064,0 0.8265,-0.8264 0.8265,-2.6799 0,-3.5064 -0.8265,-0.8264 -2.3376,0 -3.5064,0'}));SVGs.desert=_react2.default.createElement('g',{style:style},_react2.default.createElement('path',{d:'m 26.68876,585.81243 c 0,-1.22759 0.297703,-2.49181 0,-3.68269 -0.07445,-0.29772 -0.703672,0.217 -0.920679,0 -0.251926,-0.25192 0.249722,-3.18324 0,-3.6827 -0.194115,-0.38821 -0.726607,-0.53248 -0.92067,-0.9207 -0.137239,-0.27447 0,-0.61379 0,-0.92069 0,-1.84131 0,-3.6827 0,-5.52401 0,-0.3069 -0.217008,-0.70368 0,-0.92069 0.216999,-0.21701 0.703671,0.21701 0.92067,0 0.285086,-0.28511 -0.285078,-4.31828 0,-4.6034 0.217007,-0.217 0.703671,0.21701 0.920679,0 0.434006,-0.43401 -0.274477,-1.29235 0,-1.84139 0.194114,-0.38812 0.726606,-0.53248 0.920678,-0.92061 0.274468,-0.54904 -0.434015,-1.40737 0,-1.84139 0.216999,-0.21701 0.703671,0.21701 0.92067,0 0.306256,-0.30621 -0.306255,-1.53509 0,-1.84131 0.217008,-0.217 0.703672,0.21701 0.920679,0 0.217008,-0.217 -0.137238,-0.64622 0,-0.92069 0.122202,-0.24446 2.517564,-2.63978 2.762028,-2.762 0.274476,-0.13724 0.703671,0.217 0.92067,0 0.217008,-0.21701 -0.216999,-0.70369 0,-0.9207 0.217008,-0.21701 0.703671,0.21701 0.920679,0 0.217008,-0.21701 -0.217008,-0.70369 0,-0.9207 0.305518,-0.30552 1.535831,0.30553 1.841349,0 0.217008,-0.217 -0.216999,-0.70368 0,-0.92069 0.434015,-0.43399 1.407342,0.43401 1.841357,0 0.216999,-0.21698 -0.217007,-0.70365 0,-0.92066 0.307431,-0.30744 1.533867,0.30747 1.841349,0 0.217008,-0.21699 -0.217007,-0.70366 0,-0.92067 0.305518,-0.3055 1.535832,0.30551 1.841349,0 0.217008,-0.21699 -0.217007,-0.70367 0,-0.92067 2.455138,0 -0.30689,0.30689 0.920679,-0.92067 0.307139,-0.30716 1.53421,0.30713 1.841349,0 0.217008,-0.21702 -0.217008,-0.70368 0,-0.92069 0.217008,-0.217 0.703671,0.21701 0.920679,0 0.216999,-0.217 -0.217008,-0.70366 0,-0.92067 0.216999,-0.217 0.703671,0.21701 0.92067,0 0.217008,-0.217 -0.216999,-0.70366 0,-0.92068 0.217008,-0.21701 0.703671,0.21702 0.920679,0 0.217007,-0.21701 -0.217008,-0.70367 0,-0.92067 0.217007,-0.21701 0.703671,0.217 0.920678,0 0.217,-0.21701 -0.217007,-0.70367 0,-0.92067 0.217,-0.21702 0.703663,0.217 0.920671,0 0.217008,-0.21702 -0.217008,-0.70367 0,-0.92069 0.434015,-0.434 1.407342,0.43403 1.841349,0 0.217008,-0.217 -0.216999,-0.70366 0,-0.92067 0.217008,-0.217 0.703671,0.21701 0.920679,0 0.217007,-0.217 -0.217008,-0.70366 0,-0.92067 0.434006,-0.43401 1.407342,0.434 1.841348,0 0.217008,-0.21701 -0.216999,-0.70368 0,-0.92068 0.217008,-0.217 0.703672,0.217 0.920679,0 0.306256,-0.30626 -0.306255,-1.53509 0,-1.84135 0.217008,-0.217 0.703671,0.217 0.920679,0 0.216999,-0.217 -0.137238,-0.64617 0,-0.92067 0.194115,-0.38819 0.726556,-0.5325 0.92067,-0.92068 0.137238,-0.27451 0,-0.61379 0,-0.92067 0.30689,-0.30689 0.726564,-0.5325 0.920679,-0.92069 0.137238,-0.27449 -0.217008,-0.70366 0,-0.92067 0.217008,-0.217 0.703671,0.21701 0.920679,0 0.216999,-0.217 -0.137238,-0.64619 0,-0.92067 0.194114,-0.38819 0.61378,-0.61378 0.92067,-0.92068 0.30689,-0.3069 0.532492,-0.72657 0.920679,-0.92067 2.455129,0 -0.30689,0.30688 0.92067,-0.92069 0.217008,-0.217 0.703671,0.21702 0.920679,0 0.217007,-0.217 -0.217008,-0.70365 0,-0.92067 0.217007,-0.217 0.703671,0.21702 0.920678,0 0.216999,-0.217 -0.217007,-0.70366 0,-0.92067 0.216999,-0.21701 0.61378,0 0.920671,0 0.306898,0 0.613788,0 0.920678,0 0.223295,0 2.73241,-0.0296 2.762028,0 0.217007,0.21701 -0.217008,0.70367 0,0.92067 0.434007,0.43401 1.841349,-0.61377 1.841349,0 0,0.3069 -1.227569,0 -0.920679,0 0.613789,0 1.227569,0 1.841357,0 0.30689,0 0.613781,0 0.920671,0 0.306898,0 0.703671,0.21702 0.920678,0 0.217008,-0.217 -0.217007,-0.70366 0,-0.92067 0.217008,-0.21701 0.646203,0.13725 0.920679,0 0.776365,-0.3882 1.064985,-1.45316 1.841349,-1.84135 0.274476,-0.13725 0.703671,0.217 0.920679,0 0.216999,-0.217 -0.217008,-0.70367 0,-0.92068 0.216999,-0.217 0.703662,0.21701 0.92067,0 0.217008,-0.217 -0.137238,-0.64617 0,-0.92067 1.915818,-3.83164 -0.06356,0.98422 1.841349,-0.92067 0.217008,-0.21702 -0.216999,-0.70368 0,-0.92068 0.217008,-0.21701 0.703671,0.217 0.920679,0 0.217008,-0.21701 -0.217008,-0.70367 0,-0.92069 0.307139,-0.30714 1.53421,0.30716 1.841349,0 0.217008,-0.21699 -0.216999,-0.70366 0,-0.92067 0.217008,-0.21699 0.703671,0.21701 0.920679,0 0,-2.45514 -0.30689,0.3069 0.920678,-0.92067 0.216999,-0.21702 -0.217007,-0.70367 0,-0.92068 0.305509,-0.30551 1.535832,0.30551 1.841349,0 0.217008,-0.21701 -0.217007,-0.70367 0,-0.92067 0.217008,-0.21701 0.61378,0 0.92067,0 0.306899,0 0.920679,-0.30689 0.920679,0 0,0.30688 -1.227569,0 -0.920679,0 0.613789,0 1.292363,0.27448 1.841358,0 0.274468,-0.13725 -0.217008,-0.70367 0,-0.92068 0.216999,-0.21701 0.703671,0.21701 0.92067,0 0.217008,-0.21701 -0.30689,-0.92068 0,-0.92068 0.306899,0 0,1.22757 0,0.92068 0,-0.92068 0,-1.84135 0,-2.76202 0,-0.3069 -0.30689,-0.92069 0,-0.92069 0.306899,0 0,1.22756 0,0.92069 0,-0.6138 -0.274467,-1.29238 0,-1.84136 0.137238,-0.27449 0.703671,0.21701 0.920679,0 0.217008,-0.21699 -0.217008,-0.70366 0,-0.92067 0.221571,-0.22154 3.461178,0.22153 3.682706,0 0.217,-0.21701 -0.217007,-0.70368 0,-0.92067 0.217,-0.21702 0.613781,0 0.920671,0 0.338086,0 3.645669,-0.0371 3.682706,0 0.216999,0.21699 -0.217008,0.70366 0,0.92067 0.221571,0.22153 3.461176,-0.22154 3.682696,0 0.21701,0.21701 -0.217,0.70368 0,0.92067 0.43402,0.434 1.29236,-0.27449 1.84136,0 0.38818,0.1941 0.53249,0.72658 0.92067,0.92067 0.54899,0.27451 1.40734,-0.43401 1.84135,0 0.21701,0.21701 -0.217,0.70368 0,0.92069 0.21701,0.21699 0.61379,0 0.92068,0 0.30689,0 0.61378,0 0.92068,0 0.30689,0 0.61378,0 0.92067,0 0.30689,0 0.92067,-0.3069 0.92067,0 0,0.30687 -1.22756,0 -0.92067,0 0.61378,0 1.22756,0 1.84135,0 -2.02073,-9.27293 3.33804,-1.49669 4.60338,-2.76203 0.217,-0.21701 -0.21701,-0.70368 0,-0.92067 0.217,-0.21702 0.70367,0.21699 0.92067,0 0.21701,-0.21702 -0.217,-0.70368 0,-0.92067 0.21701,-0.21702 0.6462,0.13722 0.92068,0 0.38819,-0.19411 0.53249,-0.72659 0.92068,-0.9207 0.27447,-0.13723 0.70367,0.21702 0.92067,0 0.21701,-0.21699 -0.217,-0.70365 0,-0.92067 0.21701,-0.21699 0.6462,0.13725 0.92068,0 0.38817,-0.19409 0.53249,-0.72658 0.92068,-0.92067 0.27446,-0.13725 0.70366,0.21701 0.92067,0 0.217,-0.21702 -0.21701,-0.70367 0,-0.92067 0.217,-0.21702 0.70367,0.217 0.92067,0 0.21701,-0.21702 -0.217,-0.70368 0,-0.92067 0.30552,-0.30552 1.53584,0.3055 1.84135,0 0.21701,-0.21702 -0.217,-0.70368 0,-0.92069 0.21701,-0.217 0.70367,0.21701 0.92068,0 0,-2.45515 -0.3069,0.30689 0.92067,-0.92068 0.21701,-0.21699 -0.217,-0.70367 0,-0.92067 0.21701,-0.21701 0.6462,0.13726 0.92068,0 0.38819,-0.19409 0.53249,-0.72658 0.92068,-0.92067 0.27447,-0.13725 0.70367,0.217 0.92067,0 0.21701,-0.21701 -0.217,-0.70368 0,-0.92069 0.21701,-0.21699 0.70367,0.21701 0.92068,0 0.21701,-0.21699 -0.21701,-0.70366 0,-0.92067 0.21701,-0.21699 0.70367,0.21701 0.92068,0 0.217,-0.21699 -0.21701,-0.70366 0,-0.92067 0.217,-0.21701 0.70366,0.21701 0.92067,0 0.21701,-0.21701 -0.21701,-0.70368 0,-0.92067 0.21701,-0.21701 0.70367,0.21699 0.92068,0 0.217,-0.21701 -0.21701,-0.70368 0,-0.92067 0.217,-0.21701 0.6462,0.13723 0.92067,0 0.38818,-0.19411 0.53249,-0.72659 0.92068,-0.9207 0.27447,-0.13723 0.70367,0.21702 0.92067,0 0.217,-0.21699 -0.217,-0.70365 0,-0.92067 0.0369,-0.0371 3.34462,0 3.6827,0 3.37582,0 6.75163,0 10.12744,0 0.30689,0 0.61378,0 0.92067,0 0.30689,0 0.70368,0.21702 0.92067,0 0.21701,-0.21699 -0.21699,-0.70365 0,-0.92067 0.22153,-0.22154 3.46118,0.22154 3.68271,0 0.21701,-0.21702 -0.13724,-0.64619 0,-0.92067 0.19412,-0.3882 0.72661,-0.53249 0.92068,-0.92067 0.27447,-0.54899 -0.43402,-1.40735 0,-1.84137 0.217,-0.21699 0.70367,0.21702 0.92067,0 0.21701,-0.21699 -0.13724,-0.64617 0,-0.92067 0.19411,-0.38819 0.72661,-0.53248 0.92068,-0.92067 0.27452,-0.54898 -0.43402,-1.40735 0,-1.84136 0.21701,-0.21699 0.70367,0.21701 0.92067,0 0.21701,-0.21699 -0.13723,-0.64618 0,-0.92067 0.19412,-0.3882 0.72661,-0.53249 0.92068,-0.92067 0.13724,-0.27451 -0.21701,-0.70368 0,-0.92067 0.21701,-0.21701 0.70367,0.21699 0.92068,0 0.217,-0.21701 -0.13724,-0.64619 0,-0.92069 0.19411,-0.38818 0.7266,-0.53248 0.92067,-0.92067 0.13723,-0.27449 -0.217,-0.70368 0,-0.92068 0.217,-0.21701 0.70367,0.217 0.92068,0 0.217,-0.21701 -0.21701,-0.70367 0,-0.92067 0.217,-0.21701 0.70367,0.217 0.92067,0 0.217,-0.21701 -0.217,-0.70367 0,-0.92069 0.217,-0.21699 0.70367,0.21702 0.92067,0 0.21701,-0.21699 -0.217,-0.70366 0,-0.92067 0.21701,-0.217 0.70367,0.21701 0.92068,0 0.21701,-0.217 -0.13724,-0.64618 0,-0.92067 0.19412,-0.38819 0.72661,-0.53249 0.92068,-0.92068 0.13723,-0.27449 -0.21701,-0.70367 0,-0.92067 0.217,-0.21701 0.70366,0.217 0.92067,0 0.21701,-0.21701 -0.21701,-0.70367 0,-0.92068 0.21701,-0.217 0.70367,0.21701 0.92068,0 0.21701,-0.217 -0.21701,-0.70366 0,-0.92068 0.21701,-0.21699 0.70367,0.21702 0.92067,0 0.21701,-0.21699 -0.30689,-0.92067 0,-0.92067 0.3069,0 -0.30689,0.92067 0,0.92067 1.13769,0 0.92068,-1.29112 0.92068,-1.84134 0.92068,1.53446 1.84135,3.06891 2.76203,4.60337 0.30689,0 0.70367,-0.21701 0.92067,0 0.217,0.217 -0.217,0.70367 0,0.92068 0.217,0.21701 0.64621,-0.13725 0.92067,0 0.38819,0.19409 0.5325,0.72658 0.92068,0.92067 0.27452,0.13726 0.70367,-0.217 0.92068,0 0.217,0.21701 -0.21701,0.70368 0,0.92067 0.43401,0.43403 1.40734,-0.43401 1.84135,0 0.217,0.21702 -0.21701,0.70368 0,0.92069 0.217,0.217 0.61378,0 0.92067,0 0.3069,0 0.61379,0 0.92068,0 0.30689,0 1.22757,0 0.92068,0 -0.61379,0 -2.45514,0 -1.84136,0 3.06893,0 6.13784,0 9.20676,0 1.53446,0 3.06892,0 4.60338,0 0.43258,0 3.9306,0 1.84135,0 -0.61378,0 -2.45514,0 -1.84135,0 8.59297,0 0.92068,0.92067 2.76203,-0.92069 0.30718,-0.30714 1.53421,0.30716 1.84135,0 0.217,-0.21699 -0.21701,-0.70366 0,-0.92067 0.46034,-0.46034 2.30168,0.46033 2.76202,0 0.21701,-0.217 -0.217,-0.70366 0,-0.92067 0.43401,-0.43401 1.29241,0.27449 1.84135,0 0.38819,-0.19409 0.5325,-0.72658 0.92068,-0.92068 0.549,-0.27449 1.40734,0.43402 1.84135,0 0.21701,-0.21701 -0.21701,-0.70367 0,-0.92067 0.43402,-0.43402 1.29235,0.27449 1.84135,0 0.38819,-0.1941 0.53249,-0.72658 0.92068,-0.92068 0.27447,-0.13723 0.70367,0.21701 0.92068,0 0.217,-0.217 -0.21701,-0.70366 0,-0.92068 0.46033,-0.46033 2.30169,0.46034 2.76202,0 0.217,-0.21699 -0.217,-0.70366 0,-0.92067 0.46034,-0.46033 2.30169,0.46034 2.76202,0 0.21701,-0.21701 -0.217,-0.70367 0,-0.92067 0.21701,-0.21701 0.64621,0.13723 0.92068,0 0.38819,-0.19411 0.53249,-0.72659 0.92068,-0.92067 0.549,-0.2745 1.29241,0.27449 1.84135,0 0.38819,-0.19411 0.53249,-0.72659 0.92068,-0.92069 0.73657,-0.36826 2.0255,0.36828 2.76203,0 0.38817,-0.19409 0.53249,-0.72658 0.92067,-0.92067 0.49948,-0.24973 3.43082,0.25192 3.6827,0 0.217,-0.217 -0.217,-0.70368 0,-0.92067 0.28508,-0.2851 4.31829,0.28508 4.60338,0 0.217,-0.21702 -0.21701,-0.70368 0,-0.92067 0.46034,-0.46034 2.30169,0.46033 2.76203,0 0.217,-0.21702 -0.21701,-0.70368 0,-0.9207 0.217,-0.21699 0.6462,0.13726 0.92067,0 0.38818,-0.19409 0.53249,-0.72658 0.92068,-0.92067 0.27452,-0.13724 0.70367,0.21701 0.92068,0 0.21699,-0.21699 -0.21701,-0.70366 0,-0.92067 0.434,-0.43401 1.40733,0.43401 1.84134,0 0.217,-0.21701 -0.217,-0.70367 0,-0.92068 0.43401,-0.434 1.40735,0.43402 1.84135,0 0.21701,-0.217 -0.217,-0.70367 0,-0.92067 0.43401,-0.43402 1.40735,0.43402 1.84135,0 0.21701,-0.21701 -0.217,-0.70367 0,-0.92068 0.43402,-0.43401 1.40734,0.43402 1.84136,0 0.217,-0.217 -0.21701,-0.70366 0,-0.92067 0.43401,-0.43401 1.40733,0.434 1.84135,0 0.21701,-0.217 -0.21701,-0.70367 0,-0.92068 0.43401,-0.434 1.40734,0.43401 1.84135,0 0.21701,-0.21701 -0.21701,-0.70367 0,-0.92067 0.21701,-0.21701 0.70367,0.217 0.92068,0 0.217,-0.21701 -0.21701,-0.70367 0,-0.92068 0.217,-0.217 0.70367,0.21701 0.92067,0 0.217,-0.217 -0.217,-0.70367 0,-0.92068 0.217,-0.21699 0.70367,0.21701 0.92068,0 0.217,-0.21699 -0.21701,-0.70366 0,-0.92067 0.217,-0.21701 0.70367,0.21701 0.92067,0 0.217,-0.21701 -0.217,-0.70368 0,-0.92067 0.217,-0.21702 0.70368,0.21699 0.92067,0 0.21701,-0.21702 -0.21699,-0.70368 0,-0.92067 0.21701,-0.21702 0.70368,0.21699 0.92068,0 0.21701,-0.21702 -0.217,-0.70368 0,-0.9207 0.21701,-0.21699 0.70367,0.21702 0.92068,0 0.43401,-0.434 -0.43401,-1.40733 0,-1.84134 0.217,-0.21701 0.70366,0.21702 0.92067,0 0.21701,-0.21701 0,-0.61378 0,-0.92067 0,-0.3069 0,-0.61379 0,-0.92067 0,-0.3069 0,-1.22757 0,-0.92069 0,5.25816 -0.12481,-1.71654 0,-1.84134 2.45514,0 -0.30689,0.30689 0.92068,-0.92068 0.0295,-0.0296 2.53873,0 2.76203,0 0.30689,0 0.70367,-0.21701 0.92067,0 0.21701,0.217 -0.217,0.70367 0,0.92068 0.46034,0.46033 2.30169,-0.46034 2.76203,0 0.217,0.21699 -0.217,0.70367 0,0.92067 0.217,0.21701 0.61379,0 0.92068,0 0.30689,0 0.61378,0 0.92067,0 0.30689,0 1.22756,0 0.92067,0 -1.45856,0 -3.58549,-0.27449 0,0.92067 0.58231,0.19411 1.40735,-0.43401 1.84135,0 0.21701,0.21701 -0.217,0.70368 0,0.92069 2.45514,0 -0.30689,-0.3069 0.92068,0.92067 0.21701,0.217 0.70367,-0.21701 0.92068,0 0.217,0.217 -0.21701,0.70366 0,0.92067 0.43401,0.43401 1.40734,-0.434 1.84135,0 0.21701,0.21702 -0.21701,0.70368 0,0.92067 0.21701,0.21702 0.6462,-0.13724 0.92068,0 0.38818,0.1941 0.61378,0.6138 0.92067,0.92067 0.30689,0.3069 0.72661,0.53249 0.92068,0.9207 0.13724,0.27448 -0.21701,0.70365 0,0.92067 0.434,0.43401 1.84135,-0.6138 1.84135,0 0,0.3069 -0.92068,-0.3069 -0.92068,0 0,1.83957 2.21348,0.37212 2.76203,0.92067 0.217,0.21701 0,0.61379 0,0.92067 0,-1.53446 0,-3.06891 0,-4.60338 0.30689,0 0.70367,0.21702 0.92067,0 0.43401,-0.434 -0.434,-1.40733 0,-1.84134 0.21701,-0.21701 0.70368,0.217 0.92068,0 0.217,-0.21701 -0.13724,-0.64618 0,-0.92067 0.19412,-0.3882 0.72661,-0.53249 0.92067,-0.92069 0.13729,-0.27449 -0.217,-0.70366 0,-0.92067 0.21701,-0.217 0.70367,0.21701 0.92068,0 0.22152,-0.22154 -0.22153,-3.46115 0,-3.6827 1.22757,-1.22757 0.92068,1.53446 0.92068,-0.92067 0,-0.3069 0,-0.61378 0,-0.92068 0,-0.3069 -0.3069,-0.92067 0,-0.92067 0.30689,0 0,0.61377 0,0.92067 0,0.3069 0,0.61378 0,0.92068 0,0.30689 -0.13724,0.64618 0,0.92067 0.19412,0.38819 0.72661,0.53248 0.92067,0.92067 0.18253,0.36505 -0.18822,2.57381 0,2.76203 0.21701,0.21701 0.61379,0 0.92068,0 0,0.30689 -0.13724,0.64618 0,0.92067 0.19411,0.3882 1.22757,0.61379 0.92067,0.92069 -0.30689,0.30688 -0.92067,-1.3547 -0.92067,-0.92069 0,0.68624 0.70367,1.19034 0.92067,1.84136 0.0674,0.20215 0.0685,3.54583 0,3.68271 -0.19406,0.38818 -0.72656,0.53246 -0.92067,0.92067 -0.13724,0.27448 0.30689,0.92067 0,0.92067 -0.30689,0 0.30689,-0.92067 0,-0.92067 -1.30739,0 -0.92068,2.10743 -0.92068,2.76202 0,0.30689 0,0.61379 0,0.92068 0,0.30688 -0.21701,0.70366 0,0.92067 0.21701,0.21701 0.61379,0 0.92068,0 0,0.3069 -0.21701,0.70368 0,0.92068 0.43401,0.434 1.40734,-0.43401 1.84135,0 0.21701,0.21701 -0.21701,0.70367 0,0.92067 0.43401,0.43402 1.40734,-0.43401 1.84135,0 0.217,0.21701 -0.217,0.70367 0,0.92068 0.30748,0.30745 1.53392,-0.30745 1.84135,0 0.217,0.217 -0.217,0.70367 0,0.92067 0.43401,0.43402 1.40734,-0.434 1.84135,0 0.21701,0.21701 -0.217,0.70367 0,0.92068 0.43401,0.43401 1.40735,-0.43401 1.84135,0 0.21701,0.21701 -0.21701,0.70368 0,0.92067 0.21701,0.21701 0.70367,-0.21699 0.92068,0 1.90491,1.90492 -2.91096,-0.0745 0.92067,1.84137 0.28022,0.14008 2.34742,0 2.76203,0 0.3069,0 0.70367,0.21699 0.92068,0 0.21701,-0.21702 -0.21701,-0.70368 0,-0.9207 0.21701,-0.21699 0.61378,0 0.92068,0 0.30689,0 0.61378,0 0.92067,0 1.84135,0 3.6827,0 5.52405,0 0.30689,0 0.61378,0 0.92068,0 0.30689,0 0.6462,-0.13723 0.92067,0 0.38819,0.19411 0.53249,0.72659 0.92068,0.9207 0.36504,0.18251 2.57381,-0.18822 2.76203,0 0.217,0.21699 -0.21701,0.70365 0,0.92067 0.217,0.21699 0.70367,-0.21702 0.92067,0 0.21701,0.21699 -0.217,0.70367 0,0.92067 0.43401,0.43401 1.40734,-0.43401 1.84136,0 0.21699,0.21701 -0.21701,0.70368 0,0.92067 0.434,0.43401 1.40734,-0.43401 1.84134,0 0.21701,0.21701 -0.217,0.70368 0,0.92069 0.30709,0.30706 1.53432,-0.30707 1.84135,0 0.21701,0.21699 -0.217,0.70366 0,0.92067 0.21701,0.217 0.64621,-0.13725 0.92068,0 0.38823,0.19409 0.53249,0.72658 0.92067,0.92067 0.54901,0.27449 1.29241,-0.27449 1.84136,0 0.38818,0.19409 0.53249,0.72659 0.92067,0.92067 0.549,0.27451 1.40734,-0.434 1.84136,0 0.217,0.21702 -0.21701,0.70368 0,0.92068 0.46033,0.46034 2.30169,-0.46034 2.76203,0 0.21699,0.21701 -0.21701,0.70367 0,0.92068 0.434,0.43402 1.40733,-0.43402 1.84134,0 0.21701,0.217 -0.217,0.70366 0,0.92067 0.21701,0.217 0.64621,-0.13724 0.92068,0 0.38818,0.1941 0.5325,0.72659 0.92067,0.92068 0.549,0.27449 1.40735,-0.43401 1.84135,0 0.21701,0.21701 -0.217,0.70367 0,0.92067 0.46034,0.46033 2.3017,-0.46034 2.76203,0 0.21701,0.21701 -0.217,0.70368 0,0.92067 0.43402,0.43403 1.40734,-0.43401 1.84136,0 0.217,0.21702 -0.21701,0.70368 0,0.92069 0.46033,0.46034 2.30169,-0.46033 2.76203,0 0.21699,0.217 -0.21701,0.70366 0,0.92067 0.434,0.43401 1.29239,-0.2745 1.84134,0 0.38818,0.1941 0.5325,0.72658 0.92067,0.92068 0.54901,0.2745 1.40735,-0.43401 1.84136,0 0.217,0.21701 -0.21701,0.70367 0,0.92067 0.43401,0.43401 1.40734,-0.43401 1.84135,0 0.21701,0.21701 -0.21701,0.70368 0,0.92069 0.43401,0.434 1.40734,-0.43403 1.84135,0 0.21701,0.21699 -0.217,0.70366 0,0.92067 0.43402,0.434 1.40734,-0.43401 1.84135,0 0.21701,0.21699 -0.217,0.70366 0,0.92067 0.21701,0.21701 0.92068,-0.30689 0.92068,0 0,0.30689 -0.92068,-0.30689 -0.92068,0 0,3.24693 1.84136,-1.4049 1.84136,1.84134 0,-3.0689 0,-6.13782 0,-9.20675 0,-0.61378 0,-1.22757 0,-1.84135 0,-0.30689 -0.30689,-0.92067 0,-0.92067 0.30689,0 0,1.22757 0,0.92067 0,-0.21877 -0.10316,-3.47634 0,-3.6827 0.19411,-0.3882 0.7266,-0.53249 0.92067,-0.92067 0.27447,-0.54899 -0.43401,-1.40735 0,-1.84136 0.217,-0.21699 0.70368,0.21701 0.92068,0 0.21701,-0.21699 -0.217,-0.70366 0,-0.92067 0.21701,-0.217 0.70368,0.21701 0.92067,0 0.21701,-0.217 -0.21699,-0.70368 0,-0.92067 0.21701,-0.21702 0.70368,0.21699 0.92069,0 0.217,-0.21702 -0.21701,-0.70368 0,-0.92067 0.217,-0.21702 0.70366,0.21699 0.92068,0 0.21699,-0.21702 -0.21702,-0.70368 0,-0.9207 0.21699,-0.21699 0.70367,0.21702 0.92067,0 0.21701,-0.21699 -0.217,-0.70366 0,-0.92067 0.21701,-0.21699 0.70367,0.21701 0.92067,0 0.21702,-0.21699 -0.217,-0.70366 0,-0.92067 0.21702,-0.21701 0.70367,0.21701 0.92069,0 0.217,-0.21701 -0.13725,-0.64618 0,-0.92068 0.19409,-0.38819 0.72656,-0.53248 0.92067,-0.92067 0.13724,-0.2745 -0.21701,-0.70367 0,-0.92068 0.217,-0.217 0.70366,0.21701 0.92067,0 0.43401,-0.43401 -0.43401,-1.40734 0,-1.84135 0.21701,-0.21701 0.70368,0.21701 0.92068,0 0.217,-0.21701 -0.217,-0.70367 0,-0.92067 0.217,-0.21701 0.70367,0.217 0.92067,0 0.43402,-0.43401 -0.43402,-1.40735 0,-1.84136 0.217,-0.21699 0.70367,0.21701 0.92068,0 0.217,-0.21699 -0.21701,-0.70366 0,-0.92067 0.217,-0.21701 0.70366,0.21701 0.92067,0 0.43401,-0.43401 -0.434,-1.40734 0,-1.84134 0.217,-0.21702 0.70367,0.21699 0.92067,0 0.21702,-0.21702 0,-0.6138 0,-0.9207 0,-0.30687 0,-0.61377 0,-0.92067 0,-0.30689 0,-1.22757 0,-0.92067 0,0.61378 0,2.45514 0,1.84134 0,-2.14824 0,-4.29648 0,-6.44471 0,-0.3069 -0.217,-0.70368 0,-0.92068 0.21702,-0.21701 0.70368,0.217 0.92067,0 0.0296,-0.0296 0,-2.53874 0,-2.76202 0,-2.45515 0.3069,0.30689 -0.92067,-0.92068 -0.217,-0.21701 0,-0.61379 0,-0.92067 0,-0.3069 -0.30689,-0.9207 0,-0.9207 0.3069,0 0,1.22758 0,0.9207 0,-1.84137 0,-3.68271 0,-5.52407 0,-0.22329 -0.0296,-2.73241 0,-2.76201 0.21702,-0.21702 0.70368,0.21699 0.92067,0 0.21702,-0.21702 -0.21699,-0.70368 0,-0.92069 1.22758,-1.22757 0.92068,1.53446 0.92068,-0.92067 0,-0.41462 0.14011,-2.48184 0,-2.76202 -0.19409,-0.3882 -1.22755,-0.6138 -0.92068,-0.92069 0.3069,-0.30688 1.22758,1.22757 0.92068,0.92069 -0.61378,-0.6138 -1.11911,-1.35988 -1.84135,-1.84136 -0.25534,-0.17023 -0.70367,0.21701 -0.92067,0 -0.21701,-0.217 0.217,-0.70368 0,-0.92067 -0.30677,-0.30679 -1.53457,0.30676 -1.84135,0 -0.217,-0.21702 -0.217,-0.70368 0,-0.92068 0.217,-0.21701 0.61379,0 0.92068,0 0.33812,0 3.64566,-0.0371 3.68269,0 0.21701,0.217 -0.21699,0.70366 0,0.92068 0.46036,0.46033 2.3017,-0.46034 2.76204,0 0.21701,0.21699 -0.217,0.70367 0,0.92067 0.21701,0.21701 0.70367,-0.217 0.92067,0 0.21701,0.21701 -0.217,0.70367 0,0.92067 0.21701,0.21701 0.70367,-0.217 0.92069,0 0.217,0.21701 -0.21702,0.70368 0,0.92069 2.45512,0 -0.3069,-0.3069 0.92067,0.92067 0.217,0.217 0.70366,-0.21701 0.92067,0 0.434,0.43401 -0.43401,1.40733 0,1.84135 1.22757,1.22757 0.92068,-1.53445 0.92068,0.92067 0,1.0497 0,2.394 0,1.84136 0,-0.61379 -0.61378,-1.84136 0,-1.84136 0.68623,0 0.70367,1.19034 0.92067,1.84136 0.27235,0.81703 -0.30144,4.0005 0,4.60337 0.1941,0.38819 0.72658,0.53249 0.92068,0.92067 0.27449,0.54899 -0.434,1.40734 0,1.84137 0.217,0.21699 0.70366,-0.21701 0.92067,0 0.217,0.21699 -0.13724,0.64617 0,0.92067 1.91582,3.83163 -0.0635,-0.98425 1.84134,0.92068 0.21702,0.217 -0.21699,0.70367 0,0.92067 0.22156,0.22155 3.46117,-0.22155 3.68271,0 0.21702,0.21701 -0.21699,0.70367 0,0.92067 0.30678,0.30678 1.53458,-0.30677 1.84137,0 0.217,0.21701 -0.21702,0.70367 0,0.92068 0.434,0.43401 1.40733,-0.434 1.84134,0 0.0417,0.0417 0,4.16927 0,4.60338 0,0.3381 0.037,3.64565 0,3.68271 -2.45514,0 0.3069,-0.3069 -0.92067,0.92067 -0.21702,0.21699 -0.70367,-0.21702 -0.92067,0 -0.22044,0.22044 0.20929,3.6827 0,3.6827 -0.3069,0 -0.21702,-1.13768 0,-0.92068 0.48524,0.48525 0.43543,1.35612 0.92067,1.84135 2.45514,0 -0.3069,-0.30689 0.92067,0.92068 0.434,0.434 1.40733,-0.43401 1.84135,0 0.217,0.21701 -0.217,0.70367 0,0.92067 0.22155,0.22156 3.46116,-0.22154 3.68269,0 0.21702,0.21701 -0.21699,0.70367 0,0.92068 0.22156,0.22155 3.46117,-0.22155 3.68271,0 0.21702,0.217 -0.217,0.70367 0,0.92067 0.22155,0.22155 3.46117,-0.22155 3.68271,0 0.21701,0.21701 -0.21701,0.70367 0,0.92068 0.21701,0.21701 0.70367,-0.21701 0.92067,0 0.21701,0.21701 -0.217,0.70368 0,0.92067 0.21701,0.21701 0.70368,-0.21699 0.92068,0 0.43402,0.43402 -0.43402,1.40735 0,1.84137 0.43402,0.434 1.40735,-0.43402 1.84135,0 0.217,0.21699 -0.21701,0.70365 0,0.92067 0.0296,0.0296 2.53875,0 2.76204,0 2.45511,0 -0.3069,0.30689 0.92067,-0.92067 0.43401,-0.43402 1.29235,0.27447 1.84134,0 0.3882,-0.19411 0.53249,-0.72659 0.92067,-0.9207 0.49132,-0.24564 1.35005,0.24567 1.84137,0 0.38817,-0.19409 0.53248,-0.72658 0.92067,-0.92067 0.2745,-0.13724 0.70367,0.21701 0.92067,0 0.21701,-0.21699 -0.217,-0.70366 0,-0.92067 0.434,-0.43401 1.40735,0.43401 1.84135,0 0.217,-0.21701 -0.217,-0.70367 0,-0.92068 0.43402,-0.434 1.40735,0.43402 1.84135,0 0.21701,-0.217 -0.217,-0.70367 0,-0.92067 0.21701,-0.21701 0.70368,0.217 0.92067,0 0.21701,-0.21701 0.21701,-0.70367 0,-0.92068 -0.21699,-0.217 -0.70366,0.21701 -0.92067,0 -0.217,-0.217 0.21701,-0.70366 0,-0.92067 -0.217,-0.217 -0.70366,0.21701 -0.92067,0 -0.21701,-0.217 0.21701,-0.70367 0,-0.92068 -0.21701,-0.21701 -0.70368,0.21701 -0.92068,0 -0.217,-0.21701 0.217,-0.70367 0,-0.92067 -0.434,-0.43401 -1.40735,0.43401 -1.84135,0 -0.217,-0.21701 0.21701,-0.70367 0,-0.92068 -0.217,-0.217 -0.61377,0 -0.92067,0 0,-0.30688 0.217,-0.70367 0,-0.92068 -0.43402,-0.43401 -1.40734,0.43401 -1.84135,0 -0.21701,-0.21699 0.217,-0.70366 0,-0.92067 -0.21701,-0.21701 -0.70367,0.21701 -0.92069,0 -0.21699,-0.21701 0.21702,-0.70368 0,-0.92067 -0.21699,-0.21702 -0.70365,0.21699 -0.92067,0 -0.217,-0.21702 0.21702,-0.70368 0,-0.92067 -0.217,-0.21702 -0.70366,0.21699 -0.92067,0 -0.21702,-0.21702 0.21701,-0.70368 0,-0.9207 -0.21702,-0.21699 -0.70368,0.21702 -0.92067,0 -0.0921,-0.092 -0.0921,-2.66996 0,-2.76201 0.21699,-0.21701 0.70365,0.217 0.92067,0 0.21701,-0.21701 -0.21702,-0.70368 0,-0.92067 0.21701,-0.21701 0.70367,0.21699 0.92067,0 0.21702,-0.21701 -0.217,-0.70368 0,-0.92069 0.43401,-0.43401 1.40735,0.43401 1.84136,0 0.217,-0.217 -0.21701,-0.70366 0,-0.92067 0.43401,-0.43401 1.40733,0.43401 1.84135,0 0.217,-0.217 -0.217,-0.70368 0,-0.92067 0.434,-0.43401 1.40733,0.434 1.84135,0 0.217,-0.21701 -0.21701,-0.70368 0,-0.92068 0.217,-0.21701 0.61378,0 0.92067,0 0.30689,0 1.22757,0 0.92068,0 -0.61379,0 -2.45513,0 -1.84135,0 8.59297,0 0.92067,0.92068 2.76202,-0.92068 0.43401,-0.43401 1.40734,0.43402 1.84136,0 0.217,-0.217 -0.21701,-0.70366 0,-0.92067 0.217,-0.217 0.61378,0 0.92067,0 0.3069,0 0.61378,0 0.92067,0 0.3069,0 1.22757,0 0.92068,0 -0.61378,0 -2.45514,0 -1.84135,0 1.22757,0 2.45514,0 3.68271,0 0.30688,0 1.22757,0 0.92068,0 -0.6138,0 -2.45515,0 -1.84137,0 1.22757,0 2.45514,0 3.68271,0 0.3069,0 1.22757,0 0.92068,0 -0.61378,0 -2.45513,0 -1.84135,0 0.92067,0 1.88859,0.29114 2.76202,0 0.29115,-0.0971 -0.217,-0.70367 0,-0.92067 0.217,-0.21702 0.61378,0 0.92067,0 0.3069,0 0.92068,-0.3069 0.92068,0 0,0.30689 -1.22757,0 -0.92068,0 0.61379,0 1.22757,0 1.84135,0 0.3069,0 0.70367,-0.21702 0.92069,0 0.217,0.217 -0.21702,0.70367 0,0.92067 0.217,0.21701 0.70366,-0.217 0.92067,0 0.43401,0.434 -0.2745,1.29237 0,1.84135 0.1941,0.38819 0.72658,0.53248 0.92067,0.92068 0.11902,0.23803 0,4.87147 0,5.52404 0,0.3069 -0.13725,0.64619 0,0.92067 1.01784,2.03568 0.57141,0.28571 1.84137,0.9207 0.38818,0.19409 0.53247,0.72657 0.92067,0.92067 0.2802,0.14008 2.34739,0 2.76202,0 2.45513,0 4.91027,0 7.3654,0 0.3069,0 0.6138,0 0.92067,0 0.3069,0 0.70368,0.21699 0.9207,0 0.21699,-0.21702 -0.21702,-0.70368 0,-0.92067 0.21699,-0.21702 0.70365,0.21699 0.92067,0 0.0296,-0.0296 0,-2.53875 0,-2.76204 0,-0.3069 0.21699,-0.70367 0,-0.92067 -0.21702,-0.21701 -0.70368,0.217 -0.92067,0 -0.43404,-0.43401 0.434,-1.40735 0,-1.84136 -0.43404,-0.43401 -1.40735,0.43401 -1.84137,0 -0.21699,-0.217 0.21701,-0.70366 0,-0.92067 -0.0921,-0.0921 -3.19168,0.42964 -1.84134,-0.92067 0.21699,-0.21701 0.92067,-0.3069 0.92067,0 0,0.30689 -1.22757,0 -0.92067,0 5.21715,0 0.30688,0.61377 1.84134,-0.92068 0.46034,-0.46033 2.3017,0.46034 2.76204,0 0.21699,-0.21701 -0.21702,-0.70367 0,-0.92068 0.22153,-0.22155 3.46114,0.22155 3.6827,0 0.21699,-0.217 -0.21701,-0.70366 0,-0.92067 0.21699,-0.217 0.61378,0 0.92067,0 0,-0.30688 -0.21701,-0.70367 0,-0.92067 0.21699,-0.21702 0.70367,0.217 0.92067,0 0.28508,-0.28509 -0.28507,-4.31831 0,-4.60339 0.21702,-0.21701 0.70368,0.21702 0.92067,0 0.46034,-0.46033 -0.46033,-2.30169 0,-2.76203 0.21702,-0.21699 0.70368,0.21701 0.92068,0 0.43403,-0.43401 -0.43401,-1.40733 0,-1.84134 0.21701,-0.21701 0.70367,0.21699 0.92068,0 0.43402,-0.43401 -0.434,-1.40734 0,-1.84136 0.217,-0.217 0.70367,0.21701 0.92068,0 0.43401,-0.43401 -0.43401,-1.40734 0,-1.84134 0.217,-0.21702 0.70368,0.21701 0.92068,0 0.21701,-0.21702 -0.217,-0.70368 0,-0.92068 0.21701,-0.21701 0.70367,0.217 0.92067,0 0.21702,-0.21701 -0.217,-0.70367 0,-0.92067 0.21702,-0.21701 0.61379,0 0.92069,0 0,-0.3069 -0.21702,-0.70368 0,-0.92069 0.217,-0.217 0.70365,0.21701 0.92067,0 0.217,-0.217 -0.21702,-0.70366 0,-0.92067 0.217,-0.217 0.70366,0.21701 0.92067,0 0.21701,-0.217 -0.21701,-0.70368 0,-0.92067 0.21701,-0.21702 0.70368,0.21699 0.92067,0 0.21701,-0.21702 -0.21699,-0.70368 0,-0.92068 0.21701,-0.21701 0.70368,0.217 0.92068,0 0.43402,-0.434 -0.43402,-1.40735 0,-1.84136 0.217,-0.21699 0.70367,0.21701 0.92068,0 0.217,-0.21699 -0.30689,-0.92067 0,-0.92067 0.30689,0 -0.30689,0.92067 0,0.92067 0.43401,0 0.53247,-0.72658 0.92067,-0.92067 0.27449,-0.13725 0.64619,0.13725 0.92067,0 0.38821,-0.19408 0.6138,-1.22756 0.92067,-0.92067 0.3069,0.30689 -0.92067,0.48667 -0.92067,0.92067 0,0.80346 4.78833,-1.93383 -0.92067,0.92067 -1.57858,5.43561 4.15159,-3.2138 5.52405,-1.84134 0.21702,0.21699 -0.21699,0.70366 0,0.92067 0.21702,0.21701 0.70368,-0.21701 0.92068,0 0.43402,0.43401 -0.43402,1.40734 0,1.84134 0.21701,0.21702 0.70367,-0.21699 0.92069,0 0.21699,0.21702 -0.21702,0.70368 0,0.92069 0.21699,0.217 0.70365,-0.21701 0.92067,0 0.217,0.217 -0.21702,0.70366 0,0.92068 2.45513,0 -0.3069,-0.3069 0.92067,0.92067 0.21701,0.21701 0.70368,-0.217 0.92067,0 0.21701,0.21701 -0.21699,0.70367 0,0.92067 0.21701,0.21701 0.70368,-0.217 0.92068,0 0.217,0.21701 -0.217,0.70368 0,0.92069 0.217,0.217 0.70367,-0.21701 0.92068,0 0.21699,0.217 -0.13725,0.64617 0,0.92067 0.19409,0.38819 0.72659,0.53247 0.92067,0.92068 0.13725,0.27448 -0.21701,0.70367 0,0.92067 0.217,0.21701 0.70368,-0.217 0.92067,0 0.43401,0.434 -0.434,1.40735 0,1.84136 0.21701,0.21699 0.70368,-0.21702 0.92067,0 0.21702,0.21699 -0.13723,0.64616 0,0.92067 0.19411,0.38818 0.72659,0.53249 0.9207,0.92067 0.13723,0.2745 -0.21702,0.70368 0,0.92067 0.21699,0.21701 0.70365,-0.21699 0.92067,0 0.21699,0.21701 -0.13725,0.64619 0,0.92069 0.19409,0.38818 0.72657,0.53247 0.92067,0.92067 0.13725,0.27449 -0.21702,0.70366 0,0.92067 0.21702,0.21702 0.70367,-0.21701 0.92067,0 0.21702,0.21702 -0.217,0.70368 0,0.92067 0.21702,0.21702 0.70368,-0.21699 0.92067,0 0.43403,0.43402 -0.43401,1.40734 0,1.84137 2.45514,0 -0.30688,-0.3069 0.92069,0.92067 0.217,0.21699 0.70366,-0.21701 0.92068,0 0.46033,0.46034 -0.46034,2.30168 0,2.76202 0.21699,0.21701 0.70366,-0.217 0.92067,0 0.217,0.21701 -0.13726,0.64618 0,0.92068 2.45513,4.91027 0,-2.45513 0,0 0,0.68622 0.43543,1.35611 0.92067,1.84135 0.21701,0.21701 0.61379,0 0.92068,0 0,0.30689 -0.21701,0.70367 0,0.92067 0.217,0.21701 0.70367,-0.217 0.92067,0 0.217,0.21701 -0.217,0.70368 0,0.92069 0.30708,0.30705 1.53428,-0.30708 1.84135,0 0.21701,0.21699 -0.217,0.70366 0,0.92067 0.0296,0.0296 2.53875,0 2.76204,0 0.30689,0 0.70365,0.217 0.92067,0 0.21701,-0.21701 -0.21702,-0.70368 0,-0.92067 0.43401,-0.43403 1.29237,0.27449 1.84134,0 0.3882,-0.1941 0.53249,-0.72658 0.92069,-0.92069 0.36503,-0.18251 2.5738,0.18822 2.76202,0 0.21701,-0.217 -0.217,-0.70366 0,-0.92067 0.21701,-0.217 0.61379,0 0.92068,0 0.30689,0 0.92067,-0.3069 0.92067,0 0,0.30689 -1.22756,0 -0.92067,0 0.61378,0 1.29236,0.2745 1.84134,0 0.2745,-0.13725 -0.217,-0.70368 0,-0.92067 0.21702,-0.21701 0.70368,0.21699 0.92068,0 0.21701,-0.21701 -0.13725,-0.64619 0,-0.92068 0.19409,-0.38819 0.72658,-0.53249 0.92067,-0.92068 0.13726,-0.27449 -0.217,-0.70366 0,-0.92067 0.21701,-0.217 0.70367,0.21701 0.92069,0 0.43401,-0.43402 -0.43402,-1.40734 0,-1.84135 0.217,-0.21701 0.61378,0 0.92067,0 0.2233,0 2.73241,-0.0296 2.76202,0 0.21701,0.21699 -0.217,0.70366 0,0.92068 0.43402,0.434 1.40735,-0.43402 1.84136,0 0.217,0.217 -0.21701,0.70367 0,0.92067 0.434,0.434 1.40733,-0.43402 1.84135,0 0.21701,0.21701 -0.217,0.70367 0,0.92067 0.22155,0.22155 3.46117,-0.22155 3.6827,0 0.21701,0.21701 -0.217,0.70367 0,0.92068 0.2851,0.28508 4.31829,-0.28509 4.60337,0 0.21702,0.217 -0.21699,0.70367 0,0.92068 0.43402,0.434 1.29238,-0.27451 1.84137,0 0.38818,0.19408 0.53247,0.72658 0.92067,0.92067 0.27448,0.13725 0.64618,-0.13725 0.92067,0 0.3882,0.19408 0.53249,0.72658 0.92068,0.92067 0.54898,0.2745 1.40735,-0.43401 1.84135,0 0.21699,0.21701 -0.21701,0.70368 0,0.92069 0.43401,0.43401 1.40734,-0.43403 1.84134,0 0.21702,0.21699 -0.21699,0.70366 0,0.92067 0.46034,0.46033 2.3017,-0.46034 2.76204,0 0.217,0.217 -0.21702,0.70366 0,0.92067 0.43401,0.43401 1.40733,-0.434 1.84134,0 0.21702,0.21702 -0.21699,0.70368 0,0.92067 0.21702,0.21702 0.64619,-0.13724 0.9207,0 0.38818,0.1941 0.53246,0.72658 0.92067,0.92067 0.27447,0.13726 0.61377,0 0.92067,0 0.30689,0.3069 0.53249,0.72659 0.92067,0.9207 0.2745,0.13723 0.70368,-0.21702 0.92067,0 0.21701,0.21699 -0.21699,0.70365 0,0.92067 0.21701,0.21699 0.70368,-0.21702 0.92069,0 0.21699,0.21699 -0.21701,0.70366 0,0.92067 0.21699,0.21701 0.64617,-0.13725 0.92067,0 0.38818,0.19409 0.53249,0.72658 0.92067,0.92067 0.27449,0.13725 0.70368,-0.21699 0.92067,0 0.21702,0.21701 -0.21699,0.70368 0,0.92068 0.30707,0.30707 1.53429,-0.30706 1.84136,0 0.217,0.21701 -0.21701,0.70367 0,0.92068 0.43402,0.43401 1.40734,-0.43401 1.84135,0 0.21701,0.217 -0.217,0.70366 0,0.92067 0.30678,0.30677 1.53458,-0.30678 1.84136,0 0.217,0.21701 -0.21701,0.70368 0,0.92068 0.43401,0.434 1.40734,-0.43401 1.84135,0 0.21701,0.21701 -0.21702,0.70367 0,0.92067 0.21701,0.21701 0.64618,-0.13723 0.92067,0 0.38819,0.19411 0.53249,0.72658 0.92067,0.92068 0.2745,0.13724 0.70368,-0.21701 0.92069,0 0.21699,0.217 -0.21701,0.70367 0,0.92067 0.21699,0.21701 0.64617,-0.13724 0.92067,0 0.38818,0.1941 0.53249,0.72659 0.92067,0.92068 0.27451,0.13726 0.70368,-0.21701 0.92067,0 0.21701,0.21701 -0.21699,0.70368 0,0.92067 0.21701,0.21701 0.70368,-0.21699 0.92069,0 0.217,0.21701 -0.21701,0.70368 0,0.92067 0.217,0.21702 0.70366,-0.21699 0.92067,0 0.217,0.21702 -0.21701,0.70368 0,0.9207 0.217,0.21699 0.70366,-0.21702 0.92067,0 0.21702,0.21699 -0.21701,0.70365 0,0.92067 0.21702,0.21699 0.70368,-0.21702 0.92068,0 0.21701,0.21699 -0.217,0.70367 0,0.92067 0.43401,0.43401 1.40733,-0.43401 1.84136,0 0.217,0.21701 -0.21702,0.70368 0,0.92067 0.43401,0.43401 1.84134,-0.61378 1.84134,0 0,0.3069 -1.22757,0 -0.92067,0 0.92067,0 1.84134,0 2.76202,0 0.30689,0 0.70367,0.21701 0.92068,0 0.217,-0.21699 -0.21701,-0.70366 0,-0.92067 0.217,-0.217 0.70367,0.21701 0.92068,0 0.21699,-0.217 -0.21701,-0.70368 0,-0.92067 0.21699,-0.21702 0.61378,0 0.92067,0 0.30689,0 0.92067,-0.3069 0.92067,0 0,0.30689 -1.13767,0.21699 -0.92067,0 0.48523,-0.48524 1.3561,-0.43544 1.84136,-0.92067 0.21699,-0.21702 0,-0.6138 0,-0.9207 0,-0.30687 0,-0.61377 0,-0.92067 0,-0.3069 -0.3069,-0.92067 0,-0.92067 0.30687,0 0,1.22757 0,0.92067 0,-0.61377 -0.2745,-1.29236 0,-1.84135 0.13723,-0.27449 0.70366,0.21701 0.92067,0 0.21699,-0.217 -0.3069,-0.92067 0,-0.92067 0.30687,0 0,0.61378 0,0.92067 0.37934,6.62977 3.78801,0.97334 5.52405,1.84135 0.38819,0.19409 0.53249,0.72658 0.92067,0.92067 0.54899,0.2745 1.40735,-0.434 1.84136,0 0.217,0.21702 -0.21701,0.70368 0,0.9207 0.46034,0.46033 2.30168,-0.46034 2.76202,0 0.21701,0.21699 -0.217,0.70365 0,0.92067 0.43401,0.434 1.40735,-0.43402 1.84136,0 0.21699,0.21699 -0.21701,0.70367 0,0.92067 0.43401,0.43401 1.29236,-0.27449 1.84134,0 0.38821,0.19409 0.53249,0.72658 0.92068,0.92067 0.54899,0.2745 1.40735,-0.43401 1.84136,0 0.21699,0.21701 -0.21702,0.70368 0,0.92069 0.30707,0.30706 1.53427,-0.30707 1.84134,0 0.21701,0.21699 -0.217,0.70366 0,0.92067 0.43401,0.43401 1.29237,-0.2745 1.84136,0 0.38818,0.19409 0.53247,0.72658 0.92067,0.92067 0.36503,0.18252 2.57382,-0.18822 2.76203,0 0.217,0.21701 -0.21701,0.70368 0,0.92067 0.46034,0.46034 2.30168,-0.46033 2.76202,0 0.21702,0.21702 -0.217,0.70368 0,0.92068 0.43401,0.43402 1.29237,-0.27449 1.84136,0 0.38819,0.1941 0.53247,0.72658 0.92067,0.92068 0.27449,0.13724 0.70368,-0.21701 0.92068,0 0.21701,0.217 -0.217,0.70366 0,0.92067 0.434,0.43402 1.29237,-0.27449 1.84136,0 0.38818,0.1941 0.53247,0.72659 0.92067,0.92068 0.49083,0.24542 1.35051,-0.24542 1.84134,0 0.3882,0.19409 0.53249,0.72658 0.92067,0.92067 0.49947,0.24973 3.4308,-0.2519 3.68271,0 0.21701,0.21701 -0.217,0.70368 0,0.92067 0.22156,0.22156 3.46116,-0.22153 3.68271,0 0.21701,0.21702 -0.217,0.70368 0,0.92069 0.28508,0.28508 4.31829,-0.2851 4.60337,0 0.21701,0.217 -0.21699,0.70366 0,0.92067 0.037,0.0371 3.3446,0 3.6827,0 4.60339,0 9.20676,0 13.81013,0 0.22329,0 2.73243,-0.0296 2.76204,0 0.21701,0.217 -0.21701,0.70368 0,0.92068 0.43401,0.434 1.40733,-0.43401 1.84134,0 0.21702,0.21701 -0.21699,0.70367 0,0.92067 0.43403,0.43401 1.40735,-0.43401 1.84137,0 0.21699,0.21701 -0.21702,0.70368 0,0.92069 0.434,0.434 1.84134,-0.6138 1.84134,0 0,0.30688 -1.22757,0 -0.92067,0 0.61379,0 1.22756,0 1.84135,0 0.30688,0 0.70367,-0.21701 0.92067,0 0.217,0.21699 -0.217,0.70366 0,0.92067 0.217,0.21699 0.6462,-0.13725 0.92067,0 0.38819,0.19408 0.61378,0.61378 0.92068,0.92067 0.30689,0.30689 0.72658,0.53249 0.92067,0.92067 0.13726,0.27451 -0.21699,0.70368 0,0.92067 0.21701,0.21702 0.70368,-0.21699 0.92069,0 0.217,0.21702 -0.21701,0.70368 0,0.92069 0.217,0.217 0.70366,-0.21701 0.92068,0 0.21699,0.217 -0.21702,0.70366 0,0.92067 0.21699,0.217 0.70365,-0.21701 0.92067,0 0.21701,0.217 -0.21702,0.70368 0,0.92067 0.21701,0.21702 0.70367,-0.21699 0.92067,0 0.21701,0.21702 -0.217,0.70368 0,0.92068 0.21701,0.21701 0.70367,-0.217 0.92067,0 0.43402,0.43401 -0.43401,1.40735 0,1.84136 0.21702,0.217 0.70368,-0.21702 0.92069,0 0.43401,0.43401 -0.43401,1.40734 0,1.84134 0.217,0.21702 0.70366,-0.21699 0.92067,0 0.43401,0.43401 -0.2745,1.29238 0,1.84137 0.19409,0.38817 0.72659,0.53247 0.92068,0.92067 0.27449,0.54898 -0.2745,1.29236 0,1.84134 0.19408,0.3882 0.72658,0.53249 0.92067,0.92067 0.18252,0.36506 -0.18823,2.57382 0,2.76203 0.217,0.21702 0.70367,-0.21699 0.92068,0 0.46033,0.46034 -0.46035,2.3017 0,2.76204 1.22755,1.22757 0.92067,-1.53447 0.92067,0.92067 0,0.22329 -0.0296,2.73241 0,2.76204 0.217,0.21699 0.70367,-0.21702 0.92067,0 0.21702,0.21699 0,0.61377 0,0.92067 0,0.30689 0.3069,0.92067 0,0.92067 -0.30689,0 0,-1.22757 0,-0.92067 0,0.92067 0,1.84134 0,2.76201 0,0.30689 0.21702,0.70368 0,0.92069 -0.217,0.21699 -0.61379,0 -0.92067,0 -0.47048,5.55736 3.49685,-0.18584 4.60338,0.92067 0.217,0.21699 -0.21701,0.70367 0,0.92067 0.217,0.21702 0.61378,0 0.92068,0 0.30689,0 0.61379,0 0.92067,0 0.30689,0 0.61379,0 0.92067,0 0.30689,0 0.70368,-0.217 0.92069,0 0.217,0.21702 -0.21701,0.70367 0,0.92068 0.434,0.434 1.29236,-0.27449 1.84134,0 0.3882,0.19411 0.53249,0.72657 0.92068,0.92068 0.36504,0.18251 2.57381,-0.18821 2.76202,0 0.21702,0.217 -0.217,0.70366 0,0.92067 0.46034,0.46034 2.3017,-0.46033 2.76204,0 0.21699,0.21701 -0.21702,0.70366 0,0.92068 0.30745,0.30745 1.53389,-0.30745 1.84134,0 0.21702,0.21701 -0.21699,0.70368 0,0.92067 0.43401,0.43401 1.40734,-0.43401 1.84137,0 0.21699,0.21701 -0.21702,0.70368 0,0.92067 0.434,0.43402 1.40733,-0.43401 1.84134,0 0.21701,0.21702 -0.21701,0.70368 0,0.92069 0.21701,0.217 0.92067,-0.30689 0.92067,0 0,0.30688 -1.22757,0 -0.92067,0 0.61378,0 1.22756,0 1.84134,0 0.30689,0 -0.70366,-0.21701 -0.92067,0 -0.217,0.217 0.21701,0.70366 0,0.92068 -0.46033,0.46033 -2.30168,-0.46034 -2.76201,0 -0.21702,0.21699 0.21699,0.70367 0,0.92067 -0.21702,0.217 -0.70368,-0.217 -0.9207,0 -0.21699,0.217 0.21702,0.70367 0,0.92067 -0.21699,0.21701 -0.70365,-0.217 -0.92067,0 -0.30779,0.30779 0.30779,1.53357 0,1.84136 -0.21699,0.21699 -0.70367,-0.21701 -0.92067,0 -0.21702,0.21699 0.217,0.70366 0,0.92067 -0.21702,0.21701 -0.70368,-0.21701 -0.92067,0 -0.21702,0.21701 0.21699,0.70367 0,0.92067 -0.21702,0.21702 -0.70368,-0.217 -0.92069,0 -0.217,0.21702 0.21701,0.70367 0,0.92067 -0.217,0.21702 -0.61378,0 -0.92068,0 0,0.3069 0.21702,0.70368 0,0.92069 -0.21699,0.217 -0.70365,-0.21701 -0.92067,0 -0.434,0.43401 0.27449,1.29235 0,1.84135 -0.19409,0.38819 -0.72658,0.53248 -0.92067,0.92067 -0.1401,0.2802 0,2.3474 0,2.76203 0,2.14824 0,4.29648 0,6.44472 0,0.3069 -0.21701,0.70367 0,0.92069 0.217,0.217 0.70367,-0.21702 0.92067,0 0.0296,0.0296 0,2.53872 0,2.76202 0,2.15916 -0.217,-0.43402 0.92067,1.84136 0.13726,0.27448 -0.13723,0.64616 0,0.92067 0.1941,0.38818 0.72659,0.53249 0.92068,0.92067 0.13725,0.27451 -0.217,0.70368 0,0.92067 0.21701,0.21701 0.70367,-0.21699 0.92069,0 0.21699,0.21701 -0.21702,0.70368 0,0.92066 0.21699,0.21701 0.70365,-0.21698 0.92067,0 0.30444,0.3045 -0.30446,1.53689 0,1.84139 0.30716,0.30716 1.53421,-0.30716 1.84134,0 0.21702,0.21701 -0.21699,0.70369 0,0.9207 0.21702,0.217 0.70368,-0.21701 0.9207,0 0.21699,0.217 -0.21702,0.7036 0,0.92061 0.434,0.43401 1.40733,-0.43402 1.84134,0 0.21701,0.217 -0.21701,0.70368 0,0.92069 0.434,0.43402 1.40733,-0.43401 1.84134,0 0.21701,0.21701 -0.21699,0.70369 0,0.9207 0.21701,0.21701 0.70368,-0.21701 0.92068,0 0.217,0.21701 -0.217,0.70369 0,0.92069 0.217,0.21701 0.61378,0 0.92068,0 0,0.3069 -0.21701,0.70361 0,0.92061 0.55022,0.55024 1.84134,-0.99506 1.84134,0.9207 0,0.3069 -0.61377,0 -0.92067,0 -2.02071,9.27292 3.33804,1.49667 4.60338,2.762 0.21701,0.21701 -0.13725,0.64622 0,0.9207 0.3882,0.77642 1.45316,1.06497 1.84137,1.84139 0.13722,0.27448 -0.21702,0.7036 0,0.92061 0.21699,0.21709 0.70365,-0.21701 0.92067,0 0.21699,0.21709 -0.13726,0.64622 0,0.9207 0.19408,0.38821 0.72657,0.53248 0.92067,0.92069 0.13724,0.27448 -0.21702,0.70369 0,0.9207 0.21701,0.21701 0.70367,-0.21701 0.92067,0 0.21701,0.21701 -0.13725,0.64613 0,0.92069 0.19408,0.38813 0.72658,0.53249 0.92067,0.92061 0.13725,0.27457 -0.21699,0.70369 0,0.9207 0.21701,0.21701 0.70368,-0.21701 0.92068,0 0.217,0.21701 -0.13724,0.64622 0,0.9207 0.1941,0.38821 0.72659,0.53248 0.92068,0.92069 0.13725,0.27448 -0.21701,0.7036 0,0.92061 0.21699,0.21701 0.70366,-0.21701 0.92067,0 0.21701,0.21701 -0.21701,0.70369 0,0.9207 0.21701,0.21701 0.70367,-0.21701 0.92067,0 0.43401,0.43401 -0.434,1.40737 0,1.84139 0.21702,0.21701 0.70367,-0.21701 0.92067,0 0.21702,0.21701 -0.13723,0.64613 0,0.92061 0.38821,0.77642 1.45317,1.06497 1.84136,1.84139 0.13726,0.27448 -0.21701,0.70369 0,0.9207 0.217,0.217 0.61378,0 0.92068,0 0,0.3069 -0.217,0.7036 0,0.92069 0.21701,0.21692 0.70368,-0.21709 0.92067,0 0.43401,0.43393 -0.43401,1.40729 0,1.84131 0.21701,0.21701 0.70368,-0.21701 0.92069,0 0.217,0.21701 -0.21701,0.70369 0,0.92069 0.217,0.21701 0.70366,-0.217 0.92068,0 0.43399,0.43402 -0.43402,1.4073 0,1.84131 0.21699,0.21701 0.70365,-0.21701 0.92067,0 0.217,0.21701 -0.13726,0.64622 0,0.9207 0.19408,0.38821 0.72657,0.53248 0.92067,0.92069 0.13724,0.27448 -0.217,0.70369 0,0.9207 0.21701,0.21701 0.70367,-0.21701 0.92067,0 0.22155,0.22155 -0.22154,3.46114 0,3.6827 0.21701,0.217 0.70368,-0.21701 0.92068,0 0.217,0.217 0,0.61379 0,0.92069 0,0.33804 0.0371,3.64556 0,3.68261 -0.217,0.21701 -0.70367,-0.21692 -0.92068,0 -0.217,0.21701 0.30689,0.9207 0,0.9207 -1.9158,0 -0.37044,-1.29115 -0.92067,-1.84131 -0.217,-0.217 -0.70367,0.21701 -0.92067,0 -0.21702,-0.217 0.217,-0.70368 0,-0.92069 -0.22155,-0.22156 -3.46117,0.22155 -3.68271,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.9207 -0.30716,-0.30715 -1.53421,0.30716 -1.84135,0 -0.21701,-0.217 0.217,-0.70369 0,-0.92061 -0.21701,-0.21709 -0.92069,0.30682 -0.92069,0 0,-0.3069 0.92069,-0.3069 0.92069,0 0,0.43393 -0.72657,0.5324 -0.92069,0.92061 -0.13723,0.27448 0,0.6138 0,0.9207 0,0.3069 -0.13723,0.64622 0,0.92069 0.19412,0.38822 0.72658,0.53249 0.92069,0.92061 0.27448,0.54904 -0.43401,1.40738 0,1.8414 0.217,0.217 0.70366,-0.21701 0.92067,0 0.46034,0.46034 -0.46033,2.30165 0,2.762 0.217,0.21701 0.70368,-0.21701 0.92068,0 0.21701,0.21701 -0.13725,0.64622 0,0.92069 0.19409,0.38822 0.72658,0.53249 0.92067,0.9207 0.13725,0.27448 -0.21699,0.70369 0,0.9207 0.21701,0.217 0.70368,-0.21701 0.92069,0 0.30626,0.30621 -0.30627,1.53509 0,1.8413 0.217,0.21701 0.70366,-0.21701 0.92068,0 0.43399,0.43402 -0.43402,1.40738 0,1.84139 0.21699,0.21701 0.70365,-0.217 0.92067,0 0.46033,0.46035 -0.46034,2.30166 0,2.76201 0.217,0.217 0.70367,-0.21701 0.92067,0 0.21701,0.217 0,0.61379 0,0.92069 0,0.3069 0.30689,0.92061 0,0.92061 -0.3069,0 -0.3069,-0.92061 0,-0.92061 0.434,0 0.72658,0.53249 0.92067,0.92061 0.13724,0.27456 0,0.6138 0,0.9207 0,0.3069 0.21701,0.70369 0,0.92069 -0.217,0.21701 -0.70366,-0.217 -0.92067,0 -0.217,0.21701 0,0.6138 0,0.9207 0,2.762 0,5.524 0,8.28609 0,0.30681 0,0.61371 0,0.92061 0,0.3069 -0.217,0.70369 0,0.9207 0.21701,0.21701 0.70367,-0.21701 0.92067,0 0.21701,0.21701 0,0.6138 0,0.92069 0,0.65257 -0.11902,5.28599 0,5.52409 0.1941,0.38813 0.72658,0.5324 0.92068,0.92061 0.11902,0.23803 0,4.87153 0,5.52409 0,0.3069 0,0.6138 0,0.9207 0,0.3069 -0.217,0.7036 0,0.92061 0.217,0.21701 0.70367,-0.21701 0.92067,0 0.217,0.21701 0,0.6138 0,0.9207 0,2.14829 0,4.29649 0,6.4447 0,2.76208 0,5.52408 0,8.28609 0,0.3069 0,0.61388 0,0.92069 0,0.3069 -0.217,0.70369 0,0.9207 0.217,0.21701 0.70368,-0.21701 0.92068,0 0.0371,0.0369 0,3.34458 0,3.6827 0,1.22759 0,2.4551 0,3.68269 0,0.3069 0,1.22751 0,0.9207 0,-0.6138 0,-2.4551 0,-1.84139 0,0.92069 0,1.84139 0,2.762 0,0.30698 0.3069,0.9207 0,0.9207 -0.3069,0 0.3069,-0.9207 0,-0.9207 -0.43401,0 -0.53249,0.72659 -0.92068,0.9207 -0.27449,0.13732 -0.92067,0.3069 -0.92067,0 0,-0.3069 1.22757,0 0.92067,0 -0.61379,0 -1.22757,0 -1.84135,0 -0.52478,0 -3.70263,0 -1.84134,0 0.61377,0 2.27536,-0.43402 1.84134,0 -1.14035,1.14036 -3.14324,0.92069 -4.60338,0.92069 -0.96197,0 -2.61304,0 -1.84135,0 0.61378,0 2.45515,0 1.84135,0 -0.92067,0 -1.84135,0 -2.76202,0 -0.30689,0 -0.61379,0 -0.92069,0 -0.30687,0 -0.70365,0.21701 -0.92067,0 -0.217,-0.21701 0.21702,-0.7036 0,-0.92069 -0.22153,-0.22156 -3.46115,0.22155 -3.6827,0 -0.21699,-0.21701 0.21701,-0.70369 0,-0.9207 -0.46033,-0.46026 -2.30168,0.46035 -2.76201,0 -0.21702,-0.21701 0.21699,-0.70369 0,-0.92061 -0.21702,-0.21701 -0.70368,0.21692 -0.92067,0 -0.21702,-0.21701 0.21699,-0.70369 0,-0.9207 -0.43403,-0.43401 -1.40736,0.43402 -1.84137,0 -0.21699,-0.217 0.21701,-0.7036 0,-0.92069 -0.21699,-0.21692 -0.70367,0.21709 -0.92067,0 -0.21702,-0.21692 0.217,-0.7036 0,-0.9207 -0.43401,-0.43401 -1.40734,0.43402 -1.84136,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.92069 -0.90821,-0.90818 -1.84135,1.88659 -1.84135,-0.92061 0,-2.45511 0.3069,0.3069 -0.92067,-0.9207 -0.46034,-0.46035 0.46033,-2.30165 0,-2.762 -0.21701,-0.21701 -0.70368,0.21701 -0.92068,0 -0.217,-0.21701 -0.30689,-0.9207 0,-0.9207 0.30689,0 0,0.6138 0,0.9207 0,0.61371 0,1.22759 0,1.8413 0,0.3069 0,0.61389 0,0.9207 0,0.3069 0.217,0.70369 0,0.9207 -0.217,0.217 -0.70367,-0.21701 -0.92068,0 -0.46033,0.46034 0.46034,2.30165 0,2.762 -1.22756,1.22759 -0.92067,-1.53441 -0.92067,0.92069 0,0.22327 0.0296,2.73241 0,2.76201 -0.217,0.21709 -0.70366,0.21709 -0.92067,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.9207 -0.21701,-0.21701 -0.70368,0.21701 -0.92067,0 -0.21702,-0.21701 0.21699,-0.70369 0,-0.92061 -0.21702,-0.21701 -0.70368,0.21692 -0.92067,0 -0.21702,-0.21701 0.21699,-0.70369 0,-0.9207 -0.21702,-0.217 -0.70368,0.21701 -0.9207,0 -0.21699,-0.217 0.21702,-0.7036 0,-0.92069 -0.21699,-0.21692 -0.70365,0.21709 -0.92067,0 -0.30626,-0.3063 0.30626,-1.5351 0,-1.84139 -0.21699,-0.21701 -0.70367,0.217 -0.92067,0 -0.21702,-0.21701 0.13725,-0.64614 0,-0.92061 -0.19409,-0.38822 -0.61379,-0.6138 -0.92067,-0.9207 -0.3069,-0.30681 -0.53249,-0.72659 -0.92069,-0.9207 -0.27449,-0.13723 -0.70366,0.2171 -0.92068,0 -0.21699,-0.21692 0.21702,-0.70368 0,-0.92069 -0.21699,-0.21701 -0.70365,0.21701 -0.92067,0 -0.217,-0.21701 0.21702,-0.7036 0,-0.92061 -0.217,-0.21701 -0.70367,0.21701 -0.92067,0 -0.21701,-0.21701 0.217,-0.70369 0,-0.9207 -0.21701,-0.217 -0.70367,0.21701 -0.92067,0 -0.21701,-0.217 0.217,-0.70369 0,-0.92069 -0.21701,-0.21693 -0.70368,0.217 -0.92068,0 -0.217,-0.21693 0.217,-0.70361 0,-0.9207 -1.22757,-1.22751 -0.92068,1.53458 -0.92068,-0.92061 0,-0.3069 0,-0.6138 0,-0.9207 0,-0.30689 0.13725,-0.64613 0,-0.92069 -0.19409,-0.38821 -0.72658,-0.5324 -0.92067,-0.9207 -0.24973,-0.49937 0.25192,-3.43078 0,-3.68269 -0.21701,-0.21693 -0.70367,0.217 -0.92067,0 -0.25192,-0.25184 0.24971,-3.18324 0,-3.6827 -0.19411,-0.38813 -0.72659,-0.53249 -0.92069,-0.92061 -0.27449,-0.54904 0.43402,-1.40738 0,-1.84139 -0.217,-0.21701 -0.70366,0.217 -0.92067,0 -0.217,-0.21701 0.13725,-0.64614 0,-0.9207 -0.1941,-0.38813 -0.72658,-0.53248 -0.92067,-0.92061 -0.13726,-0.27456 0.21701,-0.70369 0,-0.9207 -0.21702,-0.217 -0.70368,0.21701 -0.92068,0 -0.21701,-0.217 0.217,-0.70368 0,-0.92069 -0.43401,-0.43402 -1.40733,0.43401 -1.84136,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.9207 -0.217,-0.21701 -0.61378,0 -0.92068,0 -0.30689,0 -0.61377,0 -0.92067,0 -0.61379,0 -1.22757,0 -1.84134,0 -0.3069,0 -1.22757,0 -0.92068,0 0.61378,0 2.45513,0 1.84135,0 -0.92067,0 -1.88859,0.2912 -2.76202,0 -0.29115,-0.097 -0.3069,-0.92069 0,-0.92069 0.61378,0 -0.43402,1.40737 0,1.84139 0.217,0.21701 0.70367,-0.21701 0.92067,0 0.434,0.43401 -0.43402,1.40737 0,1.84139 0.217,0.21701 0.70367,-0.21701 0.92068,0 0.30625,0.30621 -0.30626,1.53509 0,1.84131 0.217,0.217 0.70366,-0.21701 0.92067,0 0.43401,0.43401 -0.2745,1.29235 0,1.84139 0.1941,0.38812 0.72658,0.53248 0.92067,0.92061 0.18253,0.36505 -0.18821,2.57381 0,2.76208 0.21702,0.21701 0.70368,-0.217 0.92067,0 0.21702,0.21701 0.21702,0.70369 0,0.92062 -0.21699,0.217 -0.61377,0 -0.92067,0 -1.22757,0.92069 -2.3669,1.97262 -3.68269,2.76208 -0.18534,0.11117 -4.0768,0 -4.60338,0 -2.45514,0 -4.91028,0 -7.36541,0 -0.30688,0 -0.70367,0.21701 -0.92067,0 -0.217,-0.217 0.217,-0.70369 0,-0.92069 -0.22154,-0.22156 -3.46116,0.22155 -3.68271,0 -0.217,-0.21701 0.21702,-0.70369 0,-0.9207 -0.46033,-0.46035 -2.30168,0.46035 -2.76201,0 -0.21702,-0.21701 0.21699,-0.70369 0,-0.92069 -0.46036,-0.46027 -2.30171,0.46034 -2.76204,0 -0.21701,-0.21693 0.217,-0.70361 0,-0.92062 -0.21701,-0.217 -0.61379,0 -0.92067,0 -0.3069,0 -0.6138,0 -0.92069,0 -2.45512,0 0.30689,0.3069 -0.92067,-0.92069 -0.46034,-0.46035 -2.30168,0.46035 -2.76202,0 -0.21701,-0.21701 0.217,-0.70369 0,-0.9207 -0.21701,-0.217 -0.64619,0.13724 -0.92068,0 -0.38819,-0.1941 -0.53248,-0.72659 -0.92067,-0.92069 -0.2745,-0.13724 -0.6462,0.13732 -0.92068,0 -0.3882,-0.19402 -0.53249,-0.72659 -0.92067,-0.92061 -0.2745,-0.13724 -0.70368,0.217 -0.92067,0 -0.21702,-0.21701 0.21699,-0.70369 0,-0.9207 -0.21702,-0.21701 -0.70368,0.21701 -0.9207,0 -0.21699,-0.21701 0.21702,-0.70369 0,-0.92069 -0.21699,-0.21701 -0.70365,0.217 -0.92067,0 -0.434,-0.43402 0.43401,-1.40738 0,-1.84131 -0.21699,-0.21701 -0.70367,0.21701 -0.92067,0 -0.21701,-0.21701 0.217,-0.70369 0,-0.9207 -0.21701,-0.217 -0.70368,0.21701 -0.92067,0 -0.434,-0.43401 0.27449,-1.29235 0,-1.84139 -0.1941,-0.38812 -0.72658,-0.53248 -0.92069,-0.92069 -0.13723,-0.27448 0.21701,-0.70361 0,-0.92061 -0.21699,-0.21701 -0.70366,0.217 -0.92067,0 -0.43401,-0.43402 0.43401,-1.40738 0,-1.8414 -0.21699,-0.217 -0.70366,0.21701 -0.92067,0 -0.21701,-0.217 0.21701,-0.70368 0,-0.92061 -0.21701,-0.217 -0.70368,0.21693 -0.92067,0 -0.21702,-0.217 0.13725,-0.64622 0,-0.92069 -0.19409,-0.38821 -0.72659,-0.53249 -0.92067,-0.9207 -0.27451,-0.54895 0.434,-1.40737 0,-1.84139 -0.21702,-0.21701 -0.70368,0.21701 -0.92069,0 -0.217,-0.21701 0.13724,-0.64613 0,-0.92061 -0.38819,-0.77642 -1.45316,-1.06497 -1.84135,-1.84139 -0.13726,-0.27448 0.217,-0.70369 0,-0.9207 -0.21701,-0.21701 -0.70367,0.21701 -0.92067,0 -0.21701,-0.21701 0.217,-0.7036 0,-0.92061 -0.21701,-0.21701 -0.70367,0.21701 -0.92069,0 -0.217,-0.21701 0.21702,-0.70369 0,-0.92069 -0.217,-0.21701 -0.70366,0.217 -0.92067,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.9207 -0.217,-0.21701 -0.70366,0.21701 -0.92067,0 -0.21702,-0.21701 0.21701,-0.70369 0,-0.9207 -0.21702,-0.217 -0.64619,0.13724 -0.92068,0 -0.38819,-0.19402 -0.53249,-0.72659 -0.92067,-0.92061 -0.2745,-0.13732 -0.70368,0.21693 -0.92069,0 -0.21699,-0.217 0.21701,-0.70368 0,-0.92069 -0.21699,-0.21701 -0.70366,0.21701 -0.92067,0 -0.21699,-0.21701 0.21701,-0.70369 0,-0.9207 -0.21699,-0.21701 -0.70366,0.21701 -0.92067,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.92069 -0.21701,-0.21701 -0.70368,0.217 -0.92067,0 -0.21702,-0.21701 0.21699,-0.70361 0,-0.92061 -0.43401,-0.43402 -1.40735,0.43393 -1.84136,0 -0.217,-0.2171 0.21701,-0.70369 0,-0.9207 -0.43402,-0.43402 -1.40734,0.43402 -1.84135,0 -0.21701,-0.21701 0.217,-0.70369 0,-0.9207 -0.30678,-0.30681 -1.53458,0.30682 -1.84136,0 -0.217,-0.217 0.21702,-0.70368 0,-0.92069 -0.43401,-0.43402 -1.29235,0.27447 -1.84134,0 -0.38819,-0.19411 -0.53249,-0.72659 -0.92067,-0.9207 -0.54899,-0.27447 -1.40734,0.43402 -1.84136,0 -0.217,-0.21692 0.217,-0.7036 0,-0.92061 -0.43401,-0.43401 -1.40734,0.43402 -1.84135,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.92069 -0.434,-0.43402 -1.40734,0.43401 -1.84134,0 -0.21701,-0.21701 0.21699,-0.70369 0,-0.9207 -0.30716,-0.30716 -1.53421,0.30716 -1.84136,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.9207 -0.0371,-0.0369 -3.34461,0 -3.68271,0 -0.30689,0 -0.70365,0.21701 -0.92067,0 -0.21701,-0.217 -0.3069,-0.92061 0,-0.92061 0.3069,0 0.21702,0.70361 0,0.92061 -0.21701,0.21701 -0.70368,-0.217 -0.92067,0 -1.22757,1.2276 1.53445,0.9207 -0.92067,0.9207 -1.53447,0.6138 -3.06893,1.22759 -4.60339,1.84139 -0.30688,0.3069 -0.53249,0.72659 -0.92068,0.92061 -0.27449,0.13733 -0.70366,-0.21692 -0.92067,0 -0.21702,0.21701 0.21701,0.70369 0,0.9207 -0.21702,0.21701 -0.64619,-0.13724 -0.92067,0 -0.38821,0.1941 -0.53249,0.72659 -0.92068,0.92069 -0.27449,0.13724 -0.70367,-0.217 -0.92068,0 -0.217,0.21701 0.21701,0.70369 0,0.9207 -0.217,0.21701 -0.70366,-0.21701 -0.92067,0 -0.21701,0.21701 0.21701,0.7036 0,0.9207 -0.21701,0.217 -0.70366,-0.2171 -0.92068,0 -0.21701,0.217 0.21702,0.7036 0,0.92061 -0.21701,0.217 -0.70368,-0.21701 -0.92067,0 -0.21701,0.217 0.21699,0.70368 0,0.92069 -0.21701,0.21701 -0.70368,-0.21701 -0.92067,0 -0.21701,0.21701 0.21699,0.70369 0,0.9207 -0.21701,0.21701 -0.70368,-0.21701 -0.92069,0 -0.217,0.21701 0.21701,0.70369 0,0.92069 -0.217,0.21693 -0.70366,-0.217 -0.92067,0 -0.217,0.21693 0.13725,0.64614 0,0.92061 -0.12047,0.24094 -1.7209,1.60046 -1.84135,1.8414 -0.13725,0.27447 0.217,0.70368 0,0.92069 -0.21701,0.21701 -0.70367,-0.21701 -0.92068,0 -0.217,0.21701 0.21701,0.7036 0,0.92061 -0.217,0.21701 -0.70366,-0.21701 -0.92068,0 -0.21699,0.21701 0.21702,0.70369 0,0.9207 -0.21699,0.21701 -0.70366,-0.21701 -0.92067,0 -0.21701,0.21701 0.21701,0.70369 0,0.92069 -0.21701,0.21701 -0.70367,-0.217 -0.92067,0 -0.21702,0.21701 0.217,0.70369 0,0.9207 -0.21702,0.21701 -0.70367,-0.21701 -0.92067,0 -0.21702,0.21701 0.217,0.7036 0,0.92061 -0.21702,0.21701 -0.70368,-0.21701 -0.92069,0 -0.217,0.21701 0.13725,0.64622 0,0.9207 -0.19409,0.38821 -0.72658,0.53248 -0.92067,0.92069 -0.13725,0.27448 0.21701,0.70369 0,0.9207 -0.217,0.21701 -0.70366,-0.21701 -0.92068,0 -0.21701,0.21701 0.21702,0.70369 0,0.92069 -0.21701,0.21693 -0.70367,-0.217 -0.92067,0 -0.434,0.43393 0.43401,1.40729 0,1.84131 -0.21701,0.21701 -0.70367,-0.21701 -0.92067,0 -0.21701,0.21701 0.217,0.70369 0,0.9207 -0.21701,0.217 -0.70368,-0.21701 -0.92069,0 -0.21699,0.217 0.21701,0.70368 0,0.92061 -0.21699,0.21709 -0.70366,-0.21693 -0.92067,0 -0.217,0.21709 0.21701,0.70368 0,0.92069 -0.217,0.21701 -0.70368,-0.21701 -0.92067,0 -0.21701,0.21701 0.21699,0.70369 0,0.9207 -0.0371,0.0369 -3.3446,0 -3.6827,0 -0.4341,0 -4.56166,0.042 -4.60339,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.9207 -0.434,-0.43401 -1.29236,0.27456 -1.84135,0 -0.38818,-0.1941 -0.53247,-0.72659 -0.92068,-0.92069 -0.27448,-0.13724 -0.70366,0.21709 -0.92067,0 -0.217,-0.21693 0.21701,-0.70361 0,-0.92061 -0.43401,-0.43402 -1.40733,0.43401 -1.84134,0 -0.21701,-0.21701 0.21699,-0.70369 0,-0.9207 -0.13541,-0.13535 -2.76203,0.10833 -2.76203,0 0,-0.3069 1.22757,0 0.92067,0 -0.61378,0 -1.29236,-0.27448 -1.84134,0 -0.27451,0.13724 0,0.6138 0,0.9207 0,1.8413 0,3.68269 0,5.524 0,0.3069 0,0.6138 0,0.9207 0,0.30689 0.21699,0.70368 0,0.92069 -0.21702,0.21701 -0.70368,-0.21701 -0.92067,0 -0.21702,0.21701 0,0.6138 0,0.9207 0,0.3069 0,0.61379 0,0.92061 0,1.53449 0,3.06898 0,4.60339 0,0.3069 0,0.6138 0,0.9207 0,0.3069 0.13723,0.64622 0,0.92069 -0.19412,0.38813 -0.72659,0.53249 -0.9207,0.92061 -0.13723,0.27456 0.13726,0.64622 0,0.9207 -0.19409,0.38821 -0.61377,1.22759 -0.92067,0.92069 -0.3069,-0.30689 1.22757,-1.2275 0.92067,-0.92069 -0.61377,0.6138 -1.22757,1.22759 -1.84134,1.84139 0,0.3069 0.217,0.7036 0,0.92061 -0.21702,0.21709 -0.70368,-0.21701 -0.92068,0 -0.21701,0.21709 0.217,0.70377 0,0.9207 -0.21701,0.217 -0.70367,-0.21693 -0.92068,0 -0.217,0.217 0.21701,0.70369 0,0.92069 -0.43401,0.43402 -1.40734,-0.43401 -1.84135,0 -0.217,0.21701 0.21702,0.70369 0,0.9207 -0.217,0.21701 -0.61377,0 -0.92067,0 0,0.3069 0.21699,0.7036 0,0.92061 -0.21701,0.21701 -0.70368,-0.21701 -0.92067,0 -0.21701,0.21701 0.21699,0.70377 0,0.92069 -0.43402,0.43402 -1.40736,-0.43401 -1.84136,0 -0.21699,0.2171 0.21701,0.70369 0,0.9207 -0.46033,0.46035 -2.30168,-0.46035 -2.76201,0 -0.21702,0.21701 0,0.6138 0,0.9207 0,0.3069 0,0.61379 0,0.92061 0,0.43418 0.0417,4.5617 0,4.60339 -0.21702,0.21701 -0.70368,-0.21701 -0.9207,0 -0.21699,0.21701 0.21702,0.70369 0,0.9207 -0.0296,0.0292 -2.53872,0 -2.76201,0 -0.3069,0 -0.61379,0 -0.92069,0 -0.30688,0 -0.92067,0.3069 -0.92067,0 0,-0.3069 1.22757,0 0.92067,0 -0.61378,0 -1.29236,-0.27448 -1.84135,0 -0.54898,0.27456 0.43402,1.40737 0,1.84139 -0.217,0.21701 -0.70367,-0.21701 -0.92067,0 -0.21701,0.21701 0.217,0.7036 0,0.92069 -0.21701,0.21693 -0.70367,-0.21709 -0.92067,0 -0.46035,0.46027 0.46034,2.30166 0,2.76201 -0.21701,0.217 -0.70367,-0.21701 -0.92068,0 -0.30627,0.30629 0.30626,1.53509 0,1.8413 -0.217,0.21701 -0.70367,-0.21701 -0.92067,0 -0.30627,0.3063 0.30626,1.5351 0,1.84139 -0.217,0.21701 -0.70368,-0.217 -0.92068,0 -0.21701,0.21701 0,0.6138 0,0.92061 0,0.3069 0,0.6138 0,0.92079 0,2.4551 0.3069,-0.30699 -0.92067,0.92061 -0.22156,0.22155 0.22153,3.46114 0,3.68278 -0.21701,0.21692 -0.70368,-0.21709 -0.92069,0 -0.217,0.21692 0,0.61371 0,0.92061 0,0.4341 0.0418,4.56162 0,4.60339 -1.22755,1.22751 -0.92067,-1.53449 -0.92067,0.92061 0,0.22336 0.0296,2.7325 0,2.76209 -0.217,0.21701 -0.70366,-0.21701 -0.92068,0 -0.21701,0.21701 0.21702,0.70369 0,0.92061 -0.30744,0.3075 -1.53389,-0.30741 -1.84134,0 -0.21702,0.2171 0.217,0.70369 0,0.9207 -0.43402,0.43401 -1.40735,-0.43402 -1.84136,0 -0.217,0.21701 0.21701,0.70369 0,0.92069 -0.217,0.21701 -0.70366,-0.217 -0.92068,0 -0.217,0.21701 0,0.6138 0,0.9207 0,1.84131 0,3.6827 0,5.524 0,0.64039 0.16647,4.27051 0,4.6034 -0.19408,0.38821 -0.72657,0.53248 -0.92067,0.92069 -0.57905,1.15812 1.32228,1.84131 -0.92067,1.84131 -1.22756,1.22759 -2.45513,2.45519 -3.6827,3.68278 0,0.30682 0.217,0.70361 0,0.92061 -1.90492,1.90495 0.0744,-2.9109 -1.84136,0.9207 -0.13724,0.27448 0.21701,0.70369 0,0.92069 -0.217,0.21701 -0.70366,-0.217 -0.92067,0 -0.21702,0.21701 0.21701,0.70369 0,0.9207 -0.21702,0.21692 -0.70368,-0.21701 -0.92067,0 -0.21702,0.21692 0.21699,0.7036 0,0.92062 -0.21702,0.21701 -0.70368,-0.21702 -0.92068,0 -0.21701,0.21701 0.217,0.70369 0,0.9207 -0.21701,0.21709 -0.70368,-0.21701 -0.92069,0 -0.21699,0.21709 0.21701,0.70368 0,0.92069 -0.21699,0.21701 -0.70366,-0.21701 -0.92067,0 -0.217,0.21701 0.21701,0.70369 0,0.9207 -0.217,0.217 -0.70367,-0.21701 -0.92067,0 -0.21701,0.217 0.217,0.7036 0,0.92069 -0.21701,0.21693 -0.70368,-0.21709 -0.92068,0 -0.217,0.21693 0.217,0.70361 0,0.92061 -0.217,0.21701 -0.70367,-0.217 -0.92067,0 -0.21701,0.21701 0.217,0.70369 0,0.9207 -0.21701,0.21701 -0.70367,-0.21701 -0.92068,0 -0.217,0.21701 0.21701,0.70369 0,0.9207 -0.217,0.217 -0.70367,-0.21701 -0.92067,0 -0.21701,0.217 0.217,0.7036 0,0.92061 -0.21701,0.217 -0.70368,-0.21701 -0.92067,0 -0.21702,0.217 0.21699,0.70368 0,0.92078 -0.21702,0.21692 -0.70368,-0.2171 -0.92068,0 -0.21701,0.21692 0.13724,0.64613 0,0.92061 -0.5524,1.10485 -2.20962,1.65723 -2.76203,2.76208 -0.13725,0.27448 0.21702,0.70361 0,0.92062 -0.21702,0.217 -0.64618,-0.13724 -0.92067,0 -0.24446,0.12222 -2.6398,2.51763 -2.76204,2.762 -0.13724,0.27456 0.21701,0.70369 0,0.92078 -0.21699,0.21692 -0.70367,-0.21709 -0.92067,0 -0.21701,0.21692 0.217,0.7036 0,0.92061 -0.21701,0.21701 -0.70368,-0.21701 -0.92067,0 -0.21701,0.21701 0.13723,0.64622 0,0.92069 -0.19411,0.38822 -0.72658,0.53249 -0.92068,0.92061 -0.13724,0.27457 0.217,0.70369 0,0.92079 -0.217,0.21692 -0.70367,-0.2171 -0.92068,0 -0.21699,0.21692 0.21701,0.7036 0,0.92061 -0.21699,0.217 -0.70366,-0.21701 -0.92067,0 -0.21701,0.217 0.13725,0.64622 0,0.92069 -0.19409,0.38813 -0.72658,0.53249 -0.92067,0.92061 -0.13726,0.27456 0.217,0.70369 0,0.9207 -0.21702,0.21701 -0.70368,-0.21701 -0.92067,0 -0.21702,0.21701 0.21699,0.70369 0,0.92069 -0.21702,0.21701 -0.70368,-0.217 -0.92069,0 -0.217,0.21701 0.13725,0.64622 0,0.9207 -0.1941,0.38813 -0.72658,0.53248 -0.92068,0.92061 0,2.45519 0.3069,-0.3069 -0.92067,0.9207 -0.30933,0.30938 0.30934,1.53209 0,1.84139 -0.21701,0.21701 -0.70368,-0.21701 -0.92067,0 -0.46034,0.46035 0.46034,2.30165 0,2.762 -0.21701,0.21701 -0.70368,-0.21701 -0.92067,0 -0.21702,0.21701 0,0.6138 0,0.9207 0,0.30689 0,0.61379 0,0.92061 0,0.30698 0,0.61379 0,0.92069 0,0.30699 0.21699,0.70378 0,0.9207 -0.21702,0.21701 -0.70368,-0.21692 -0.9207,0 -0.43399,0.43401 0.6138,1.84139 0,1.84139 -0.30687,0 0.3069,-0.9207 0,-0.9207 -1.9158,0 -0.37044,1.29116 -0.92067,1.84131 -0.21699,0.21701 -0.70367,-0.21701 -0.92067,0 -1.90491,1.90495 2.91095,-0.0746 -0.92067,1.84139 -0.2745,0.13724 -0.70368,-0.21701 -0.92068,0 -1.9049,1.90487 2.91096,-0.0746 -0.92068,1.84139 -0.27449,0.13716 -0.70366,-0.21709 -0.92067,0 -0.21701,0.21693 0.21701,0.70361 0,0.92061 -0.21701,0.21701 -0.64619,-0.13723 -0.92067,0 -0.3882,0.19411 -0.53249,0.72659 -0.92067,0.9207 -0.2745,0.13724 -0.70367,-0.21701 -0.92069,0 -0.217,0.21701 0.21702,0.70369 0,0.9207 -0.217,0.217 -0.70366,-0.21701 -0.92067,0 -0.217,0.217 0.21701,0.7036 0,0.92069 -0.217,0.21692 -0.70368,-0.21709 -0.92068,0 -0.21701,0.21692 0.217,0.7036 0,0.92061 -0.21701,0.21701 -0.64618,-0.13724 -0.92068,0 -0.38819,0.19411 -0.53248,0.72659 -0.92068,0.9207 -0.27449,0.13724 -0.70366,-0.21701 -0.92068,0 -0.21699,0.21701 0.21702,0.70369 0,0.92069 -0.21699,0.21701 -0.70365,-0.217 -0.92067,0 -0.217,0.21701 0.21702,0.70361 0,0.92061 -0.217,0.21701 -0.70368,-0.217 -0.92067,0 -0.21701,0.21701 0.21699,0.70369 0,0.92079 -0.21701,0.21692 -0.70368,-0.2171 -0.92067,0 -0.21701,0.21692 0.21699,0.7036 0,0.92061 -0.21701,0.217 -0.64618,-0.13724 -0.92069,0 -0.38818,0.1941 -0.53247,0.72659 -0.92067,0.92069 -0.27449,0.13724 -0.70366,-0.21701 -0.92067,0 -0.21702,0.21701 0.21701,0.70369 0,0.9207 -0.21702,0.21692 -0.92067,0.30681 -0.92067,0 0,-0.3069 1.13768,0.21692 0.92067,0 -0.61379,-0.3069 -1.22757,-0.6138 -1.84134,-0.9207 0,-0.3069 0.21699,-0.70369 0,-0.92069 -0.21702,-0.21701 -0.70368,0.217 -0.9207,0 -0.43401,-0.43402 0.43402,-1.40729 0,-1.8414 -0.21699,-0.217 -0.70366,0.21701 -0.92067,0 -0.43401,-0.43393 0.43402,-1.40729 0,-1.8413 -0.21699,-0.21701 -0.70367,0.21701 -0.92067,0 -0.21702,-0.21701 0.217,-0.70369 0,-0.9207 -0.21702,-0.21701 -0.70368,0.21701 -0.92067,0 -0.21702,-0.21701 0.21699,-0.70369 0,-0.92061 -0.21702,-0.21709 -0.61379,0 -0.92069,0 -0.30688,0 -0.70366,-0.21709 -0.92068,0 0,2.45511 0.3069,-0.30698 -0.92067,0.92061 -0.32353,0.32354 0.32354,1.51786 0,1.84139 -0.217,0.21701 -0.70367,-0.217 -0.92067,0 -0.434,0.43402 0.43401,1.40738 0,1.8414 -0.21701,0.21692 -0.70368,-0.2171 -0.92067,0 -0.21701,0.21692 0.21699,0.7036 0,0.92061 -0.21701,0.217 -0.70368,-0.21701 -0.92068,0 -0.217,0.217 0.13724,0.64622 0,0.92069 -0.1941,0.38821 -0.72658,0.53249 -0.92067,0.9207 -0.13726,0.27447 0.217,0.7036 0,0.92069 -0.217,0.21693 -0.70367,-0.21709 -0.92068,0 -0.43401,0.43402 0.434,1.40729 0,1.84131 -0.21701,0.21701 -0.70368,-0.21701 -0.92067,0 -0.21701,0.21701 0.21699,0.70369 0,0.9207 -0.21701,0.217 -0.70368,-0.21701 -0.92067,0 -0.43403,0.43401 0.434,1.40729 0,1.84139 -0.21702,0.21692 -0.70368,-0.2171 -0.9207,0 -0.434,0.43401 0.43402,1.40729 0,1.8413 -0.21699,0.21701 -0.70365,-0.217 -0.92067,0 -0.21699,0.21701 0.21702,0.70369 0,0.92061 -0.21699,0.21701 -0.70367,-0.21692 -0.92067,0 -0.90823,0.90826 1.88654,1.8414 -0.92067,1.8414 -1.50664,0.42423 -0.64633,-6.81671 -0.92069,-7.3654 -0.19409,-0.38821 -0.72658,-0.53248 -0.92067,-0.9207 -0.13725,-0.27447 0,-0.61379 0,-0.92061 0,-0.30698 0,-0.61388 0,-0.92069 0,-1.5345 0,-3.06899 0,-4.6034 0,-0.30689 0.13725,-0.64622 0,-0.92069 -0.19409,-0.38821 -0.72659,-0.53249 -0.92068,-0.9207 -0.27448,-0.54895 0.43402,-1.40729 0,-1.8413 -0.217,-0.21701 -0.70367,0.217 -0.92067,0 -0.217,-0.21701 0.13724,-0.64622 0,-0.9207 -0.19408,-0.38821 -0.72658,-0.53248 -0.92067,-0.9207 -0.13725,-0.27447 0.13723,-0.64613 0,-0.92061 -0.19411,-0.38821 -0.72658,-0.53248 -0.92068,-0.92069 -0.13724,-0.27448 0.13724,-0.64622 0,-0.9207 -0.1941,-0.38821 -0.72658,-0.53248 -0.92067,-0.92069 -0.13726,-0.27448 0.217,-0.70369 0,-0.9207 -0.217,-0.21701 -0.70368,0.21701 -0.92067,0 -0.43402,-0.43393 0.434,-1.40729 0,-1.84131 -0.21702,-0.217 -0.70368,0.21701 -0.92068,0 -0.21701,-0.217 0.217,-0.70368 0,-0.92069 -0.21701,-0.21692 -0.70368,0.21701 -0.92069,0 -0.21699,-0.21692 0.21701,-0.7036 0,-0.9207 -0.21699,-0.21701 -0.70366,0.2171 -0.92067,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.92069 -0.217,-0.21693 -0.70366,0.217 -0.92068,0 -0.21701,-0.21693 0.21702,-0.70361 0,-0.92061 -0.21701,-0.21701 -0.70367,0.217 -0.92067,0 -0.43401,-0.43402 0.43401,-1.40738 0,-1.8414 -0.21701,-0.21692 -0.70367,0.2171 -0.92067,0 -0.21701,-0.21692 0.217,-0.70368 0,-0.92069 -0.21701,-0.21701 -0.70368,0.21701 -0.92069,0 -0.21699,-0.21701 0.21701,-0.7036 0,-0.92061 -0.21699,-0.21701 -0.61377,0 -0.92067,0 0,-0.3069 0.21701,-0.70369 0,-0.9207 -0.217,-0.21701 -0.70366,0.21701 -0.92067,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.92069 -0.30715,-0.30716 -1.53421,0.30715 -1.84135,0 -0.21701,-0.21693 0.217,-0.70361 0,-0.9207 -0.43402,-0.43401 -1.40735,0.43402 -1.84135,0 -0.217,-0.21701 0.217,-0.7036 0,-0.92061 -0.43402,-0.43401 -1.40734,0.43402 -1.84135,0 -0.21701,-0.21701 0,-0.6138 0,-0.9207 0,-0.4341 0.0418,-4.56162 0,-4.6033 -0.21701,-0.2171 -0.70367,0.21692 -0.92069,0 -0.30595,-0.30604 0.30597,-1.53544 0,-1.8414 -0.21699,-0.217 -0.70365,0.21701 -0.92067,0 -0.90822,-0.90825 1.88654,-1.8413 -0.92067,-1.8413 0.4705,-5.55746 -3.49687,0.18578 -4.60338,-0.92078 -0.21701,-0.21701 0.217,-0.70369 0,-0.9207 -0.22153,-0.22147 -3.46117,0.22164 -3.6827,0 -0.21701,-0.21692 0.21701,-0.7036 0,-0.92061 -0.21701,-0.21701 -0.61377,0 -0.92067,0 -1.53447,0 -3.06893,0 -4.60338,0 -0.3069,0 -0.70368,0.21701 -0.92067,0 -0.21702,-0.21701 0.21699,-0.70369 0,-0.92069 -0.21702,-0.21701 -0.6138,0 -0.9207,0 -0.30687,0 -0.61377,0 -0.92067,0 -1.84134,0 -3.6827,0 -5.52404,0 -0.3069,0 -0.6138,0 -0.92067,0 -0.3069,0 -0.64619,0.13723 -0.9207,0 -0.38818,-0.19411 -0.53247,-0.72659 -0.92067,-0.92062 -0.55904,-0.27953 -4.96498,0.27946 -5.52405,0 -0.3882,-0.1941 -0.53249,-0.72658 -0.92067,-0.92078 -0.36505,-0.18244 -2.57381,0.18828 -2.76203,0 -0.21701,-0.217 0.21701,-0.7036 0,-0.92061 -0.43401,-0.43401 -1.40734,0.43402 -1.84134,0 -0.21702,-0.217 0.217,-0.70369 0,-0.92069 -0.22156,-0.22156 -3.46117,0.22155 -3.68271,0 -0.21701,-0.21701 0.21699,-0.70369 0,-0.92061 -0.0418,-0.042 -4.16928,0 -4.60338,0 -0.30689,0 -1.22756,0 -0.92068,0 0.61379,0 1.84135,0.61371 1.84135,0 0,-1.05802 -2.10135,-0.92078 -2.76202,-0.92078 -2.45514,0 0.3069,0.30689 -0.92068,-0.92061 -0.43401,-0.43402 -1.29237,0.27447 -1.84134,0 -0.3882,-0.19411 -0.53249,-0.72659 -0.92069,-0.9207 -0.54899,-0.27448 -1.40734,0.43401 -1.84134,0 -0.21702,-0.21701 0.21699,-0.70369 0,-0.9207 -0.43402,-0.43393 -1.40734,0.43402 -1.84137,0 -0.21699,-0.217 0.21701,-0.70368 0,-0.92061 -0.18822,-0.18827 -2.39698,0.18244 -2.76202,0 -0.38819,-0.1941 -0.5325,-0.72659 -0.92068,-0.92069 -0.63594,-0.31797 -4.28018,0.32319 -4.60338,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.9207 -0.43401,-0.43401 -1.40734,0.43402 -1.84135,0 -0.21701,-0.21701 0.217,-0.7036 0,-0.92069 -0.30714,-0.30716 -1.53422,0.30715 -1.84136,0 -0.21699,-0.21701 0.21701,-0.70369 0,-0.9207 -0.46033,-0.46027 -2.30168,0.46035 -2.76201,0 -0.21701,-0.21702 0.21699,-0.7037 0,-0.92062 -0.21701,-0.21701 -0.61379,0 -0.92068,0 -1.84135,0 -3.68271,0 -5.52406,0 -0.22329,0 -2.73241,0.0292 -2.76203,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.9207 -0.22152,-0.22155 -3.46112,0.22156 -3.68269,0 -0.21701,-0.217 0.21699,-0.70368 0,-0.92069 -0.46034,-0.46035 -2.3017,0.46035 -2.76203,0 -0.21701,-0.21692 0.217,-0.70369 0,-0.9207 -0.22153,-0.22146 -3.46114,0.22156 -3.68271,0 -0.21701,-0.217 0.21701,-0.70369 0,-0.92061 -0.43401,-0.43401 -1.40734,0.43393 -1.84135,0 -0.21701,-0.21709 0.21701,-0.70369 0,-0.92069 -0.28508,-0.28512 -4.3183,0.28502 -4.60337,0 -0.21701,-0.21701 0.21699,-0.70369 0,-0.9207 -0.0295,-0.0292 -2.53875,0 -2.76203,0 -0.2233,0 -2.73241,0.0292 -2.76203,0 -0.21701,-0.21692 0.21701,-0.7036 0,-0.92069 -0.46034,-0.46035 -2.30169,0.46034 -2.76203,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.9207 -0.21701,-0.21701 -0.61378,0 -0.92068,0 -0.30689,0 -0.61378,0 -0.92067,0 -1.84135,0 -3.6827,0 -5.52405,0 -0.30689,0 -0.70367,0.21701 -0.92068,0 -0.217,-0.21701 0.21701,-0.7036 0,-0.92061 -0.46034,-0.46035 -2.30169,0.46035 -2.76203,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.9207 -0.0368,-0.0369 -3.34457,0 -3.6827,0 -0.30689,0 -0.70367,-0.217 -0.92068,0 -0.21699,0.21701 0.21701,0.70369 0,0.9207 -0.0369,0.0369 -3.34456,0 -3.68269,0 -0.3069,0 -0.70367,0.21701 -0.92068,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.9207 -0.21701,-0.217 -0.61378,0 -0.92068,0 -0.30689,0 -0.70366,-0.217 -0.92067,0 -0.21701,0.21701 0,0.6138 0,0.9207 -0.30689,-0.9207 -0.61379,-1.84139 -0.92068,-2.76209 -0.30689,0 -0.70367,0.21709 -0.92067,0 -0.46034,-0.46035 0.46033,-2.30165 0,-2.762 -0.21701,-0.21692 -0.70367,0.21701 -0.92068,0 -0.30625,-0.30621 0.30626,-1.53501 0,-1.84131 -0.21701,-0.217 -0.70367,0.21693 -0.92068,0 -0.217,-0.217 0.21701,-0.70368 0,-0.92069 -0.217,-0.21701 -0.70367,0.21701 -0.92067,0 -0.217,-0.21701 0.217,-0.70369 0,-0.9207 -0.217,-0.21701 -0.70367,0.21701 -0.92068,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.92069 -0.217,-0.21693 -0.70367,0.217 -0.92067,0 -0.217,-0.21693 0.217,-0.70361 0,-0.9207 -0.217,-0.21701 -0.70368,0.21709 -0.92068,0 -0.217,-0.21701 0.217,-0.7036 0,-0.92061 -0.217,-0.21701 -0.70367,0.21701 -0.92067,0 -0.21701,-0.21701 0.217,-0.70369 0,-0.9207 -0.0418,-0.042 -4.16927,0 -4.60338,0 -0.30689,0 -1.22757,0 -0.92068,0 0.61379,0 2.45514,0 1.84136,0 -0.92068,0 -1.84136,0 -2.76203,0 -0.3069,0 -0.70367,-0.217 -0.92068,0 -0.21701,0.21701 0.21701,0.70369 0,0.9207 -0.21701,0.21701 -0.70367,-0.21701 -0.92068,0 -0.217,0.21701 0.21701,0.7036 0,0.92061 -0.217,0.21709 -0.70367,-0.21701 -0.92067,0 -0.46034,0.46035 0.46034,2.30174 0,2.76209 -0.217,0.21701 -0.70367,-0.21701 -0.92068,0 -0.30625,0.3063 0.30626,1.53509 0,1.8413 -0.217,0.2171 -0.70367,-0.21692 -0.92067,0 -0.217,0.2171 0,0.61389 0,0.9207 0,0.3069 0,1.22759 0,0.9207 0,-0.6138 0,-1.22751 0,-1.8414 -2.93532,0.95801 -5.41555,0.9207 -8.28608,0.9207 -0.30689,0 -0.61379,0 -0.92068,0 -0.30689,0 -0.70367,0.21701 -0.92067,0 -0.21701,-0.21692 0.217,-0.7036 0,-0.9207 -0.43401,-0.43401 -1.29236,0.27457 -1.84136,0 -0.38817,-0.19402 -0.53249,-0.7265 -0.92067,-0.92061 -0.549,-0.27447 -1.40734,0.43393 -1.84135,0 -0.217,-0.217 0.217,-0.70368 0,-0.92069 -0.0295,-0.0292 -2.53874,0 -2.76203,0 -2.14824,0 -4.29648,0 -6.44473,0 -0.4146,0 -2.4818,0.14015 -2.76202,0 -0.38818,-0.19411 -0.5325,-0.72659 -0.92067,-0.9207 -0.36506,-0.18244 -2.57381,0.18819 -2.76203,0 -0.21701,-0.21701 0.217,-0.70369 0,-0.92069 -0.22153,-0.22147 -3.46114,0.22155 -3.68271,0 -0.217,-0.21693 0.21701,-0.70361 0,-0.9207 -0.22152,-0.22147 -3.46113,0.22164 -3.6827,0 -0.217,-0.21701 0.217,-0.7036 0,-0.92061 -0.18822,-0.18819 -2.39698,0.18253 -2.76202,0 -0.38819,-0.19411 -0.5325,-0.72659 -0.92068,-0.9207 -0.27448,-0.13723 -0.64615,0.13724 -0.92067,0 -0.38819,-0.1941 -0.53245,-0.72659 -0.92068,-0.92069 -0.27448,-0.13724 -0.64615,0.13732 -0.92068,0 -0.38818,-0.19402 -0.53249,-0.72651 -0.92067,-0.9207 -0.27448,-0.13724 -0.64616,0.13733 -0.92068,0 -0.38819,-0.19402 -0.53249,-0.7265 -0.92068,-0.92061 -0.27447,-0.13724 -0.70367,0.21701 -0.92067,0 -0.21701,-0.21701 0.217,-0.70369 0,-0.92069 -0.46034,-0.46027 -2.30169,0.46034 -2.76203,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.9207 -0.217,-0.21701 -0.70367,0.21701 -0.92068,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.9207 -0.217,-0.21692 -0.70367,0.21701 -0.92067,0 -0.217,-0.21692 0.13729,-0.64613 0,-0.92061 -0.19407,-0.38821 -0.72656,-0.53257 -0.92067,-0.92069 -0.13724,-0.27448 0.217,-0.70369 0,-0.92061 -0.21701,-0.2171 -0.70368,0.21692 -0.92068,0 -0.217,-0.2171 0.217,-0.70378 0,-0.92078 -0.30743,-0.30742 -1.53387,0.30749 -1.84135,0 -0.21701,-0.21701 0.21701,-0.70361 0,-0.92061 -0.21701,-0.21701 -0.64615,0.13723 -0.92068,0 -0.38818,-0.19411 -0.53249,-0.72659 -0.92067,-0.9207 -0.27448,-0.13724 -0.70367,0.21701 -0.92068,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.92061 -0.21701,-0.21709 -0.64615,0.13715 -0.92068,0 -0.38818,-0.19419 -0.53249,-0.72668 -0.92067,-0.9207 -0.27447,-0.13732 -0.70367,0.21693 -0.92068,0 -0.217,-0.21709 0.21701,-0.70377 0,-0.92078 -0.434,-0.43393 -1.29235,0.27456 -1.84135,0 -0.38818,-0.19402 -0.53244,-0.7265 -0.92067,-0.92061 -0.27447,-0.13724 -0.64616,0.13724 -0.92068,0 -0.38818,-0.1941 -0.53249,-0.72659 -0.92067,-0.92069 -0.27448,-0.13724 -0.70367,0.217 -0.92068,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.92061 -0.217,-0.2171 -0.64615,0.13715 -0.92067,0 -0.38819,-0.19411 -0.53245,-0.72659 -0.92068,-0.92079 -0.27448,-0.13723 -0.70367,0.21701 -0.92067,0 -0.21701,-0.217 0.217,-0.7036 0,-0.92061 -0.30714,-0.30715 -1.53422,0.30716 -1.84136,0 -0.217,-0.217 0.21701,-0.70368 0,-0.92069 -0.43401,-0.43402 -1.40734,0.43401 -1.84135,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.9207 -0.30546,-0.30552 -1.53583,0.30553 -1.84135,0 -0.217,-0.21701 0.217,-0.70369 0,-0.92061 -0.43401,-0.4341 -1.29235,0.27448 -1.84135,0 -0.38818,-0.1941 -0.5325,-0.72659 -0.92067,-0.92069 -0.549,-0.27448 -1.29236,0.27447 -1.84135,0 -0.38819,-0.19411 -0.5325,-0.72659 -0.92068,-0.9207 -0.549,-0.27448 -1.40734,0.43402 -1.84135,0 -0.21701,-0.21701 0.217,-0.7036 0,-0.9207 -0.43402,-0.43401 -1.40734,0.43402 -1.84136,0 -0.217,-0.217 0.21701,-0.70368 0,-0.92061 -0.217,-0.21709 -0.70367,0.21693 -0.92067,0 -0.21701,-0.21709 0.217,-0.70368 0,-0.92069 -0.21701,-0.21701 -0.6462,0.13724 -0.92068,0 -0.77636,-0.38821 -1.06493,-1.45318 -1.84135,-1.84139 -0.27447,-0.13724 -0.70367,0.21709 -0.92068,0 -0.21699,-0.21701 0.21701,-0.70369 0,-0.9207 -0.21699,-0.21701 -0.70367,0.21701 -0.92067,0 -0.217,-0.21701 0.217,-0.70369 0,-0.92061 -0.217,-0.21701 -0.70367,0.21692 -0.92067,0 -0.21701,-0.21701 0.217,-0.70369 0,-0.9207 -0.21701,-0.217 -0.70368,0.21701 -0.92068,0 -0.217,-0.217 0.217,-0.7036 0,-0.92069 -0.217,-0.21692 -0.70367,0.21709 -0.92067,0 -0.21701,-0.21692 0.217,-0.7036 0,-0.9207 -0.21701,-0.21701 -0.70367,0.2171 -0.92068,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.92069 -0.21701,-0.21701 -0.70367,0.217 -0.92068,0 -0.217,-0.21701 0.13724,-0.64614 0,-0.92061 -0.19406,-0.38822 -0.72656,-0.53249 -0.92067,-0.9207 -0.13724,-0.27448 0.21701,-0.7036 0,-0.9207 -0.21701,-0.21692 -0.70367,0.2171 -0.92068,0 -0.21701,-0.21692 0.21701,-0.70368 0,-0.92069 -0.21701,-0.21701 -0.70367,0.21701 -0.92067,0 -0.21701,-0.21701 0.217,-0.7036 0,-0.92061 -0.21701,-0.21701 -0.70367,0.21701 -0.92068,0 -1.22757,-1.22751 1.53446,-0.9207 -0.92068,-0.9207 -0.61378,-1.22759 -1.22756,-2.45519 -1.84134,-3.6827 0,-0.30689 0.13723,-0.64613 0,-0.92069 -0.19412,-0.38821 -0.72656,-0.5324 -0.92068,-0.9207 -0.13723,-0.27447 0.13723,-0.64613 0,-0.92061 -0.19407,-0.38821 -0.72656,-0.53248 -0.92067,-0.92069 -0.13724,-0.27448 0.217,-0.70369 0,-0.9207 -0.21701,-0.21701 -0.70367,0.21701 -0.92068,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.92069 -0.21701,-0.21693 -0.70367,0.217 -0.92068,0 -0.217,-0.21693 0.13724,-0.64614 0,-0.92062 -0.19412,-0.38821 -0.72656,-0.53248 -0.92067,-0.92069 -0.13724,-0.27448 0.21701,-0.70369 0,-0.9207 -0.21701,-0.217 -0.70367,0.21701 -0.92068,0 0,-2.4551 0.30689,0.3069 -0.92067,-0.92069 -0.21701,-0.21701 0.217,-0.70361 0,-0.92061 -0.30523,-0.30527 -1.53613,0.30518 -1.84136,0 -0.217,-0.21701 0.13724,-0.64622 0,-0.9207 -0.19411,-0.38821 -0.72655,-0.53248 -0.92067,-0.92069 -0.13724,-0.27448 0.217,-0.70369 0,-0.9207 -0.21701,-0.21701 -0.70367,0.21701 -0.92068,0 -0.217,-0.21701 0.13724,-0.64613 0,-0.92061 -0.19406,-0.38821 -0.72655,-0.53248 -0.92068,-0.9207 -0.13722,-0.27447 0.21701,-0.70368 0,-0.92069 -0.21699,-0.21701 -0.70367,0.21701 -0.92067,0 -0.217,-0.21701 0,-0.6138 0,-0.9207 -0.30689,0 -0.70367,0.21701 -0.92067,0 -0.21701,-0.21701 0.217,-0.7036 0,-0.92069 -0.21701,-0.21693 -0.70368,0.21709 -0.92067,0 -0.21701,-0.21693 0.21699,-0.70361 0,-0.92061 -0.21701,-0.21701 -0.64621,0.13723 -0.92068,0 -1.10482,-0.55239 -1.65721,-2.20962 -2.76203,-2.76201 -0.27448,-0.13732 -0.70367,0.21693 -0.92068,0 -0.217,-0.217 0.21701,-0.70368 0,-0.92069 -0.217,-0.21701 -0.70367,0.21701 -0.92067,0 -0.21701,-0.21701 0.217,-0.70369 0,-0.9207 -0.21701,-0.21701 -0.70367,0.21701 -0.92068,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.92069 -0.21701,-0.21701 -0.70367,0.217 -0.92068,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.9207 -0.217,-0.21701 -0.70366,0.21701 -0.92067,0 -0.21701,-0.21701 0.21701,-0.7036 0,-0.92061 -0.21701,-0.21701 -0.70367,0.21701 -0.92068,0 -0.21701,-0.21701 0,-0.6138 0,-0.9207 -0.30689,0 -0.70367,0.21701 -0.92067,0 -0.21701,-0.217 0.217,-0.70368 0,-0.92069 -0.21701,-0.21701 -0.70367,0.21701 -0.92068,0 0,-2.45511 0.30689,0.3069 -0.92068,-0.9207 -0.21699,-0.21701 0.21701,-0.7036 0,-0.92061 -0.21699,-0.21701 -0.70367,0.21701 -0.92067,0 -0.217,-0.21701 0.217,-0.70369 0,-0.92069 -0.217,-0.21701 -0.70367,0.217 -0.92067,0 -0.21701,-0.21701 0.217,-0.70369 0,-0.9207 -0.21701,-0.21701 -0.70368,0.21701 -0.92068,0 -0.217,-0.21701 0.217,-0.70369 0,-0.9207 -0.217,-0.217 -0.70367,0.21701 -0.92067,0 -0.21701,-0.217 0.217,-0.70368 0,-0.92061 -0.21701,-0.217 -0.70367,0.21693 -0.92068,0 -0.21701,-0.217 0.21701,-0.70368 0,-0.92069 -0.21701,-0.21701 -0.70367,0.21701 -0.92067,0 -0.21701,-0.21701 0.217,-0.70369 0,-0.9207 -0.21701,-0.21701 -0.70367,0.21701 -0.92068,0 -0.21701,-0.21701 0.21701,-0.70369 0,-0.92069 -0.30552,-0.30544 -1.53584,0.30552 -1.84135,0 -0.21701,-0.21701 0.217,-0.70361 0,-0.92061 -0.43402,-0.43402 -1.40734,0.43393 -1.84136,0 -0.217,-0.2171 0.21701,-0.70369 0,-0.9207 -0.46033,-0.46035 -2.30169,0.46035 -2.76203,0 -0.21699,-0.21701 0.21701,-0.70369 0,-0.9207 -0.434,-0.43401 -1.40733,0.43402 -1.84134,0 -0.21701,-0.217 0.217,-0.70368 0,-0.92069 -0.30743,-0.30742 -1.53387,0.3075 -1.84135,0 -0.21701,-0.21701 0.217,-0.70369 0,-0.9207 -0.30552,-0.30544 -1.53583,0.30553 -1.84135,0 -0.21701,-0.21692 0.217,-0.7036 0,-0.92061 -0.43402,-0.43401 -1.40734,0.43402 -1.84136,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.92069 -0.0295,-0.0292 -2.53873,0 -2.76203,0 -0.33807,0 -3.64566,0.0369 -3.6827,0 -0.217,-0.21701 0.21701,-0.70369 0,-0.9207 -0.217,-0.21701 -0.61378,0 -0.92067,0 -1.84135,0 -3.6827,0 -5.52405,0 -0.3069,0 -0.61379,0 -0.92068,0 -0.30689,0 -0.70367,0.21701 -0.92068,0 -0.217,-0.21701 0.13724,-0.64613 0,-0.9207 -0.19411,-0.38812 -0.72655,-0.53248 -0.92067,-0.92061 -0.13724,-0.27447 0.13723,-0.64622 0,-0.92069 -0.19407,-0.38821 -0.726562,-0.53249 -0.920677,-0.9207 -0.137238,-0.27447 0.137238,-0.64613 0,-0.92069 -0.194115,-0.38813 -0.726555,-0.53249 -0.920679,-0.92061 -0.137238,-0.27457 0.217008,-0.70369 0,-0.9207 -0.216999,-0.21701 -0.703671,0.21701 -0.92067,0 -0.434015,-0.43402 0.434007,-1.40738 0,-1.84139 -0.217008,-0.21701 -0.703671,0.21701 -0.920679,0 -0.217007,-0.21701 0.217008,-0.7036 0,-0.9207 -0.217007,-0.21692 -0.703671,0.2171 -0.920678,0 -0.434007,-0.43393 0.434015,-1.40729 0,-1.8413 -0.217,-0.21701 -0.703663,0.217 -0.920671,0 -0.217007,-0.21701 0.217008,-0.70369 0,-0.9207 -0.217007,-0.21701 -0.703671,0.21701 -0.920678,0 -0.217008,-0.21701 0.217007,-0.70369 0,-0.9207 -0.434007,-0.43401 -1.841349,0.6138 -1.841349,0 0,-0.30681 1.227568,0 0.920678,0 -0.613788,0 -1.227568,0 -1.841357,0 -0.30689,0 -0.703671,-0.21692 -0.92067,0 -0.217008,0.21701 0.216999,0.70369 0,0.9207 -0.217008,0.21701 -0.613789,0 -0.920679,0 -0.30689,0 -0.703671,0.21701 -0.920679,0 -0.216999,-0.21701 0.217008,-0.70369 0,-0.9207 -0.02951,-0.0292 -2.538733,0 -2.762028,0 -0.61378,0 -2.455129,0 -1.841348,0 0.613788,0 2.455137,0 1.841348,0 -0.92067,0 -1.888601,-0.29111 -2.762019,0 -0.291125,0.0971 0.216999,0.70369 0,0.9207 -0.02951,0.03 -2.538741,0 -2.762027,0 -0.338138,0 -3.64567,0.0369 -3.682707,0 -0.217008,-0.21701 0.217008,-0.70369 0,-0.9207 -0.434007,-0.43401 -1.407342,0.43411 -1.841349,0 -0.217008,-0.21692 0.217008,-0.7036 0,-0.92061 -0.217008,-0.217 -0.703671,0.21701 -0.920679,0 -0.216999,-0.217 0.217008,-0.70368 0,-0.92069 -0.216999,-0.21701 -0.703671,0.21701 -0.92067,0 -0.217008,-0.21701 0.216999,-0.70369 0,-0.9207 -0.217008,-0.217 -0.703671,0.21701 -0.920679,0 -0.434006,-0.43401 0.434007,-1.40729 0,-1.8413 -0.217007,-0.21701 -0.703671,0.217 -0.920678,0 -0.217,-0.21701 0.217007,-0.70369 0,-0.9207 -0.217,-0.21701 -0.703671,0.21701 -0.920671,0 -0.02951,-0.0292 0,-2.53873 0,-2.762 0,-0.6138 0,-1.2276 0,-1.84139 0,-0.3069 -0.30689,-0.9207 0,-0.9207 0.30689,0 0.217,1.1377 0,0.9207 -0.30689,-0.6138 -0.613788,-1.2276 -0.920678,-1.84131 -0.30689,0 -0.703671,0.21701 -0.920679,0 -0.216999,-0.21701 0.217008,-0.70369 0,-0.9207 -0.216999,-0.217 -0.703663,0.21701 -0.92067,0 0,-2.45518 0.30689,0.3069 -0.920679,-0.92069 -0.216999,-0.21701 0.217008,-0.70369 0,-0.9207 -0.216999,-0.217 -0.703671,0.21701 -0.92067,0 -0.217008,-0.217 0.216999,-0.70369 0,-0.92061 -0.305518,-0.30552 -1.53584,0.30544 -1.841357,0 -1.227569,-1.22759 1.534458,-0.92069 -0.920671,-0.92069 -0.306898,0 -1.227568,0 -0.920678,0 0.61378,0 2.455137,0 1.841349,0 -0.920671,0 -1.888602,0.29111 -2.762028,0 -0.291125,-0.0971 0.217008,-0.70369 0,-0.9207 -0.0368,-0.0369 -3.344569,0 -3.682698,0 -0.30689,0 -0.703671,-0.21701 -0.920679,0 -0.216999,0.21701 0.217008,0.70369 0,0.9207 -0.02951,0.0292 -2.538733,0 -2.762028,0 -0.61378,0 -1.22756,0 -1.841348,0 -0.30689,0 -0.920679,0.3069 -0.920679,0 0,-0.3069 1.227569,0 0.920679,0 -0.61378,0 -1.227569,0 -1.841349,0 -0.30689,0 -0.920679,0.3069 -0.920679,0 0,-0.3069 0.920679,0.3069 0.920679,0 0,-0.43402 -0.726564,-0.53249 -0.920679,-0.9207 -0.137238,-0.27447 -0.30689,-0.92069 0,-0.92069 0.30689,0 0,0.61379 0,0.92069'}),_react2.default.createElement('path',{d:'m 26.428571,585.21935 c 7.194174,1.56773 1.161166,-2.58974 2.142858,-3.57143 0.168358,-0.16836 0.545927,0.16836 0.714285,0 0.168359,-0.16836 -0.168358,-0.54593 0,-0.71429 0.168359,-0.16836 0.501327,0.10648 0.714286,0 0.301169,-0.15058 0.413116,-0.5637 0.714286,-0.71428 0.212959,-0.10648 0.545927,0.16836 0.714285,0 0.168359,-0.16836 -0.168358,-0.54593 0,-0.71429 0.236817,-0.23682 1.191755,0.23682 1.428572,0 0.168359,-0.16836 0,-0.47619 0,-0.71428 0.238095,0 0.545927,0.16835 0.714286,0 0.168358,-0.16836 -0.168359,-0.54593 0,-0.71429 0.168358,-0.16836 0.545927,0.16836 0.714285,0 0.168359,-0.16836 -0.168358,-0.54593 0,-0.71429 0.168359,-0.16835 0.501327,0.10648 0.714286,0 0.301169,-0.15058 0.413116,-0.5637 0.714286,-0.71428 0.212959,-0.10648 0.545927,0.16836 0.714285,0 0.168359,-0.16836 -0.168358,-0.54593 0,-0.71429 0.336718,-0.33671 1.091854,0.33672 1.428572,0 0.168359,-0.16836 -0.168359,-0.54592 0,-0.71428 0.168359,-0.16836 0.714286,-0.2381 0.714286,0 0,0.23809 -0.952381,0 -0.714286,0 0.47619,0 0.952381,0 1.428571,0 0.238096,0 0.545927,0.16836 0.714286,0 0.952381,-0.95238 -1.190476,-0.71429 0.714286,-0.71429 0.238095,0 0.47619,0 0.714285,0 0.238096,0 0.545927,0.16836 0.714286,0 0.168359,-0.16836 -0.168359,-0.54593 0,-0.71428 0.168359,-0.16836 0.476191,0 0.714286,0 0.173233,0 2.119886,-0.023 2.142857,0 0.168359,0.16835 -0.168359,0.54592 0,0.71428 0.168359,0.16836 0.545927,-0.16836 0.714286,0 0.168359,0.16836 -0.168359,0.54593 0,0.71429 0.168359,0.16836 0.545927,-0.16836 0.714285,0 0.168359,0.16836 -0.106479,0.50132 0,0.71428 0.150585,0.30117 0.563702,0.41312 0.714286,0.71429 0.10648,0.21296 -0.168359,0.54593 0,0.71428 0.168359,0.16836 0.545927,-0.16835 0.714286,0 0.168359,0.16836 0,0.47619 0,0.71429 0,0.37351 -0.09391,2.66933 0,2.85714 0.150585,0.30117 0.47619,0.47619 0.714286,0.71429'}));SVGs.mountains=_react2.default.createElement('g',{style:style},_react2.default.createElement('path',{d:'m 138.51955,426.48244 c -1.018,-2.38509 -1.00348,-3.79246 -1.00348,-6.02074 0,-0.33449 0.23652,-0.76694 0,-1.00345 -0.23651,-0.23652 -0.76693,0.23651 -1.00345,0 -0.0455,-0.0455 0,-4.54416 0,-5.01727 0,-0.24338 -0.0323,-2.97812 0,-3.01038 0.23652,-0.23653 0.76694,0.23651 1.00345,0 0.0404,-0.0404 0,-3.64533 0,-4.01383 0,-2.67589 0,-5.35178 0,-8.02766 0,-0.33447 -0.23651,-0.76692 0,-1.00345 0.23652,-0.23653 0.76693,0.23653 1.00348,0 0.0404,-0.0404 0,-3.64532 0,-4.01383 0,-0.52473 -0.13195,-3.74997 0,-4.01383 0.21151,-0.42309 0.79189,-0.58035 1.00344,-1.00346 0.34655,-0.69311 -0.35224,-4.66503 0,-5.01728 0.23652,-0.23651 0.76693,0.23654 1.00345,0 0.0323,-0.0322 0,-2.767 0,-3.01037 0,-0.33447 0,-1.33794 0,-1.00345 0,0.66898 0,2.67589 0,2.00692 0,-1.00347 0,-2.00692 0,-3.01037 0,-0.3345 -0.14956,-0.7043 0,-1.00345 1.01475,-2.02949 2.32868,-0.32181 3.01036,-1.00346 0.23655,-0.23653 -0.23652,-0.76695 0,-1.00347 0.33479,-0.33475 1.67216,0.33477 2.00692,0 0.23651,-0.2365 -0.23652,-0.76693 0,-1.00345 0.47307,-0.47303 1.53389,0.47302 2.00692,0 0.23651,-0.23651 -0.23652,-0.76694 0,-1.00346 0.47303,-0.47303 1.53389,0.47304 2.00692,0 0.23651,-0.23652 -0.23652,-0.76694 0,-1.00344 0.33476,-0.33478 1.67213,0.33475 2.00693,0 0.23648,-0.23654 -0.23655,-0.76695 0,-1.00347 0.23648,-0.23651 0.76692,0.23652 1.00344,0 0.23651,-0.23651 -0.23652,-0.76694 0,-1.00345 0.23651,-0.23651 0.76695,0.23651 1.00344,0 0.23655,-0.23651 -0.23649,-0.76693 0,-1.00346 0.23655,-0.23654 0.76696,0.23653 1.00348,0 0.23651,-0.23654 -0.23652,-0.76695 0,-1.00346 0.47303,-0.47303 1.53389,0.47304 2.00693,0 0.23647,-0.23652 -0.23656,-0.76695 0,-1.00345 0.23647,-0.23652 0.76692,0.2365 1.00343,0 1.33793,-1.33794 -1.67243,-1.00347 1.00344,-1.00347 0.33449,0 1.00345,-0.33447 1.00345,0 0,0.33449 -1.00345,0.33449 -1.00345,0 0,-2.08807 1.40722,-0.40376 2.00692,-1.00345 0.23652,-0.23651 -0.23651,-0.76695 0,-1.00345 0.47304,-0.47304 1.40857,0.29916 2.00692,0 0.4231,-0.21155 0.58035,-0.79192 1.00345,-1.00346 0.59835,-0.29917 1.53389,0.47304 2.00692,0 0.23652,-0.23652 -0.23651,-0.76694 0,-1.00347 0.47303,-0.47303 1.53388,0.47305 2.00692,0 0.23652,-0.23651 -0.23651,-0.76692 0,-1.00345 0.47304,-0.47304 1.53389,0.47304 2.00691,0 0.23652,-0.2365 -0.2365,-0.76693 0,-1.00345 0.23652,-0.23652 0.76694,0.23652 1.00345,0 0.23652,-0.23652 -0.23651,-0.76695 0,-1.00346 0.23652,-0.23651 0.76697,0.23651 1.00345,0 0.23655,-0.23651 -0.23648,-0.76694 0,-1.00344 0.23655,-0.23653 0.76696,0.2365 1.00347,0 0.23652,-0.23653 -0.23651,-0.76695 0,-1.00348 0.23652,-0.23651 0.76693,0.23653 1.00345,0 0.23652,-0.23651 -0.23652,-0.76692 0,-1.00346 0.23652,-0.2365 0.76692,0.23654 1.00347,0 0.33297,-0.33296 -0.333,-1.67392 0,-2.0069 0.23648,-0.23652 0.76692,0.23652 1.00345,0 0.23652,-0.23652 -0.23653,-0.76694 0,-1.00344 0.23652,-0.23653 0.76692,0.2365 1.00344,0 0.47303,-0.47306 -0.47303,-1.5339 0,-2.00693 0.23651,-0.23651 0.76696,0.23652 1.00348,0 0.47302,-0.47303 -0.47303,-1.53387 0,-2.00691 0.23651,-0.23652 0.76693,0.23651 1.00345,0 0.2365,-0.23652 -0.23652,-0.76695 0,-1.00347 0.2365,-0.23651 0.76692,0.23652 1.00347,0 0.47303,-0.47302 -0.47303,-1.53387 0,-2.00689 0.23648,-0.23654 0.76692,0.23651 1.00344,0 0.47304,-0.47305 -0.47303,-1.53388 0,-2.00692 0.23652,-0.23652 0.76693,0.23651 1.00345,0 0.47303,-0.47305 -0.47304,-1.53389 0,-2.00692 0.23651,-0.2365 0.76695,0.23652 1.00343,0 0.47307,-0.47303 -0.47303,-1.53388 0,-2.00691 0.23656,-0.23652 0.76696,0.23651 1.00348,0 0.47304,-0.47303 -0.47303,-1.53389 0,-2.00691 0.23652,-0.23652 0.76693,0.23652 1.00344,0 0.23652,-0.23652 0,-0.66897 0,-1.00346 0.3345,0 0.76697,0.23653 1.00349,0 0.2365,-0.23653 -0.14959,-0.70429 0,-1.00345 0.21154,-0.42311 0.7919,-0.58036 1.00344,-1.00346 0.14959,-0.29917 -0.14959,-0.70428 0,-1.00346 0.21155,-0.42309 0.79189,-0.58036 1.00348,-1.00346 0.14955,-0.29917 -0.23652,-0.76693 0,-1.00346 0.23652,-0.23651 0.76692,0.23653 1.00344,0 0.23651,-0.23651 -0.14959,-0.70427 0,-1.00345 0.21154,-0.42309 0.79193,-0.58036 1.00344,-1.00344 0.14959,-0.29918 -0.23651,-0.76695 0,-1.00348 0.23656,-0.2365 0.76696,0.23653 1.00348,0 0.23651,-0.2365 -0.23652,-0.76692 0,-1.00346 0.23651,-0.2365 0.76693,0.23654 1.00343,0 0.23653,-0.2365 -0.33445,-1.00344 0,-1.00344 0.33451,0 -0.33445,1.00344 0,1.00344 0.47305,0 0.58036,-0.7919 1.0035,-1.00344 0.29913,-0.14959 0.76692,0.2365 1.00343,0 0.23652,-0.23653 -0.23651,-0.76694 0,-1.00345 0.23652,-0.23653 0.66894,0 1.00345,0 0.33449,0 1.00348,-0.3345 1.00348,0 0,0.33447 -1.33799,0 -1.00348,0 0.66899,0 1.33796,0 2.00691,0 0.3345,0 1.00349,-0.3345 1.00349,0 0,0.33447 -1.00349,-0.3345 -1.00349,0 0,1.23995 1.40722,1.00345 2.00692,1.00345 0.66895,0 2.67587,0 2.00693,0 -0.66899,0 -2.67591,0 -2.00693,0 1.00344,0 2.00693,0 3.01037,0 0.33449,0 1.00348,-0.33449 1.00348,0 0,1.42156 -4.68283,-2.84312 1.00344,0 0.29914,0.14959 -0.23651,0.76694 0,1.00344 0.23652,0.23654 0.66895,0 1.00344,0 0.3345,0 0.66899,0 1.00345,0 0.33449,0 1.33797,0 1.00347,0 -0.66898,0 -2.67587,0 -2.00692,0 1.00345,0 2.00692,0 3.01037,0 0.33449,0 0.76697,-0.2365 1.00348,0 0.23652,0.23654 -0.23651,0.76696 0,1.00346 0.23652,0.23653 1.00344,-0.33447 1.00344,0 0,0.3345 -1.33794,0 -1.00344,0 0.66899,0 1.40855,-0.29916 2.00691,0 0.29915,0.1496 0.23652,0.76695 0,1.00348 -0.23651,0.23651 -0.76696,-0.23653 -1.00347,0 -0.23652,0.23651 0.23651,0.76692 0,1.00344 -0.23652,0.23651 -0.76692,-0.23652 -1.00344,0 -0.23651,0.23651 0.23652,0.76694 0,1.00345 -0.23651,0.23653 -0.76698,-0.23651 -1.00348,0 -0.47303,0.47305 0.47302,1.53387 0,2.00692 -0.23652,0.23652 -0.70427,-0.14958 -1.00345,0 -0.84619,0.4231 -1.16073,1.58381 -2.00692,2.00692 -0.29914,0.14959 -0.76692,-0.23653 -1.00344,0 -0.23651,0.2365 -0.23651,0.76692 0,1.00345 0.23652,0.23653 0.66895,0 1.00344,0 2.00692,0 4.01385,0 6.02076,0 0.33446,0 1.33795,0 1.00345,0 -0.66899,0 -2.00692,-0.66896 -2.00692,0 0,1.15304 2.29028,1.00346 3.01036,1.00346 0.69794,0 4.6544,-0.18144 5.01729,0 0.42313,0.21156 0.58038,0.79191 1.00347,1.00345 0.39786,0.19893 2.80521,-0.20515 3.01037,0 0.23651,0.23652 -0.23652,0.76694 0,1.00346 0.47303,0.47303 1.53385,-0.47303 2.00688,0 0.23656,0.23651 -0.23648,0.76693 0,1.00346 0.47302,0.47303 1.53393,-0.47304 2.00696,0 0.23648,0.23652 -0.23655,0.76695 0,1.00345 0.47303,0.47303 1.40853,-0.29916 2.00688,0 0.4231,0.21154 0.58038,0.79191 1.00344,1.00346 0.39791,0.19894 2.80526,-0.20516 3.01041,0 1.33793,1.33793 -1.67244,1.00346 1.00344,1.00346 0.24336,0 2.9781,-0.0322 3.0104,0 0.23651,0.23651 -0.23656,0.76693 0,1.00346 0.50172,0.50172 2.5086,-0.50173 3.01037,0 0.23651,0.23651 -0.23652,0.76692 0,1.00346 0.47303,0.47302 1.53384,-0.47305 2.00687,0 0.23655,0.23651 -0.23652,0.76694 0,1.00344 0.23655,0.23652 0.76697,-0.2365 1.00348,0 0.23652,0.23652 -0.23651,0.76694 0,1.00345 0.23652,0.23652 0.76693,-0.23651 1.00344,0 0.23652,0.23652 -0.23651,0.76695 0,1.00347 0.23652,0.23651 0.66899,0 1.00348,0 0,0.33448 -0.23651,0.76693 0,1.00346 0.23652,0.23651 0.76694,-0.23653 1.00345,0 0.23652,0.23651 -0.14959,0.70428 0,1.00345 3.32804,3.32805 -0.47303,-0.94606 1.00344,2.00693 0.21155,0.42307 0.79194,0.58035 1.00348,1.00344 0.29918,0.59836 -0.47304,1.53388 0,2.0069 0.23652,0.23654 0.76692,-0.2365 1.00344,0 0.23652,0.23654 0,0.66899 0,1.00346 0,0.3345 0,0.66898 0,1.00348 0,2.67587 0,5.35174 0,8.02763 0,2.34142 0,4.68281 0,7.0242 0,0.4519 0.15272,2.705 0,3.01038 -0.21155,0.42308 -0.79189,0.58035 -1.00344,1.00346 -0.12972,0.25943 0,5.30948 0,6.02072 0,0.3345 0.14959,0.70429 0,1.00346 -0.21154,0.4231 -0.79193,0.58037 -1.00348,1.00345 -0.18141,0.36289 0,4.31934 0,5.0173 0,0.33447 -0.23648,0.76693 0,1.00345 0.23655,0.2365 0.76697,-0.23652 1.00348,0 0.20515,0.20515 -0.19893,2.6125 0,3.01037 0.21155,0.4231 0.79189,0.58036 1.00344,1.00346 0.14959,0.29917 0,0.66897 0,1.00346 0,0.33449 0,1.33793 0,1.00345 0,-0.66896 0,-2.6759 0,-2.00691 0,1.00346 -0.3173,2.05841 0,3.01036 0.10579,0.31731 0.66899,0 1.00347,0 0,0.33449 0,0.66899 0,1.00346 0,0.33448 0,1.33793 0,1.00346 0,-0.66898 -0.66898,-2.00692 0,-2.00692 1.27993,0 1.00345,3.25697 1.00345,4.01383 0.3345,1.33794 0.66895,2.67588 1.00344,4.01383 0.3345,0.33448 0.79194,0.58037 1.00348,1.00344 0.19894,0.39788 -0.20514,2.80523 0,3.01039 0.23652,0.23651 0.76693,-0.23653 1.00345,0 0.20514,0.20514 -0.19894,2.6125 0,3.01038 1.23995,2.47993 1.00347,-0.34638 1.00347,2.00689 0,2.6759 -0.33449,-0.33448 1.00345,1.00345 0.50172,0.50174 -0.50172,2.50866 0,3.01038 0.23652,0.23651 0.76692,-0.23652 1.00344,0 0.50172,0.50173 -0.50172,2.50863 0,3.01036 0.23651,0.23652 0.76696,-0.23651 1.00343,0 0.50177,0.50175 -0.50171,2.50865 0,3.01038 0.23656,0.23652 0.76698,-0.23651 1.00349,0 0.47303,0.47303 -0.47303,1.53388 0,2.00692 0.23651,0.2365 0.76693,-0.23653 1.00344,0 0.47303,0.47303 -0.47303,1.53388 0,2.00691 0.23651,0.23652 0.76696,-0.23654 1.00348,0 0.23651,0.23652 -0.14958,0.70428 0,1.00345 3.32804,3.32805 -0.47303,-0.94607 1.00345,2.00693 0.21154,0.42307 0.79189,0.58034 1.00347,1.00344 0.29915,0.59836 -0.47307,1.53388 0,2.0069 0.23652,0.23653 0.76692,-0.2365 1.00344,0 0.50173,0.50173 -0.50171,2.50866 0,3.01038 0.23652,0.23652 0.76693,-0.23651 1.00344,0 0.23656,0.23652 -0.23651,0.76695 0,1.00346 0.23656,0.23652 0.76697,-0.23651 1.00349,0 0.47302,0.47303 -0.47303,1.53387 0,2.00692 0.2365,0.23651 0.76693,-0.23653 1.00343,0 0.23652,0.23651 -0.14958,0.70427 0,1.00345 0.21156,0.42309 0.7919,0.58035 1.00349,1.00345 0.14955,0.29917 -0.23655,0.76695 0,1.00346 0.23648,0.23652 0.76692,-0.23651 1.00344,0 0.50171,0.50172 -0.50172,2.50865 0,3.01037 0.23651,0.23651 0.76696,-0.23652 1.00344,0 0.23656,0.23651 -0.23648,0.76694 0,1.00345 0.23656,0.23654 0.76696,-0.23651 1.00348,0 0.23651,0.23654 -0.23652,0.76695 0,1.00346 0.23651,0.23652 0.76692,-0.23651 1.00343,0 0.23653,0.23652 0.33451,1.00347 0,1.00347 -0.33448,0 0,-0.66899 0,-1.00347 1.33799,0.66898 2.62498,1.45136 4.01382,2.00693 0.40132,0.16051 2.83137,-0.17902 3.01039,0 0.23652,0.23649 -0.23651,0.76692 0,1.00344 0.47304,0.47304 1.53386,-0.47303 2.00689,0 0.23655,0.23653 -0.23647,0.76695 0,1.00346 0.23655,0.23652 0.76697,-0.23651 1.00348,0 0.23652,0.23652 -0.14959,0.70429 0,1.00346 0.21155,0.4231 0.79193,0.58036 1.00345,1.00346 0.14958,0.29917 -0.23653,0.76692 0,1.00346 0.2365,0.23649 0.76696,-0.23654 1.00347,0 0.23652,0.23649 -0.23651,0.76692 0,1.00344 0.47303,0.47303 1.40856,-0.29916 2.00691,0 0.4231,0.21155 0.58036,0.79191 1.00345,1.00346 0.29918,0.14959 1.00344,-0.33447 1.00344,0 0,0.33449 -1.33793,0 -1.00344,0 5.68624,0 0.3345,0.66898 2.00693,-1.00346 0.50171,-0.50173 2.50863,0.50173 3.01036,0 0.23652,-0.23652 -0.23652,-0.76695 0,-1.00344 0.23652,-0.23654 0.66895,0 1.00344,0 0.33449,0 1.00347,-0.3345 1.00347,0 0,0.33448 -1.00347,0.33448 -1.00347,0 0,-1.42497 2.29694,-1.00346 3.0104,-1.00346 0.33445,0 1.33794,0 1.00345,0 -0.669,0 -2.00693,0.66896 -2.00693,0 0,-0.74795 1.29737,-0.76695 2.00693,-1.00346 0.94535,-0.31512 5.37015,0.32528 6.02071,0 0.42311,-0.21155 0.58039,-0.79192 1.00345,-1.00346 0.29918,-0.14959 0.76696,0.23652 1.00348,0 0.47303,-0.47303 -0.47304,-1.53387 0,-2.0069 0.47303,-0.47304 1.53388,0.47303 2.00692,0 0.23651,-0.23653 -0.23652,-0.76696 0,-1.00346 0.0454,-0.0454 4.54414,0 5.01729,0 0.33448,0 0.66894,0 1.00343,0 0.3345,0 1.00349,-0.33449 1.00349,0 0,0.33447 -1.33798,0 -1.00349,0 0.669,0 1.33794,0 2.00692,0 0.66895,0 2.67587,0 2.00692,0 -0.66897,0 -2.6759,0 -2.00692,0 1.00345,0 2.00692,0 3.01037,0 0.33449,0 1.00348,-0.33449 1.00348,0 0,0.33447 -1.33798,0 -1.00348,0 0.66898,0 1.40856,0.29917 2.00692,0 0.29915,-0.14959 -0.23651,-0.76695 0,-1.00347 0.23652,-0.23651 0.66895,0 1.00344,0 0.33449,0 1.00345,-0.33447 1.00345,0 0,0.33448 -1.00345,0.33448 -1.00345,0 0,-2.08808 1.40722,-0.40377 2.00692,-1.00346 0.23652,-0.23651 -0.23652,-0.76694 0,-1.00345 0.23652,-0.23652 0.66899,0 1.00345,0 0,-0.33448 -0.23652,-0.76695 0,-1.00345 0.23651,-0.23652 0.76696,0.2365 1.00348,0 0.0323,-0.0322 0,-2.767 0,-3.01038 0,-5.68625 0,6.68972 0,1.00346 0,-1.00346 0,-2.00691 0,-3.01036 0,-0.33449 0.23651,-0.76694 0,-1.00347 -0.23652,-0.23651 -1.00348,-0.33448 -1.00348,0 0,0.47304 1.4765,1.00347 1.00348,1.00347 -5.06927,0 -0.77121,-0.77119 -2.00693,-2.00692 -0.24146,-0.24146 -3.77237,0.24145 -4.0138,0 -0.23655,-0.23651 0.23647,-0.76694 0,-1.00346 -0.23655,-0.23651 -0.66899,0 -1.00348,0 -0.3345,0 -1.33793,0 -1.00345,0 0.66895,0 2.67587,0 2.00693,0 -1.00348,0 -2.00693,0 -3.0104,0 -0.3345,0 0.66899,0 1.00347,0 2.67587,0 -0.33448,0.33449 1.00345,-1.00344 0.23652,-0.23653 0.76693,0.2365 1.00348,0 0.23647,-0.23653 -0.23655,-0.76695 0,-1.00348 0.23647,-0.23651 0.76693,0.23653 1.00344,0 0.47303,-0.47303 -0.47303,-1.53388 0,-2.0069 0.23652,-0.23653 0.76692,0.23651 1.00344,0 0.23652,-0.23653 -0.23652,-0.76694 0,-1.00346 0.23652,-0.23652 0.76697,0.23652 1.00345,0 0.23655,-0.23652 -0.23648,-0.76694 0,-1.00344 0.23655,-0.23654 0.76695,0.2365 1.00347,0 0.47303,-0.47305 -0.47302,-1.5339 0,-2.00693 0.23652,-0.2365 0.76693,0.23652 1.00345,0 0.23651,-0.2365 -0.23652,-0.76693 0,-1.00345 0.23651,-0.23654 0.76696,0.23652 1.00348,0 0.23651,-0.23654 -0.23652,-0.76695 0,-1.00346 2.67587,0 -0.3345,0.33449 1.00344,-1.00345 0.0404,-0.0404 3.64534,0 4.01384,0 0.3345,0 1.33794,0 1.00344,0 -0.66894,0 -2.67587,0 -2.00692,0 1.00348,0 2.00692,0 3.0104,0 0.33446,0 0.66895,0 1.00345,0 0.33445,0 0.76692,-0.23653 1.00344,0 0.23655,0.2365 0.33448,1.00345 0,1.00345 -0.47304,0 -1.47647,-1.00345 -1.00344,-1.00345 0.74791,0 1.29732,0.76693 2.00691,1.00345 0.62981,0.20993 3.20599,0 4.0138,0 0.66899,0 1.33795,0 2.00693,0 0.33449,0 1.33793,0 1.00348,0 -0.66899,0 -2.67591,0 -2.00696,0 1.00348,0 2.00696,0 3.0104,0 0.33449,0 1.00344,-0.33449 1.00344,0 0,0.33449 -1.00344,0.33449 -1.00344,0 0,-0.39188 1.88026,-1.13013 1.00344,-2.00692 -0.23651,-0.2365 -0.76693,0.23652 -1.00344,0 -0.23652,-0.2365 0.14959,-0.70427 0,-1.00345 -0.21155,-0.42309 -0.79193,-0.58038 -1.00344,-1.00345 -0.14963,-0.29919 0.14955,-0.7043 0,-1.00346 -0.21158,-0.42311 -0.79193,-0.58036 -1.00348,-1.00347 -0.14959,-0.29916 0.23652,-0.76692 0,-1.00345 -0.23651,-0.2365 -0.76693,0.23653 -1.00348,0 -0.0323,-0.0322 0,-2.76699 0,-3.01036 0,-0.33448 -0.23648,-0.76694 0,-1.00347 0.23655,-0.23651 0.76697,0.23653 1.00348,0 0.47303,-0.47303 -0.66898,-2.00691 0,-2.00691 0.33449,0 -0.33449,1.00345 0,1.00345 2.08808,0 0.40374,-1.4072 1.00348,-2.0069 0.23648,-0.23652 0.70426,0.14958 1.00344,0 0.42309,-0.21155 0.58035,-0.79191 1.00344,-1.00344 0.29918,-0.1496 0.76697,0.2365 1.00344,0 0.23655,-0.23653 -0.23647,-0.76695 0,-1.00348 0.47303,-0.47303 1.5339,0.47303 2.00693,0 0.23651,-0.23651 -0.23652,-0.76693 0,-1.00346 0.47302,-0.47302 1.53388,0.47304 2.00692,0 0.23652,-0.2365 -0.23651,-0.76693 0,-1.00344 0.23652,-0.23653 0.76696,0.23651 1.00344,0 0.23655,-0.23653 -0.23648,-0.76695 0,-1.00346 0.23655,-0.23652 0.76696,0.23651 1.00347,0 2.07618,-2.0762 -3.17267,0.0811 1.00345,-2.00693 0.29918,-0.14956 0.76692,0.23653 1.00347,0 0.23652,-0.2365 -0.23655,-0.76692 0,-1.00344 0.23652,-0.23653 0.76694,0.23652 1.00345,0 0.23652,-0.23653 -0.23651,-0.76694 0,-1.00345 0.23652,-0.23654 0.76693,0.23651 1.00345,0 0.47306,-0.47304 -0.47303,-1.5339 0,-2.00693 0.2365,-0.23651 0.76696,0.23652 1.00347,0 0.14755,-0.14756 -0.11807,-3.01036 0,-3.01036 0.29985,0 -0.66057,3.32804 1.00345,0 0.19893,-0.39787 -0.20515,-2.80523 0,-3.01037 0.23651,-0.23653 0.76696,0.23653 1.00347,0 0.47304,-0.47304 -0.47303,-1.53388 0,-2.00691 1.33794,-1.33794 1.00344,1.67241 1.00344,-1.00346 0,-0.47147 0,-4.284 0,-2.00692 0,0.66897 -0.66899,2.00692 0,2.00692 2.06822,0 0.44952,-3.4599 1.00348,-4.01382 0.23648,-0.23652 0.76693,0.23651 1.00345,0 0.47302,-0.47305 -0.47303,-1.53389 0,-2.00693 0.23651,-0.2365 0.76692,0.23654 1.00344,0 0.47303,-0.47302 -0.47303,-1.53387 0,-2.00689 1.33793,-1.33795 1.00344,1.67241 1.00344,-1.00348 0,-1.00345 0,-2.00691 0,-3.01035 0,-0.33449 -0.33446,-1.00346 0,-1.00346 0.33449,0 0,1.33794 0,1.00346 0,-1.00346 0,-2.00693 0,-3.01038 0,-0.33449 0.23656,-0.76693 0,-1.00345 -0.23647,-0.23652 -0.76693,0.23652 -1.00344,0 -0.50172,-0.50173 0.50172,-2.50866 0,-3.01038 -1.33794,-1.33794 -1.00344,1.67243 -1.00344,-1.00345 0,-1.33795 0,-2.67589 0,-4.01382 0,-0.3345 0,-1.33796 0,-1.00346 0,0.66896 -0.66899,2.00691 0,2.00691 2.76317,0 0.28336,-2.29029 1.00344,-3.01037 0.23651,-0.23652 1.00344,-0.33448 1.00344,0 0,1.47649 -3.32799,-2.3246 0,1.00346 1.00348,-0.66896 1.93171,-1.46758 3.0104,-2.00691 0.60934,-0.30466 5.41143,0.30465 6.02073,0 0.42309,-0.21156 0.58035,-0.7919 1.00344,-1.00347 0.54437,-0.27216 3.73926,0.27458 4.01384,0 0.23652,-0.2365 -0.23651,-0.76692 0,-1.00345 0.47303,-0.47304 1.40856,0.29918 2.00693,0 0.42308,-0.21154 0.58034,-0.79191 1.00343,-1.00345 0.59837,-0.29919 1.40857,0.29916 2.00692,0 0.4231,-0.21155 0.58035,-0.79192 1.00349,-1.00346 0.6931,-0.34656 4.66503,0.35223 5.01724,0 0.23652,-0.23652 -0.23652,-0.76694 0,-1.00347 0.33439,-0.33435 1.67258,0.33437 2.00692,0 0.23652,-0.23651 -0.23651,-0.76692 0,-1.00345 0.31072,-0.31071 4.70657,0.31073 5.01729,0 0.23652,-0.2365 -0.23653,-0.76693 0,-1.00345 0.24146,-0.24146 3.77237,0.24145 4.01384,0 0.23652,-0.23652 -0.23655,-0.76695 0,-1.00346 0.47303,-0.47302 1.53385,0.47303 2.00689,0 0.23651,-0.23651 -0.23652,-0.76694 0,-1.00344 0.50175,-0.50173 2.50864,0.50172 3.01035,0 0.23656,-0.23653 -0.23647,-0.76695 0,-1.00348 0.27459,-0.27455 3.46947,0.27218 4.01385,0 0.42309,-0.21154 0.58038,-0.79191 1.00343,-1.00346 0.69314,-0.34655 4.66509,0.35225 5.01729,0 0.23656,-0.2365 -0.23648,-0.76692 0,-1.00344 0.20515,-0.20515 2.61254,0.19893 3.0104,0 0.42305,-0.21155 0.58035,-0.79191 1.00344,-1.00346 0.63688,-0.31845 4.69196,0.32532 5.01729,0 0.23652,-0.23652 -0.23652,-0.76694 0,-1.00344 0.20515,-0.20517 2.6125,0.1989 3.01036,0 0.4231,-0.21157 0.58039,-0.79191 1.00345,-1.00348 0.59835,-0.29917 1.40859,0.29919 2.00692,0 0.42309,-0.21155 0.58038,-0.79191 1.00347,-1.00345 0.59833,-0.29917 1.53386,0.47303 2.00689,0 0.23655,-0.23651 -0.23647,-0.76694 0,-1.00345 0.47303,-0.47303 1.40859,0.29917 2.00693,0 0.42308,-0.21155 0.58034,-0.79191 1.00347,-1.00346 0.80276,-0.40139 2.20756,0.40138 3.01036,0 0.42309,-0.21155 0.58035,-0.79191 1.00344,-1.00347 0.3054,-0.15268 2.55847,0 3.01037,0 2.35328,0 -0.47304,0.23652 2.00692,-1.00345 0.6307,-0.31534 3.38314,0.31536 4.01385,0 0.42309,-0.21154 0.58034,-0.79191 1.00343,-1.00344 0.80277,-0.40138 2.2076,0.40138 3.01036,0 0.4231,-0.21155 0.58036,-0.79192 1.00348,-1.00346 0.39787,-0.19894 2.80521,0.20513 3.01036,0 0.23652,-0.23653 -0.23651,-0.76695 0,-1.00346 0.47303,-0.47305 1.40856,0.29916 2.00691,0 0.42309,-0.21156 0.58035,-0.79191 1.00345,-1.00346 0.39787,-0.19893 2.80525,0.20513 3.01038,0 0.23651,-0.23651 -0.23652,-0.76694 0,-1.00346 0.27455,-0.27457 3.46946,0.27218 4.01383,0 0.42309,-0.21153 0.58035,-0.79191 1.00346,-1.00345 0.63068,-0.31535 3.38312,0.31534 4.01382,0 2.47994,-1.23998 -0.34636,-1.00346 2.00691,-1.00346 0.24337,0 2.97809,0.0322 3.01037,0 0.23652,-0.23652 -0.23652,-0.76694 0,-1.00346 0.23652,-0.23651 0.66897,0 1.00346,0 0.47311,0 4.97181,0.0455 5.01728,0 0.23652,-0.23651 -0.23652,-0.76693 0,-1.00345 0.20514,-0.20515 2.6125,0.19893 3.01036,0 0.4231,-0.21155 0.58036,-0.79192 1.00346,-1.00346 0.59835,-0.29916 1.53388,0.47304 2.00691,0 0.23653,-0.23653 -0.2365,-0.76695 0,-1.00345 0.23653,-0.23653 0.66898,0 1.00346,0 0.33448,0 1.33793,0 1.00346,0 -0.66898,0 -2.67588,0 -2.00692,0 1.00346,0 2.00692,0 3.01037,0 0.36852,0 3.97346,0.0404 4.01383,0 0.23651,-0.23653 -0.23652,-0.76695 0,-1.00346 0.50173,-0.50172 2.50863,0.50173 3.01036,0 0.23653,-0.23651 -0.23651,-0.76694 0,-1.00346 0.47305,-0.47305 1.53389,0.47304 2.00693,0 0.2365,-0.23651 -0.23653,-0.76693 0,-1.00346 0.24145,-0.24146 3.77235,0.24148 4.01382,0 0.23651,-0.23651 -0.23652,-0.76693 0,-1.00346 0.24146,-0.24145 3.77236,0.24146 4.01384,0 0.2365,-0.23651 -0.23654,-0.76694 0,-1.00345 0.20513,-0.20514 2.6125,0.19893 3.01035,0 0.4231,-0.21154 0.58037,-0.7919 1.00345,-1.00344 0.80277,-0.40139 2.20761,0.40137 3.01038,0 0.4231,-0.21156 0.58037,-0.79192 1.00346,-1.00348 0.29918,-0.14957 0.66897,0 1.00346,0 0.33447,0 0.66897,0 1.00345,0 2.00691,0 4.01383,0 6.02074,0 0.45192,0 2.70499,0.1527 3.01037,0 0.42308,-0.21154 0.58035,-0.79191 1.00345,-1.00346 0.36289,-0.18142 4.31934,0 5.01728,0 0.3345,0 0.76694,-0.2365 1.00345,0 0.23654,0.23654 -0.23651,0.76696 0,1.00346 0.0322,0.0322 2.76701,0 3.01038,0 4.6828,0 9.36561,0 14.04839,0 0.33449,0 0.66897,0 1.00345,0 0.33449,0 0.76695,-0.2365 1.00346,0 0.23652,0.23653 -0.23651,0.76695 0,1.00348 0.50172,0.50172 2.50865,-0.50175 3.01038,0 0.23651,0.23651 -0.23653,0.76692 0,1.00344 0.47302,0.47304 1.40857,-0.29917 2.0069,0 0.4231,0.21155 0.58037,0.79192 1.00347,1.00345 0.59835,0.29917 1.53387,-0.47302 2.00691,0 0.23651,0.23653 -0.23652,0.76695 0,1.00346 0.47303,0.47303 1.40857,-0.29917 2.00693,0 0.42307,0.21154 0.58034,0.79191 1.00344,1.00346 0.39786,0.19893 2.80522,-0.20515 3.01036,0 0.23653,0.23652 -0.2365,0.76695 0,1.00346 0.20514,0.20515 2.61252,-0.19894 3.01037,0 0.42311,0.21155 0.58037,0.79191 1.00346,1.00346 0.26385,0.13192 3.4891,0 4.01383,0 1.00345,0 2.00692,0 3.01038,0 0.33447,0 1.33793,0 1.00345,0 -0.66898,0 -2.6759,0 -2.00691,0 7.11724,0 0.58781,-0.70956 4.01381,1.00345 0.39788,0.19894 2.80523,-0.20514 3.01038,0 0.23652,0.23653 -0.23653,0.76694 0,1.00346 0.47302,0.47302 1.40857,-0.29917 2.00689,0 0.42311,0.21156 0.58038,0.79191 1.00347,1.00345 0.29917,0.14959 0.76693,-0.23651 1.00345,0 0.23651,0.23652 -0.23652,0.76694 0,1.00346 0.23651,0.23651 0.66897,0 1.00346,0 0,0.33447 -0.23651,0.76693 0,1.00346 0.23652,0.23652 0.76694,-0.23653 1.00345,0 0.23652,0.23652 -0.23651,0.76695 0,1.00345 0.23652,0.23652 0.76695,-0.2365 1.00347,0 0.23651,0.23652 -0.14959,0.70428 0,1.00346 0.21154,0.4231 0.79191,0.58036 1.00346,1.00346 0.14959,0.29916 -0.23653,0.76693 0,1.00346 0.2365,0.23651 0.76693,-0.23653 1.00344,0 0.23653,0.23651 -0.14958,0.70429 0,1.00346 0.21155,0.4231 0.79191,0.58035 1.00346,1.00344 0.14958,0.29918 -0.23652,0.76694 0,1.00345 0.23653,0.23652 0.76694,-0.23651 1.00345,0 0.47305,0.47306 -0.47304,1.5339 0,2.00693 0.23653,0.23651 0.76695,-0.23653 1.00347,0 0.47303,0.47302 -0.47303,1.53388 0,2.0069 0.23651,0.23653 0.76693,-0.23651 1.00345,0 0.23651,0.23653 -0.23652,0.76695 0,1.00348 0.23651,0.2365 0.76695,-0.23653 1.00345,0 0.47304,0.47302 -0.47302,1.53387 0,2.0069 0.23654,0.23652 0.76695,-0.23653 1.00346,0 0.47303,0.47302 -0.47303,1.53387 0,2.0069 0.23652,0.23653 0.76695,-0.23651 1.00347,0 0.47303,0.47305 -0.47305,1.5339 0,2.00692 0.23651,0.23651 0.76693,-0.23651 1.00345,0 0.50173,0.50173 -0.50173,2.50863 0,3.01036 0.23651,0.23653 0.76693,-0.23651 1.00346,0 0.47303,0.47305 -0.47304,1.53389 0,2.00693 0.23652,0.2365 0.76695,-0.23653 1.00344,0 0.23654,0.2365 -0.23649,0.76694 0,1.00345 0.23654,0.23653 0.76695,-0.23651 1.00346,0 0.47305,0.47304 -0.47303,1.53388 0,2.00692 0.23652,0.2365 0.76695,-0.23652 1.00347,0 0.2365,0.2365 -0.23652,0.76693 0,1.00345 0.2365,0.23651 0.66896,0 1.00345,0 0.3345,0 0.66897,0 1.00346,0 0.33448,0 0.66898,0 1.00345,0 0.33449,0 0.76694,-0.23652 1.00346,0 0.23651,0.23651 0.33448,1.00346 0,1.00346 -0.33448,0 -0.23652,-0.76695 0,-1.00346 0.23651,-0.23652 0.70428,0.14958 1.00346,0 0.42309,-0.21153 0.58035,-0.79191 1.00346,-1.00345 0.29916,-0.14959 0.70429,0.14958 1.00345,0 0.42311,-0.21156 0.58037,-0.7919 1.00345,-1.00347 0.29918,-0.14957 0.76694,0.23653 1.00347,0 0.2365,-0.2365 -0.23653,-0.76692 0,-1.00345 0.33466,-0.33469 1.67222,0.33468 2.00691,0 0.23651,-0.23651 -0.23653,-0.76695 0,-1.00345 0.23651,-0.23653 0.76694,0.2365 1.00345,0 0.23652,-0.23653 -0.33449,-1.00346 0,-1.00346 0.66898,0 -0.47304,1.53387 0,2.00691 0.23652,0.23653 0.76694,-0.23651 1.00344,0 0.50176,0.50172 -0.50172,2.50866 0,3.01037 0.23654,0.23651 0.76696,-0.23652 1.00348,0 0.47303,0.47304 -0.47305,1.53388 0,2.00692 0.23651,0.23651 0.66896,0 1.00346,0 0.33448,0 0.70428,0.14959 1.00345,0 0.42309,-0.21155 0.58036,-0.79192 1.00345,-1.00346 0.29919,-0.14959 0.70426,0.14959 1.00345,0 0.42309,-0.21155 0.58038,-0.79191 1.00347,-1.00346 0.29915,-0.14959 0.76693,0.23651 1.00345,0 0.23652,-0.23652 -0.23652,-0.76695 0,-1.00345 0.23652,-0.23652 0.76697,0.2365 1.00345,0 0.23655,-0.23652 -0.23648,-0.76694 0,-1.00347 0.47302,-0.47303 1.53388,0.47304 2.00692,0 0.23651,-0.2365 -0.23652,-0.76692 0,-1.00345 0.47303,-0.47304 1.53389,0.47304 2.00691,0 0.23652,-0.23651 -0.23652,-0.76695 0,-1.00345 0.47303,-0.47304 1.5339,0.47303 2.00692,0 0.23652,-0.23653 -0.23651,-0.76696 0,-1.00346 0.23652,-0.23652 0.66895,0 1.00345,0 0,-0.33448 -0.23652,-0.76694 0,-1.00347 0.31072,-0.31071 4.70657,0.31074 5.01728,0 0.23651,-0.23651 -0.23652,-0.76692 0,-1.00345 0.23651,-0.2365 0.66898,0 1.00348,0 0.71122,0 5.76129,0.12972 6.02073,0 0.42309,-0.21154 0.58034,-0.79191 1.00343,-1.00345 0.59837,-0.29917 1.5339,0.47303 2.00693,0 0.23652,-0.23652 -0.23651,-0.76695 0,-1.00346 0.47303,-0.47302 1.40856,0.29918 2.00693,0 0.42308,-0.21154 0.58034,-0.7919 1.00343,-1.00344 0.63069,-0.31537 3.38314,0.31533 4.01384,0 0.4231,-0.21156 0.58036,-0.79191 1.00345,-1.00348 0.26387,-0.13191 3.48913,0 4.01383,0 0.24337,0 2.97811,0.0322 3.01037,0 0.23652,-0.23651 -0.23651,-0.76692 0,-1.00346 0.0323,-0.0322 2.767,0 3.01036,0 0.3345,0 0.669,0 1.00345,0 0.33449,0 1.00347,-0.33447 1.00347,0 0,0.3345 -1.00347,0.3345 -1.00347,0 0,-1.42494 3.54632,-1.00344 1.00347,-1.00344 -0.33449,0 -0.66898,0 -1.00347,0 -1.16617,2.74862 -1.00345,5.21105 -1.00345,8.02765 0,0.33447 0,0.66897 0,1.00346 0,0.33449 -0.14958,0.70428 0,1.00345 0.21155,0.4231 0.79194,0.58037 1.00345,1.00345 0.18144,0.36289 0,4.31934 0,5.01729 0,4.01382 0,8.02765 0,12.04147 0,1.33796 0,2.67589 0,4.01383 0,0.3345 0.33449,1.00345 0,1.00345 -0.33445,0 0,-1.33793 0,-1.00345 0,0.66897 0,1.33796 0,2.00691 0,0.33449 0.23655,0.76695 0,1.00347 -0.23652,0.23651 -0.76692,-0.23652 -1.00345,0 -0.23652,0.23651 0.23653,0.76693 0,1.00345 -0.23652,0.2365 -0.76692,-0.23652 -1.00344,0 -0.23651,0.2365 0.23652,0.76693 0,1.00345 -0.23651,0.23653 -0.76696,-0.23652 -1.00347,0 -0.23652,0.23653 0.23651,0.76695 0,1.00346 -0.23652,0.23653 -0.76693,-0.23651 -1.00345,0 -0.23651,0.23653 0.23652,0.76695 0,1.00346 -0.23651,0.23651 -0.76692,-0.23651 -1.00344,0 -0.23655,0.23651 0.23652,0.76694 0,1.00346 -0.23655,0.23651 -0.76696,-0.23652 -1.00348,0 -0.23651,0.23651 0.23652,0.76692 0,1.00346 -0.23651,0.23649 -0.76693,-0.23654 -1.00345,0 -0.2365,0.23649 0.23652,0.76692 0,1.00345 -0.2365,0.23653 -0.76695,-0.23653 -1.00347,0 -0.23652,0.23653 0.23652,0.76694 0,1.00345 -0.23652,0.23652 -0.76692,-0.23651 -1.00344,0 -0.23652,0.23652 0.14959,0.70428 0,1.00346 -0.60209,1.20414 -2.40829,1.80623 -3.01037,3.01037 -0.14958,0.29918 0.1496,0.70428 0,1.00345 -0.21154,0.4231 -0.66898,0.66898 -1.00348,1.00347 -0.33449,0.33447 -0.58034,0.79191 -1.00344,1.00346 -0.29917,0.14959 -0.76693,-0.23654 -1.00344,0 -0.23656,0.23651 0.14955,0.70428 0,1.00345 -0.60207,1.20414 -2.40832,1.80621 -3.0104,3.01037 -0.14958,0.29917 0.23655,0.76693 0,1.00346 -0.23648,0.23651 -0.76692,-0.23653 -1.00344,0 -0.23651,0.23651 0.23652,0.76694 0,1.00344 -0.23651,0.23653 -0.76693,-0.2365 -1.00344,0 -0.47303,0.47304 0.47303,1.53387 0,2.00694 -0.23652,0.2365 -0.76697,-0.23653 -1.00349,0 -0.2365,0.2365 0,0.66895 0,1.00344 0,0.33447 0,0.66897 0,1.00345 1.16823,7.85257 -3.74356,0.73323 -5.01728,2.00691 -0.23651,0.23653 0.23652,0.76695 0,1.00347 -0.23651,0.23651 -0.76693,-0.23652 -1.00343,0 -0.23652,0.23651 0.2365,0.76693 0,1.00345 -0.23652,0.23651 -0.76693,-0.23652 -1.00345,0 -0.23655,0.23651 0.23652,0.76693 0,1.00346 -0.47303,0.47303 -1.53389,-0.47304 -2.00692,0 -0.23652,0.23652 0.23652,0.76695 0,1.00345 -0.47303,0.47304 -1.53389,-0.47304 -2.00692,0 -0.23652,0.23653 0.23651,0.76694 0,1.00345 -0.23652,0.23652 -0.76697,-0.23651 -1.00344,0 -0.23655,0.23652 0.23647,0.76695 0,1.00347 -0.47303,0.47304 -1.5339,-0.47303 -2.00693,0 -0.23651,0.2365 0.23652,0.76692 0,1.00346 -0.23651,0.2365 -0.76692,-0.23654 -1.00347,0 -0.23648,0.2365 0.33449,1.00345 0,1.00345 -0.33449,0 0.33449,-1.00345 0,-1.00345 -0.47304,0 -0.58036,0.79191 -1.00345,1.00345 -0.29918,0.14959 -1.00344,0.33448 -1.00344,0 0,-0.3345 1.33794,0 1.00344,0 -0.66894,0 -1.37228,-0.21154 -2.00691,0 -0.44878,0.14959 -0.58035,0.79191 -1.00345,1.00345 -0.59836,0.29918 -1.53389,-0.47303 -2.00692,0 -0.23652,0.23652 0.23652,0.76694 0,1.00347 -0.47303,0.47303 -1.53385,-0.47304 -2.00692,0 -0.23652,0.2365 0.23652,0.76693 0,1.00345 -0.47303,0.47304 -1.40856,-0.29918 -2.0069,0 -0.42309,0.21155 -1.47649,1.00346 -1.00345,1.00346 0.74792,0 2.75486,-1.00346 2.0069,-1.00346 -1.05773,0 -1.98421,0.74692 -3.01036,1.00346 -0.3245,0.0811 -0.76694,-0.23654 -1.00348,0 -1.33793,1.33793 1.67244,1.00345 -1.00344,1.00345 -0.33449,0 -1.33794,0 -1.00345,0 0.66896,0 2.67588,0 2.00689,0 -1.00344,0 -2.0584,-0.31733 -3.01035,0 -0.31732,0.10577 0,0.66898 0,1.00345 -0.33449,0 -0.66897,0 -1.00345,0 -0.33449,0 -0.66898,0 -1.00347,0 -0.33447,0 -0.76693,-0.23651 -1.00345,0 -0.2365,0.23653 0.23652,0.76694 0,1.00348 -0.47304,0.47303 -1.53388,-0.47305 -2.00691,0 -0.23652,0.2365 0.23651,0.76692 0,1.00344 -0.50173,0.50173 -2.50865,-0.50173 -3.01037,0 -0.23653,0.23652 0.23652,0.76693 0,1.00346 -0.23653,0.23651 -0.66896,0 -1.00346,0 -0.33449,0 -1.00345,0.33449 -1.00345,0 0,-0.33449 1.23996,-0.23653 1.00345,0 -2.36724,2.36724 -3.01038,-0.59331 -3.01038,2.0069 0,2.67589 0.3345,-0.33448 -1.00344,1.00348 -0.47304,0.47302 0.47303,1.53387 0,2.0069 -0.23653,0.23652 -0.76695,-0.23651 -1.00346,0 -0.23652,0.23652 0.23651,0.76694 0,1.00345 -0.23652,0.23653 -0.76694,-0.23651 -1.00345,0 -0.47305,0.47304 0.47303,1.53389 0,2.00692 -0.23652,0.23651 -0.66897,0 -1.00347,0 0,0.33449 0.23652,0.76694 0,1.00345 -0.23651,0.23654 -0.76692,-0.23651 -1.00346,0 -0.47302,0.47303 0.47304,1.53388 0,2.00691 -0.2365,0.23653 -0.76694,-0.2365 -1.00345,0 -0.23652,0.23653 0.23651,0.76695 0,1.00347 -0.23652,0.2365 -0.76694,-0.23652 -1.00345,0 -0.23652,0.2365 0.23651,0.76693 0,1.00345 -0.23652,0.23651 -0.76694,-0.23652 -1.00347,0 -0.23651,0.23651 0.14959,0.70429 0,1.00345 -0.21154,0.42311 -0.79191,0.58037 -1.00345,1.00346 -0.14957,0.29918 0.23653,0.76695 0,1.00347 -0.23652,0.2365 -0.70429,-0.14959 -1.00346,0 -0.42309,0.21154 -0.66896,1.33793 -1.00344,1.00346 -0.3345,-0.3345 1.47648,-1.00346 1.00344,-1.00346 -5.06925,0 -0.77117,0.77117 -2.0069,2.0069 -0.23652,0.23653 -0.76695,-0.23652 -1.00347,0 -0.23651,0.23653 0.23652,0.76695 0,1.00346 -0.23651,0.23652 -0.76693,-0.23651 -1.00345,0 -0.23651,0.23652 0.23652,0.76695 0,1.00346 -0.23651,0.23651 -1.00346,0.33447 -1.00346,0 0,-0.0737 2.82626,0.0921 3.01038,0 0.42309,-0.21155 0.58035,-0.79192 1.00346,-1.00346 0.29916,-0.14959 0.76693,0.23652 1.00344,0 0.23653,-0.23651 -0.23651,-0.76693 0,-1.00346 0.47304,-0.47303 1.53387,0.47304 2.00691,0 0.23653,-0.23652 -0.23651,-0.76695 0,-1.00344 0.47305,-0.47304 1.53389,0.47303 2.00692,0 0.23651,-0.23653 -0.23652,-0.76696 0,-1.00346 0.23651,-0.23652 0.76695,0.2365 1.00345,0 0.23654,-0.23652 -0.2365,-0.76695 0,-1.00347 0.47304,-0.47304 1.53388,0.47303 2.00693,0 0.23651,-0.23651 -0.23652,-0.76692 0,-1.00346 0.23651,-0.23651 0.76693,-0.23651 1.00345,0 0.23651,0.23654 -0.23652,0.76695 0,1.00346 0.23651,0.23652 0.76693,-0.23651 1.00346,0 0.23652,0.23652 -0.23653,0.76695 0,1.00347 0.23652,0.2365 0.76695,-0.23652 1.00344,0 0.23654,0.2365 -0.23649,0.76693 0,1.00346 0.23654,0.23649 0.76695,-0.23653 1.00346,0 0.47305,0.47303 -0.47303,1.53387 0,2.0069 0.23652,0.23652 0.76695,-0.23651 1.00347,0 0.47304,0.47303 -0.47305,1.53387 0,2.00692 0.2365,0.23651 0.76692,-0.23653 1.00345,0 0.47304,0.47303 -0.47303,1.53387 0,2.0069 0.23651,0.23653 0.76693,-0.23652 1.00346,0 0.23652,0.23653 -0.23653,0.76695 0,1.00346 0.33434,0.33437 1.67255,-0.33435 2.00691,0 0.23651,0.23652 -0.23652,0.76694 0,1.00345 0.0404,0.0404 3.64531,0 4.01382,0 2.67589,0 -0.33447,-0.33447 1.00347,1.00347 0.2365,0.23651 0.66896,0 1.00345,0 0.33449,0 0.66897,0 1.00346,0 0.33449,0 1.33794,0 1.00345,0 -0.66896,0 -2.67588,0 -2.00691,0 4.68279,0 9.36557,0 14.0484,0 0.3345,0 0.76692,-0.23653 1.00344,0 0.23652,0.23651 -0.23652,0.76693 0,1.00346 0.23652,0.2365 0.66896,0 1.00345,0 0.24336,0 2.97814,0.0322 3.0104,0 0.23647,-0.23653 -0.23655,-0.76695 0,-1.00346 0.47302,-0.47303 1.53384,0.47303 2.00689,0 0.23651,-0.23653 -0.23653,-0.76694 0,-1.00347 0.47303,-0.47303 1.53388,0.47306 2.00691,0 0.23651,-0.23651 -0.23652,-0.76693 0,-1.00345 0.50172,-0.50173 2.50865,0.50173 3.01036,0 0.23652,-0.23651 -0.23651,-0.76693 0,-1.00346 0.50172,-0.50173 2.50864,0.50173 3.01036,0 0.23656,-0.23652 -0.23651,-0.76695 0,-1.00344 2.67591,0 -0.33445,0.33448 1.00349,-1.00346 0.20514,-0.20514 2.61249,0.19892 3.01036,0 0.4231,-0.21157 0.58039,-0.79191 1.00344,-1.00346 0.54441,-0.27218 3.73926,0.27456 4.01384,0 0.23652,-0.23651 -0.23651,-0.76694 0,-1.00346 0.47304,-0.47303 1.40856,0.29918 2.00692,0 3.32804,-3.32804 -0.94606,0.47303 2.00693,-1.00346 0.42305,-0.21154 0.58035,-0.79192 1.00344,-1.00344 0.29918,-0.14961 0.76692,0.23649 1.00344,0 0.23652,-0.23653 -0.23652,-0.76696 0,-1.00346 0.23652,-0.23652 0.7043,0.14958 1.00347,0 0.4231,-0.21156 0.58036,-0.79191 1.00345,-1.00347 0.29918,-0.14957 0.76693,0.23652 1.00348,0 0.23652,-0.23651 -0.23655,-0.76692 0,-1.00346 0.23652,-0.23651 0.76693,0.23654 1.00344,0 0.23652,-0.23651 -0.23651,-0.76694 0,-1.00345 0.23652,-0.23652 0.76693,0.23651 1.00345,0 0.23651,-0.23652 -0.23652,-0.76695 0,-1.00345 0.23651,-0.23652 0.76696,0.2365 1.00347,0 0.23652,-0.23652 -0.23651,-0.76694 0,-1.00347 0.23652,-0.2365 0.76692,0.23653 1.00344,0 0.23653,-0.2365 -0.23652,-0.76693 0,-1.00345 0.23653,-0.23651 0.76693,0.23652 1.00345,0 0.23655,-0.23651 -0.23652,-0.76692 0,-1.00346 0.23655,-0.23651 0.76696,0.23654 1.00347,0 0.23652,-0.23651 -0.33449,-1.00345 0,-1.00345 0.3345,0 -0.33449,1.00345 0,1.00345 0.47303,0 0.58035,-0.7919 1.00345,-1.00345 0.29917,-0.14959 0.66898,0 1.00348,0 0.33445,0 1.33793,0 1.00344,0 -0.66899,0 -2.67587,0 -2.00692,0 1.00348,0 2.00692,0 3.01037,0 0.33448,0 0.76695,0.23651 1.00347,0 1.33794,-1.33794 -1.67243,-1.00345 1.00344,-1.00345 1.67243,0 3.34486,0 5.01729,0 0.66898,0 2.6759,0 2.00692,0 -0.66895,0 -2.67591,0 -2.00692,0 1.00348,0 2.00692,0 3.01035,0 0.3345,0 0.76698,-0.23653 1.00345,0 0.23655,0.23651 -0.23647,0.76693 0,1.00345 0.23655,0.23651 0.66899,0 1.00348,0 0.33449,0 0.66898,0 1.00348,0 4.68279,0 9.36558,0 14.04838,0 2.00691,0 4.01383,0 6.02072,0 0.3345,0 0.76697,0.23651 1.00344,0 0.23656,-0.23652 -0.23647,-0.76694 0,-1.00345 0.0323,-0.0323 2.76704,0 3.0104,0 2.67587,0 5.35178,0 8.02765,0 0.4519,0 2.70497,-0.1527 3.01036,0 0.4231,0.21155 0.58036,0.79191 1.00349,1.00345 0.54431,0.27219 3.73925,-0.27456 4.01379,0 0.23652,0.23651 -0.23651,0.76694 0,1.00345 0.47304,0.47303 2.00693,-0.66896 2.00693,0 0,0.3345 -1.00344,-0.33449 -1.00344,0 0,0.47303 0.7919,0.58037 1.00344,1.00346 0.982,1.96403 -1.51377,0.5103 -2.00693,1.00345 -0.23651,0.23653 0.23652,0.76695 0,1.00347 -0.23651,0.2365 -0.76692,-0.23652 -1.00347,0 -0.23648,0.2365 0.23655,0.76693 0,1.00345 -0.23648,0.23651 -0.76692,-0.23652 -1.00345,0 -0.23651,0.23651 0.23653,0.76694 0,1.00345 -0.23651,0.23654 -0.70425,-0.14958 -1.00343,0 -0.4231,0.21155 -0.58039,0.79192 -1.00344,1.00346 -0.29919,0.1496 -0.76698,-0.23651 -1.00349,0 -0.23651,0.23652 0.23651,0.76695 0,1.00347 -0.23651,0.2365 -0.76693,-0.23652 -1.00344,0 -0.23651,0.2365 0.23651,0.76693 0,1.00346 -0.47303,0.47303 -1.53389,-0.47304 -2.00692,0 -0.23652,0.23649 0.23651,0.76692 0,1.00344 -0.23652,0.23653 -0.66899,0 -1.00344,0 -0.33449,0 -1.00348,0.33449 -1.00348,0 0,-0.33449 1.33793,0 1.00348,0 -0.66899,0 -1.40861,-0.29916 -2.00692,0 -0.29918,0.1496 0.23651,0.76695 0,1.00346 -0.50173,0.50172 -2.50864,-0.50173 -3.01037,0 -0.23651,0.23652 0.23652,0.76695 0,1.00346 -0.24146,0.24146 -3.77237,-0.24146 -4.01383,0 -0.23653,0.23651 0.23651,0.76693 0,1.00346 -0.23653,0.23651 -0.669,0 -1.00349,0 -0.33446,0 -0.66894,0 -1.00344,0 -0.33445,0 -0.66895,0 -1.00345,0 -0.33449,0 -0.76696,-0.23653 -1.00344,0 -0.23655,0.23651 0.23648,0.76692 0,1.00346 -0.24146,0.24146 -3.77237,-0.24146 -4.01383,0 -0.23652,0.23649 0.23652,0.76692 0,1.00344 -0.50173,0.50173 -2.50865,-0.50173 -3.01038,0 -0.2365,0.23653 0.23653,0.76695 0,1.00346 -0.47302,0.47302 -1.53388,-0.47303 -2.00691,0 -0.23651,0.23652 0.23652,0.76694 0,1.00345 -0.23651,0.23653 -0.7043,-0.14958 -1.00344,0 -3.32808,3.32805 0.94606,-0.47303 -2.00692,1.00347 -0.4231,0.21155 -0.58035,0.79192 -1.00349,1.00346 -0.29913,0.14959 -0.70426,-0.1496 -1.00344,0 -0.42309,0.21154 -0.58035,0.7919 -1.00344,1.00345 -0.29918,0.14958 -0.76696,-0.23651 -1.00348,0 -0.23651,0.23652 0.23652,0.76694 0,1.00344 -0.23651,0.23653 -0.66895,0 -1.00343,0 -0.3345,0 -0.66899,0 -1.00345,0 -0.3345,0 -1.33797,0 -1.00348,0 0.66898,0 2.67591,0 2.00693,0 -1.00345,0 -2.05843,-0.31731 -3.01041,0 -0.31731,0.10579 0.23655,0.76696 0,1.00348 -0.33434,0.33435 -1.67253,-0.33437 -2.00688,0 -0.23652,0.23651 0.23651,0.76692 0,1.00346 -0.47304,0.47302 -1.40856,-0.29919 -2.00692,0 -0.4231,0.21154 -0.58035,0.7919 -1.00344,1.00344 -0.29919,0.14959 -0.70431,-0.14959 -1.00348,0 -0.4231,0.21155 -0.58035,0.79191 -1.00344,1.00345 -0.29918,0.14959 -0.76697,-0.23651 -1.00345,0 -0.23655,0.23653 0.23648,0.76695 0,1.00346 -0.23655,0.23652 -0.7043,-0.14958 -1.00348,0 -0.42309,0.21156 -0.58035,0.79191 -1.00344,1.00347 -0.29918,0.14958 -0.76692,-0.23652 -1.00347,0 -0.23648,0.23651 0.23655,0.76693 0,1.00345 -0.23648,0.23651 -0.76694,-0.23652 -1.00345,0 -0.23652,0.23651 0.23651,0.76695 0,1.00345 -0.23652,0.23653 -0.76692,-0.2365 -1.00344,0 -0.23651,0.23653 0.23652,0.76695 0,1.00346 -0.47303,0.47303 -1.5339,-0.47303 -2.00693,0 -0.23651,0.23653 0.23652,0.76695 0,1.00347 -0.23651,0.23651 -0.76692,-0.23652 -1.00347,0 -0.23652,0.23651 0.23655,0.76693 0,1.00344 -0.47304,0.47304 -1.53386,-0.47302 -2.00689,0 -0.23651,0.23652 0.23652,0.76694 0,1.00346 -0.20514,0.20514 -2.61253,-0.19894 -3.01036,0 -0.42314,0.21154 -0.58039,0.79192 -1.00348,1.00345 -0.30539,0.15271 -2.55843,0 -3.01036,0 -2.67587,0 -5.35177,0 -8.02764,0 -1.67244,0 -3.34487,0 -5.01729,0 -0.33449,0 -0.76693,-0.2365 -1.00349,0 -0.23651,0.23653 0.23656,0.76695 0,1.00346 -0.23651,0.23652 -0.66895,0 -1.00343,0 -0.33449,0 -0.66899,0 -1.00344,0 -2.67587,0 -5.35178,0 -8.02765,0 -0.3345,0 -0.76697,-0.23651 -1.00348,0 -0.23652,0.23652 0.23651,0.76695 0,1.00346 -0.27455,0.27456 -3.46947,-0.27218 -4.01381,0 -0.42309,0.21155 -0.58039,0.79191 -1.00347,1.00346 -0.39787,0.19892 -2.80523,-0.20514 -3.01037,0 -0.23652,0.2365 0.23652,0.76692 0,1.00346 -0.24146,0.24145 -3.77237,-0.24146 -4.01382,0 -0.23653,0.23652 0.23652,0.76694 0,1.00345 -0.0454,0.0454 -4.54417,0 -5.01728,0 -1.67243,0 -3.34485,0 -5.01728,0 -0.69374,0 -3.73507,0 -2.00692,0 0.66897,0 2.67588,0 2.00692,0 -1.33795,0 -2.67589,0 -4.01383,0 -0.33449,0 -0.66896,0 -1.00346,0 -0.33449,0 -0.76695,0.23652 -1.00345,0 -0.23652,-0.23651 0.2365,-0.76693 0,-1.00345 -0.0404,-0.0404 -3.64532,0 -4.01383,0 -0.33449,0 -1.00345,0.33448 -1.00345,0 0,-0.33449 1.33792,0 1.00345,0 -0.66899,0 -1.40858,-0.29917 -2.00692,0 -0.29917,0.14958 0.23652,0.76694 0,1.00345 -0.23651,0.23652 -0.66896,0 -1.00346,0 -0.33448,0 -0.66895,0 -1.00345,0 -0.33448,0 -1.33794,0 -1.00345,0 0.66897,0 2.0069,-0.66897 2.0069,0 0,1.87689 -5.55766,0.54039 -6.02072,1.00345 -1.33796,1.33793 1.67241,1.00346 -1.00346,1.00346 -0.3345,0 -0.66898,0 -1.00347,0 -0.33447,0 -0.70427,-0.14958 -1.00345,0 -0.42309,0.21155 -0.58037,0.79192 -1.00346,1.00346 -0.59834,0.29917 -1.53387,-0.47303 -2.00692,0 -0.23649,0.23651 0.23654,0.76695 0,1.00346 -0.23649,0.23651 -0.76692,-0.23651 -1.00344,0 -0.23651,0.23651 0.23652,0.76694 0,1.00345 -0.23651,0.23652 -0.76693,-0.23651 -1.00345,0 -0.23653,0.23652 0.23652,0.76694 0,1.00347 -0.23653,0.2365 -1.00346,0.33447 -1.00346,0 0,-0.33449 1.33794,0 1.00346,0 -0.66897,0 -1.40859,-0.29919 -2.00691,0 -0.29919,0.14957 -0.23653,0.76693 0,1.00345 0.47303,0.47303 1.53388,-0.47304 2.00691,0 0.23652,0.23651 -0.23653,0.76692 0,1.00345 0.14757,0.14756 3.01036,-0.11805 3.01036,0 0,0.33449 -1.33794,0 -1.00347,0 0.66898,0 1.40858,-0.29916 2.00692,0 0.29917,0.14959 0.23651,0.76695 0,1.00345 -0.23652,0.23652 -0.76693,-0.2365 -1.00345,0 -0.23653,0.23652 0.23652,0.76694 0,1.00345 -0.47303,0.47306 -1.53388,-0.47302 -2.00691,0 -0.23651,0.23653 0.23652,0.76695 0,1.00348 -0.24146,0.24146 -3.77236,-0.24148 -4.01383,0 -0.23651,0.2365 0.23652,0.76693 0,1.00345 -0.33435,0.33434 -1.67256,-0.33438 -2.0069,0 -0.23653,0.23651 0.23652,0.76693 0,1.00345 -0.23653,0.23652 -0.76696,-0.23652 -1.00345,0 -0.23654,0.23652 0.23649,0.76695 0,1.00345 -0.23654,0.23653 -0.7043,-0.14957 -1.00346,0 -0.42311,0.21157 -0.58036,0.79191 -1.00347,1.00346 -0.59835,0.29919 -1.53388,-0.47303 -2.00691,0 -0.23652,0.23653 0.23651,0.76694 0,1.00347 -0.47303,0.47303 -1.53387,-0.47304 -2.00692,0 -0.23651,0.23651 0.23653,0.76693 0,1.00345 -0.47303,0.47302 -1.40856,-0.29918 -2.00691,0 -0.42308,0.21155 -0.58036,0.79191 -1.00346,1.00345 -0.29917,0.14959 -0.76694,-0.23651 -1.00344,0 -0.23653,0.23653 0.2365,0.76695 0,1.00345 -0.23653,0.23653 -0.76694,-0.2365 -1.00347,0 -0.2365,0.23653 0.23653,0.76695 0,1.00348 -0.47303,0.47302 -1.53388,-0.47305 -2.00691,0 -0.23652,0.2365 0.23653,0.76693 0,1.00344 -0.23652,0.23651 -0.76694,-0.23651 -1.00345,0 -0.23652,0.23651 0.23651,0.76694 0,1.00346 -0.23652,0.23654 -0.76695,-0.23652 -1.00344,0 -0.23654,0.23654 0.23649,0.76695 0,1.00346 -0.23654,0.23652 -0.76696,-0.23651 -1.00349,0 -0.2365,0.23652 0.23653,0.76695 0,1.00345 -0.2365,0.23652 -0.76693,-0.2365 -1.00344,0 -0.23652,0.23652 0.23651,0.76695 0,1.00347 -0.23652,0.2365 -0.76694,-0.23652 -1.00345,0 -0.23652,0.2365 0.23651,0.76693 0,1.00345 -0.23652,0.23651 -0.76695,-0.23652 -1.00346,0 -0.23652,0.23651 0.23651,0.76695 0,1.00345 -0.23652,0.23653 -0.76694,-0.2365 -1.00347,0 -0.23651,0.23653 0.23653,0.76696 0,1.00346 -0.23651,0.23652 -0.76693,-0.2365 -1.00346,0 -0.2365,0.23652 0.23653,0.76694 0,1.00347 -0.50172,0.50173 -2.50863,-0.50175 -3.01035,0 -0.23653,0.23651 0.2365,0.76692 0,1.00346 -0.23653,0.23649 -0.66898,0 -1.00347,0 -0.33447,0 -1.33794,0 -1.00346,0 0.66899,0 2.00693,0.66895 2.00693,0 0,-2.7632 -2.2903,-0.28339 -3.01038,-1.00346 -0.23653,-0.23653 0.23652,-0.76695 0,-1.00347 -0.23653,-0.2365 -0.76694,0.23652 -1.00345,0 -0.23652,-0.2365 0,-0.66896 0,-1.00346 0,-1.67243 0,-3.34484 0,-5.01728 0,-1.67243 0,-3.34485 0,-5.01728 0,-0.33449 0,-0.66898 0,-1.00345 0,-0.33449 0.14957,-0.70428 0,-1.00347 -0.21156,-0.42308 -0.79192,-0.58035 -1.00347,-1.00346 -0.29917,-0.59835 0.47305,-1.53388 0,-2.0069 -0.2365,-0.23652 -0.76693,0.23651 -1.00345,0 -0.23651,-0.23652 0.14959,-0.70429 0,-1.00345 -0.21155,-0.42311 -0.79192,-0.58038 -1.00345,-1.00348 -0.1496,-0.29916 0.23652,-0.76693 0,-1.00345 -0.23653,-0.2365 -0.76695,0.23652 -1.00346,0 -0.23653,-0.2365 0,-0.66896 0,-1.00345 -0.33448,0 -0.76695,0.23652 -1.00346,0 -0.23651,-0.23653 0.23651,-0.76694 0,-1.00345 -0.23651,-0.23652 -0.76694,0.23651 -1.00346,0 -0.23651,-0.23652 0.14959,-0.7043 0,-1.00345 -0.21154,-0.42311 -0.79191,-0.58037 -1.00346,-1.00347 -0.14959,-0.29917 0.23654,-0.76694 0,-1.00345 -0.2365,-0.23651 -0.76692,0.23651 -1.00344,0 -0.23653,-0.23651 0.23652,-0.76695 0,-1.00346 -0.0454,-0.0454 -4.54417,0 -5.01729,0 -5.68626,0 6.68972,0 1.00345,0 -3.34484,0 -6.68971,0 -10.03456,0 -0.33449,0 -0.66897,0 -1.00345,0 -0.33449,0 -0.76695,-0.23653 -1.00348,0 -0.2365,0.23651 0.23653,0.76695 0,1.00346 -0.24145,0.24146 -3.77234,-0.24146 -4.0138,0 -0.23653,0.23651 0.23651,0.76694 0,1.00345 -0.50172,0.50172 -2.50865,-0.50174 -3.01038,0 -0.23652,0.23652 0.23653,0.76694 0,1.00347 -0.50172,0.50172 -2.50865,-0.50175 -3.01036,0 -0.23651,0.2365 0.23652,0.76693 0,1.00345 -0.47305,0.47303 -1.40857,-0.29918 -2.00692,0 -0.4231,0.21154 -0.58036,0.79191 -1.00345,1.00345 -0.29918,0.14959 -0.76694,-0.23653 -1.00347,0 -0.2365,0.23652 0.23653,0.76695 0,1.00345 -0.24146,0.24146 -3.77235,-0.24145 -4.0138,0 -0.23654,0.23652 0.2365,0.76694 0,1.00345 -0.0323,0.0322 -2.76701,0 -3.01038,0 -0.3345,0 -0.76695,0.23653 -1.00346,0 -0.23652,-0.23651 0.23651,-0.76693 0,-1.00345 -0.50172,-0.50172 -2.50864,0.50173 -3.01037,0 -0.23651,-0.2365 0.23652,-0.76693 0,-1.00345 -0.31071,-0.31071 -4.70657,0.31071 -5.01728,0 -0.23653,-0.23653 0.23651,-0.76694 0,-1.00345 -0.23653,-0.23652 -0.66897,0 -1.00346,0 -0.33449,0 -0.66897,0 -1.00344,0 -5.68628,0 6.68969,0 1.00344,0 -1.33794,0 -2.67589,0 -4.01383,0 -0.33448,0 -0.66898,0 -1.00345,0 -0.33449,0 -0.76695,-0.23652 -1.00346,0 -0.23651,0.23651 0.23651,0.76692 0,1.00345 -0.0404,0.0404 -3.64531,0 -4.01383,0 -0.24335,0 -2.9781,-0.0322 -3.01036,0 -0.23652,0.23652 0.23652,0.76695 0,1.00345 -0.23652,0.23652 -0.66899,0 -1.00346,0 -0.33449,0 -0.66898,0 -1.00345,0 -0.66897,0 -1.33795,0 -2.00693,0 -0.33447,0 -1.33793,0 -1.00344,0 0.66897,0 2.67588,0 2.0069,0 -1.00346,0 -2.0069,0 -3.01036,0 -0.33449,0 -0.66898,0 -1.00347,0 -0.33447,0 -0.76692,-0.2365 -1.00345,0 -0.0322,0.0323 0,2.76701 0,3.01038 -1.67243,0.66896 -3.34485,1.33794 -5.01728,2.0069 -0.3345,0.33449 -0.58037,0.79191 -1.00345,1.00346 -0.29916,0.14958 -0.76695,-0.23652 -1.00345,0 -0.23654,0.23653 0.2365,0.76694 0,1.00347 -0.23654,0.23651 -0.76695,-0.23653 -1.00346,0 -0.23652,0.23651 0.23651,0.76693 0,1.00345 -0.23652,0.23651 -0.76695,-0.23652 -1.00347,0 -0.2365,0.23651 0.23652,0.76694 0,1.00345 -0.2365,0.23653 -0.76692,-0.23651 -1.00345,0 -0.2365,0.23653 0.23653,0.76695 0,1.00345 -0.2365,0.23653 -0.70429,-0.14957 -1.00345,0 -0.84619,0.42311 -1.16074,1.58382 -2.00692,2.00692 -0.29917,0.1496 -0.76693,-0.23651 -1.00346,0 -0.23651,0.23651 0.23653,0.76694 0,1.00346 -0.23651,0.23654 -0.76692,-0.23652 -1.00346,0 -0.23652,0.23654 0.23654,0.76695 0,1.00346 -0.23652,0.23652 -0.76695,-0.23651 -1.00345,0 -0.23652,0.23652 0.2365,0.76695 0,1.00345 -0.23652,0.23652 -0.76694,-0.2365 -1.00345,0 -0.23652,0.23652 0.23651,0.76695 0,1.00347 -0.23652,0.2365 -0.76694,-0.23652 -1.00346,0 -0.23651,0.2365 0.23652,0.76693 0,1.00345 -0.23651,0.23651 -0.76693,-0.23652 -1.00348,0 -0.23647,0.23651 0.14959,0.70429 0,1.00345 -0.21155,0.42311 -0.79189,0.58037 -1.00344,1.00346 -0.14959,0.29918 0.23652,0.76694 0,1.00347 -0.23651,0.23651 -0.76692,-0.23653 -1.00344,0 -0.23655,0.23651 0.23652,0.76692 0,1.00346 -0.23655,0.23649 -0.76696,-0.23654 -1.00348,0 -0.23651,0.23649 0.1496,0.70428 0,1.00344 -0.21154,0.42309 -0.66895,0.66896 -1.00343,1.00346 -0.33449,0.33449 -0.58036,0.7919 -1.00348,1.00345 -0.29915,0.14959 -0.76693,-0.23651 -1.00345,0 -0.23651,0.23652 0.23652,0.76693 0,1.00347 -0.47303,0.47303 -1.53386,-0.47305 -2.00693,0 -0.2365,0.23651 0.23652,0.76692 0,1.00346 -0.2365,0.23649 -0.76692,-0.23654 -1.00343,0 -0.23652,0.23649 0.23651,0.76692 0,1.00345 -0.23652,0.23652 -0.76692,-0.23653 -1.00348,0 -0.23651,0.23652 0.23656,0.76694 0,1.00345 -0.23651,0.23652 -0.70426,-0.14958 -1.00344,0 -0.4231,0.21155 -0.58035,0.79191 -1.00344,1.00344 -0.29919,0.1496 -0.76697,-0.2365 -1.00348,0 -0.23652,0.23654 0.23651,0.76695 0,1.00348 -0.23652,0.23651 -0.76694,-0.23653 -1.00344,0 -0.23652,0.23651 0.2365,0.76693 0,1.00345 -0.33469,0.33469 -1.67225,-0.33468 -2.00693,0 -0.23652,0.23651 0.23652,0.76694 0,1.00345 -0.47303,0.47303 -1.53388,-0.47302 -2.00691,0 -0.23652,0.23653 0.23651,0.76695 0,1.00346 -0.47304,0.47303 -1.53386,-0.47304 -2.00689,0 -0.23655,0.23652 0.23648,0.76695 0,1.00347 -0.33467,0.33467 -1.67224,-0.33468 -2.00692,0 -0.23652,0.23651 0.23651,0.76693 0,1.00345 -0.47303,0.47303 -1.40857,-0.29918 -2.00693,0 -0.42308,0.21155 -0.58034,0.79191 -1.00344,1.00345 -0.26386,0.13193 -3.48912,0 -4.01384,0 -0.52472,0 -3.74998,0.13193 -4.0138,0 -0.42313,-0.21154 -0.58038,-0.7919 -1.00348,-1.00345 -0.54437,-0.27219 -3.73926,0.27457 -4.01381,0 -0.23656,-0.23652 0.23648,-0.76694 0,-1.00345 -0.23656,-0.23652 -0.66898,0 -1.00348,0 -2.00692,0 -4.0138,0 -6.02072,0 -0.33449,0 -0.76693,0.23651 -1.00349,0 -0.23648,-0.23652 0.23656,-0.76695 0,-1.00347 -0.20514,-0.20515 -2.61249,0.19893 -3.01032,0 -0.42313,-0.21154 -0.58038,-0.79191 -1.00347,-1.00346 -0.25944,-0.12971 -5.30951,0 -6.02073,0 -0.3345,0 -0.76697,-0.23651 -1.00347,0 -0.23652,0.23653 0.2365,0.76695 0,1.00346 -0.23652,0.23652 -0.669,0 -1.00345,0 -0.3345,0 -0.66899,0 -1.00348,0 -3.67932,0 -7.35866,0 -11.03801,0 -0.36851,0 -3.97344,-0.0404 -4.01381,0 -0.23651,0.23652 0.23651,0.76695 0,1.00347 -0.23651,0.23651 -0.76696,-0.23652 -1.00348,0 -0.23651,0.23651 0.23652,0.76693 0,1.00345 -0.23651,0.23651 -0.76692,-0.23652 -1.00343,0 -0.23652,0.23651 0.23651,0.76693 0,1.00345 -0.23652,0.23653 -0.76697,-0.23652 -1.00349,0 -0.47303,0.47304 0.47307,1.53387 0,2.00691 -0.23651,0.23652 -0.76692,-0.23651 -1.00344,0 -0.23651,0.23652 0.1496,0.70429 0,1.00346 -0.21154,0.4231 -0.66894,0.66897 -1.00344,1.00346 -0.3345,0.3345 -0.58038,0.79191 -1.00349,1.00345 -0.29916,0.1496 -0.76692,-0.23652 -1.00343,0 -0.23652,0.23653 0.23651,0.76695 0,1.00346 -0.23652,0.23652 -0.66899,0 -1.00348,0 -1.67239,0 -3.34486,0 -5.01729,0 -0.33446,0 -0.66894,0 -1.00344,0 -0.33449,0 -0.76692,0.23652 -1.00344,0 -0.23652,-0.23651 0.23652,-0.76693 0,-1.00346 -0.47303,-0.47303 -1.53389,0.47304 -2.00692,0 -0.23652,-0.23652 0.23652,-0.76695 0,-1.00345 -0.23652,-0.23652 -0.76692,0.2365 -1.00348,0 -0.23647,-0.23652 0.23656,-0.76694 0,-1.00346 -0.33434,-0.33436 -1.67254,0.33435 -2.00688,0 -1.33794,-1.33793 1.67242,-1.00346 -1.00345,-1.00346 -2.6759,0 0.33446,0.33449 -1.00348,-1.00346 -0.47302,-0.47303 -1.53388,0.47304 -2.00691,0 -0.23652,-0.23651 -0.3345,-1.00345 0,-1.00345 0.47303,0 1.47651,1.00345 1.00347,1.00345 -0.74794,0 -1.29738,-0.76692 -2.00692,-1.00345 -0.31733,-0.10577 -0.76697,0.23653 -1.00347,0 -0.23652,-0.23652 0.2365,-0.76694 0,-1.00345 -0.23652,-0.23652 -0.76693,-0.23652 -1.00345,0 -0.23651,0.23651 0,0.66897 0,1.00345 -1.67242,0.66897 -3.34485,1.33795 -5.01728,2.00691 0,0.33449 0.23652,0.76695 0,1.00346 -0.23651,0.23652 -0.70431,-0.14958 -1.00344,0 -0.42314,0.21156 -0.58039,0.79192 -1.00348,1.00346 -0.29918,0.14959 -0.76693,-0.23652 -1.00345,0 -0.23651,0.2365 0.23652,0.76693 0,1.00345 -0.23651,0.23653 -0.76693,-0.23652 -1.00348,0 -0.23647,0.23653 0.23655,0.76695 0,1.00346 -0.23647,0.23652 -0.70426,-0.14957 -1.00344,0 -0.42309,0.21156 -0.58035,0.79191 -1.00344,1.00346 -0.29918,0.14958 -0.76696,-0.23651 -1.00344,0 -0.23655,0.23651 0.23648,0.76693 0,1.00345 -0.23655,0.23652 -0.7043,-0.14958 -1.00348,0 -0.42309,0.21155 -0.58035,0.79192 -1.00348,1.00346 -0.29914,0.1496 -0.76693,-0.23653 -1.00345,0 -0.2365,0.2365 0.23652,0.76695 0,1.00345 -0.2365,0.23653 -0.66894,0 -1.00343,0 -0.3345,0 -0.66899,0 -1.00345,0 -0.33449,0 -0.76696,-0.2365 -1.00347,0 -0.23652,0.23653 0.23651,0.76695 0,1.00346 -0.10033,0.10035 -2.91004,0.10035 -3.01036,0 -0.23652,-0.23651 0.23651,-0.76693 0,-1.00346 -0.47303,-0.47303 -1.5339,0.47304 -2.00693,0 -0.23651,-0.2365 0.23651,-0.76695 0,-1.00345 -0.47303,-0.47304 -1.53389,0.47303 -2.00692,0 -0.23652,-0.23653 0.23651,-0.76694 0,-1.00346 -0.23652,-0.23652 -0.76692,0.23652 -1.00344,0 -0.23652,-0.23652 0.23652,-0.76694 0,-1.00345 -0.23652,-0.23651 -0.76692,0.23651 -1.00348,0 -0.23648,-0.23651 0.23656,-0.76694 0,-1.00346 -0.23648,-0.23651 -0.76693,0.23652 -1.00344,0 -0.23652,-0.23651 0.23651,-0.76693 0,-1.00346 -0.23652,-0.23652 -0.76693,0.23653 -1.00344,0 -0.23652,-0.23652 0.23651,-0.76695 0,-1.00345 -0.23652,-0.23652 -0.76697,0.2365 -1.00348,0 -0.23652,-0.23652 0.23651,-0.76694 0,-1.00346 -0.0323,-0.0322 -2.76701,0 -3.01037,0 -0.33449,0 -0.76692,-0.23651 -1.00344,0 -0.20514,0.20516 0.19893,2.61251 0,3.01037 -0.21154,0.4231 -0.79193,0.58036 -1.00344,1.00346 -0.19897,0.39786 0.20511,2.80523 0,3.01036 -0.23655,0.23653 -0.76696,-0.2365 -1.00348,0 -0.23651,0.23653 0.23652,0.76695 0,1.00346 -0.23651,0.23651 -0.76693,-0.23651 -1.00345,0 -0.2365,0.23651 0.23652,0.76694 0,1.00346 -0.2365,0.23651 -0.76695,-0.23652 -1.00347,0 -0.23652,0.23651 0,0.66897 0,1.00346 -0.3345,0 -0.76693,-0.23653 -1.00345,0 -0.23651,0.23651 0.23652,0.76693 0,1.00346 -0.47303,0.47303 -1.53388,-0.47304 -2.00692,0 -0.23651,0.23651 0.23653,0.76694 0,1.00345 -0.47303,0.47302 -1.40856,-0.29917 -2.00691,0 -0.4231,0.21154 -0.58035,0.7919 -1.00345,1.00345 -0.29917,0.14958 -0.66898,0 -1.00344,0 -0.33449,0 -0.66898,0 -1.00348,0 -0.36851,0 -3.97343,0.0404 -4.01384,0 -0.23648,-0.23651 0.23655,-0.76693 0,-1.00345 -0.50173,-0.50174 -2.5086,0.50172 -3.01033,0 -0.23655,-0.23651 0.23648,-0.76694 0,-1.00345 -0.23655,-0.23653 -0.76696,0.23651 -1.00347,0 -0.23652,-0.23653 0.23651,-0.76695 0,-1.00346 -0.23652,-0.23653 -0.76693,0.23651 -1.00349,0 -0.23648,-0.23653 0.23656,-0.76695 0,-1.00346 -0.50172,-0.50174 -2.5086,0.50173 -3.01032,0 -0.23655,-0.23652 0.23647,-0.76695 0,-1.00346 -0.47303,-0.47303 -1.53389,0.47302 -2.00693,0 -0.23651,-0.23651 0.23652,-0.76693 0,-1.00346 -0.47302,-0.47303 -1.40855,0.29919 -2.00691,0 -0.42309,-0.21153 -0.58039,-0.79191 -1.00345,-1.00345 -0.39789,-0.19894 -2.80525,0.20514 -3.0104,0 -0.23651,-0.23653 0.23655,-0.76694 0,-1.00346 -0.23651,-0.23652 -0.66894,0 -1.00344,0 -0.69793,0 -4.65439,0.18144 -5.01728,0 -2.47995,-1.23996 0.34637,-1.00345 -2.00693,-1.00345 -0.33445,0 -1.33792,0 -1.00344,0 0.66899,0 2.67587,0 2.00689,0 -1.00345,0 -2.05839,0.31731 -3.01032,0 -0.31735,-0.10577 0.23648,-0.76694 0,-1.00346 -0.23656,-0.23651 -0.669,0 -1.00349,0 -0.33449,0 -0.66898,0 -1.00347,0 -0.33446,0 -1.33795,0 -1.00344,0 0.66898,0 2.6759,0 2.00691,0 -1.00347,0 -2.05838,-0.31733 -3.01036,0 -0.31734,0.10578 0.23651,0.76695 0,1.00346 -0.47303,0.47304 -1.53388,-0.47305 -2.00693,0 -0.23651,0.23651 0.23653,0.76693 0,1.00345 -0.23651,0.23652 -0.76692,-0.23652 -1.00343,0 -0.23652,0.23652 0.23651,0.76693 0,1.00346 -0.23652,0.2365 -0.76692,-0.23653 -1.00348,0 -0.23648,0.2365 0.14959,0.7043 0,1.00345 -0.21154,0.42312 -0.7919,0.58037 -1.00344,1.00346 -0.14959,0.29918 0.23651,0.76694 0,1.00346 -0.23652,0.23651 -0.76696,-0.23652 -1.00344,0 -0.47303,0.47305 0.29914,1.40856 0,2.00692 -0.21159,0.4231 -0.79193,0.58036 -1.00349,1.00345 -0.14958,0.29918 0.23652,0.76694 0,1.00345 -0.2365,0.23651 -0.76693,-0.23651 -1.00343,0 -0.23652,0.23651 0.2365,0.76694 0,1.00347 -0.23652,0.2365 -0.76693,-0.23653 -1.00349,0 -0.23651,0.2365 0.23656,0.76692 0,1.00345 -0.23651,0.23651 -0.76692,-0.23653 -1.00344,0 -0.23652,0.23651 0.23652,0.76695 0,1.00345 -0.50171,0.50173 -2.50864,-0.50172 -3.01036,0 -0.23652,0.23653 0.23651,0.76694 0,1.00345 -0.0323,0.0322 -2.767,0 -3.01041,0 -1.67238,0 -3.34481,0 -5.01724,0 -0.69373,0 -3.73509,0 -2.00692,0 0.66895,0 2.67587,0 2.00692,0 -1.00348,0 -2.00692,0 -3.01037,0 -0.33448,0 -1.00347,0.3345 -1.00347,0 0,-0.33447 1.33793,0 1.00347,0 -0.66898,0 -1.33796,0 -2.00691,0 -0.3345,0 -1.00348,0.3345 -1.00348,0 0,-1.42155 4.68279,2.84315 -1.00344,0 -0.59836,-0.29917 0.47302,-1.53387 0,-2.0069 -0.23651,-0.23653 -0.76693,0.23651 -1.00345,0 -0.23651,-0.23653 0.23652,-0.76695 0,-1.00345 -0.23651,-0.23653 -0.76696,0.2365 -1.00348,0 -0.47302,-0.47303 0.47303,-1.5339 0,-2.00692 -0.23651,-0.23651 -0.76692,0.23652 -1.00344,0 -0.23651,-0.23651 0,-0.66898 0,-1.00345 -0.33448,0 -0.76693,0.23651 -1.00348,0 -0.98985,-0.9899 2.05619,-2.00692 -1.00344,-2.00692 -2.67587,0 -5.35177,0 -8.02764,0 -0.3345,0 -0.66899,0 -1.00348,0 -0.33446,0 -0.76693,-0.23652 -1.00345,0 -0.23651,0.23651 0.23652,0.76693 0,1.00346 -0.23651,0.23651 -0.76693,-0.23653 -1.00348,0 -0.23647,0.23651 0.23655,0.76693 0,1.00346 -0.23647,0.23651 -0.76692,-0.23653 -1.00344,0 -0.23651,0.23651 0.23652,0.76694 0,1.00345 -0.23651,0.23652 -0.76693,-0.23651 -1.00344,0 -0.23652,0.23652 0.23651,0.76694 0,1.00345 -0.23652,0.23651 -0.76696,-0.23651 -1.00344,0 -0.23655,0.23651 0.23648,0.76694 0,1.00347 -0.23655,0.2365 -0.76696,-0.23653 -1.00347,0 -0.23653,0.2365 0.23651,0.76692 0,1.00345 -0.23653,0.23651 -0.76693,-0.23653 -1.00349,0 -0.23648,0.23651 0.23656,0.76695 0,1.00345 -0.47303,0.47303 -1.53385,-0.47303 -2.00688,0 -0.23652,0.23653 0.23651,0.76694 0,1.00345 -0.23652,0.23653 -0.76697,-0.23651 -1.00345,0 -0.23655,0.23653 0.23648,0.76695 0,1.00348 -0.23655,0.2365 -1.00347,0.33447 -1.00347,0 0,-0.47305 1.4765,-1.00348 1.00347,-1.00348 -1.05776,0 -2.26245,1.7514 -3.01039,1.00348 -0.23652,-0.23653 0.23655,-0.76695 0,-1.00348 -0.23652,-0.23651 -0.76693,0.23653 -1.00344,0 -0.23652,-0.23651 0.23651,-0.76692 0,-1.00345 -0.23652,-0.2365 -0.76697,0.23653 -1.00345,0 -0.23655,-0.2365 0.23648,-0.76694 0,-1.00345 -0.47307,-0.47303 -1.53389,0.47303 -2.00692,0 -0.23652,-0.23653 0.23652,-0.76695 0,-1.00345 -0.0323,-0.0322 -2.76704,0 -3.01037,0 -2.6759,0 0.33446,-0.3345 -1.00347,1.00345 -0.50173,0.50173 -2.50864,-0.50173 -3.01037,0 -0.23651,0.23651 0.23652,0.76695 0,1.00345 -0.23651,0.23653 -0.66898,0 -1.00347,0 -0.33446,0 -0.76693,0.23653 -1.00345,0 -0.23652,-0.2365 0.23652,-0.76694 0,-1.00345 -0.23652,-0.23653 -0.76692,0.23651 -1.00344,0 -0.23651,-0.23653 0.23652,-0.76695 0,-1.00345 -0.23651,-0.23653 -0.76696,0.2365 -1.00344,0 -0.47304,-0.47303 0.47304,-1.5339 0,-2.00692 -0.23656,-0.23651 -0.76696,0.23652 -1.00348,0 -0.23651,-0.23651 0,-0.66898 0,-1.00345 -0.3345,0 -0.76693,0.23651 -1.00344,0 -0.23651,-0.23653 0.23651,-0.76695 0,-1.00346 -0.47306,-0.47303 -1.53389,0.47303 -2.00693,0 -0.23651,-0.23653 0.23652,-0.76695 0,-1.00346 -0.23651,-0.23652 -0.66898,0 -1.00343,0 -0.3345,0 -1.33798,0 -1.00349,0 0.66899,0 2.67587,0 2.00692,0 -1.00343,0 -2.00692,0 -3.01035,0 -0.33449,0 -0.66899,0 -1.00348,0 -0.33451,0 -0.70427,0.14958 -1.00345,0 -0.42309,-0.21155 -0.58034,-0.79191 -1.00343,-1.00346 -0.3054,-0.15269 -2.55848,0 -3.01041,0 -0.33449,0 -0.76693,-0.23651 -1.00344,0 -0.23652,0.23651 0.23651,0.76694 0,1.00346 -0.47304,0.47305 -1.53389,-0.47304 -2.00692,0 0,2.67587 0.33449,-0.33448 -1.00344,1.00346 -0.23652,0.23651 0.14958,0.70429 0,1.00346 -0.21155,0.4231 -0.79194,0.58036 -1.00349,1.00345 -0.14959,0.29918 0.23652,0.76694 0,1.00345 -0.23651,0.23651 -0.76692,-0.23651 -1.00344,0 -0.47303,0.47305 0.47304,1.53389 0,2.00692 -0.23652,0.23651 -0.76692,-0.23653 -1.00348,0 -0.47303,0.47303 0.47307,1.53388 0,2.0069 -0.23648,0.23653 -0.76692,-0.23651 -1.00343,0 -0.47304,0.47303 0.47303,1.5339 0,2.00693 -0.23652,0.23651 -0.76693,-0.23652 -1.00345,0 -0.23652,0.23651 0.23652,0.76692 0,1.00345 -0.23652,0.23652 -0.76696,-0.23653 -1.00344,0 -0.23655,0.23652 0.23648,0.76695 0,1.00345 -0.0323,0.0322 -2.76704,0 -3.0104,0 -0.33449,0 -0.76692,0.23653 -1.00344,0 -0.23653,-0.2365 0.23652,-0.76693 0,-1.00345 -0.24147,-0.24145 -3.77238,0.24146 -4.01384,0 -0.23648,-0.23653 0.23655,-0.76694 0,-1.00345 -0.24143,-0.24148 -3.77235,0.24146 -4.01381,0 -0.23651,-0.23652 0.23652,-0.76695 0,-1.00345 -0.23651,-0.23653 -0.66899,0 -1.00348,0 -0.33445,0 -0.66895,0 -1.00344,0 -0.3345,0 -1.33794,0 -1.00344,0 1.5897,0 3.9079,0.29916 0,-1.00348 -0.63465,-0.21155 -1.40856,0.29919 -2.00693,0 -0.42309,-0.21155 -0.58039,-0.79191 -1.00344,-1.00345 -0.29922,-0.14959 -0.66898,0 -1.00348,0 -0.33449,-0.33449 -0.58035,-0.7919 -1.00347,-1.00345 -0.29915,-0.14959 -0.76693,0.23651 -1.00345,0 -0.23651,-0.23653 0.23652,-0.76695 0,-1.00345 -0.23651,-0.23653 -0.66895,0 -1.00344,0 0,-0.3345 0.23652,-0.76696 0,-1.00347 -0.23651,-0.23651 -0.7043,0.14958 -1.00343,0 -0.42314,-0.21155 -0.58039,-0.79191 -1.0035,-1.00345 -0.29916,-0.14958 -0.76692,0.23652 -1.00343,0 -0.23652,-0.23651 0.23651,-0.76694 0,-1.00345 -0.23652,-0.23653 -0.76693,0.23651 -1.00348,0 -0.23649,-0.23653 0.23655,-0.76695 0,-1.00346 -0.23649,-0.23653 -0.76693,0.23651 -1.00344,0 -0.23652,-0.23653 0.23651,-0.76695 0,-1.00346 -0.47304,-0.47304 -1.53389,0.47305 -2.00693,0 -0.23652,-0.23652 0.23651,-0.76695 0,-1.00346 -0.23652,-0.23651 -0.76693,0.23651 -1.00344,0 -0.23652,-0.23651 0.23651,-0.76693 0,-1.00346 -0.23652,-0.2365 -0.7043,0.1496 -1.00348,0 -0.42305,-0.21153 -0.53041,-1.00345 -1.00344,-1.00345 -0.3345,0 0,0.66896 0,1.00345 0,1.33795 0,2.67589 0,4.01384 0,1.33793 0,2.67587 0,4.01382 0,0.33449 0,0.66896 0,1.00345 0,0.33449 0.33449,1.00345 0,1.00345 -0.3345,0 -0.14959,-0.70427 0,-1.00345 1.24,-2.47993 1.00344,0.34638 1.00344,-2.0069 -1.33794,0.66896 -2.73113,1.23729 -4.0138,2.0069 -0.40564,0.24337 -0.58035,0.7919 -1.00348,1.00345 -0.29914,0.14959 -0.76693,-0.23651 -1.00345,0 -0.23652,0.23653 0.23652,0.76695 0,1.00348 -0.23652,0.2365 -0.66899,0 -1.00344,0 -0.33449,0 -0.66898,0 -1.00347,0 -0.33445,0 -1.00345,0.33447 -1.00345,0 0,-0.33449 1.33794,0 1.00345,0 -0.66896,0 -1.33795,0 -2.00689,0 -0.33449,0 -0.76696,0.2365 -1.00348,0 -0.23651,-0.23653 0.23652,-0.76695 0,-1.00348 -0.23651,-0.23651 -0.76693,0.23653 -1.00345,0 -0.2365,-0.23651 0.23652,-0.76692 0,-1.00345 -0.2365,-0.2365 -0.76696,0.23653 -1.00347,0 -0.23652,-0.2365 0.23651,-0.76694 0,-1.00345 -0.10032,-0.10035 -2.91,-0.10035 -3.01036,0 -0.23651,0.23651 0.23652,0.76695 0,1.00345 -0.23651,0.23653 -0.70426,-0.14959 -1.00344,0 -0.42309,0.21154 -0.58035,0.7919 -1.00349,1.00345 -0.80276,0.4014 -2.20755,-0.40138 -3.01035,0 -0.4231,0.21157 -0.58036,0.79191 -1.00344,1.00348 -0.39787,0.19891 -2.80523,-0.20517 -3.01037,0 -0.23652,0.2365 0.23651,0.76693 0,1.00345 -0.0404,0.0404 -3.64534,0 -4.01384,0 -0.33449,0 -0.76693,0.23651 -1.00344,0 0,-2.67589 0.33445,0.33447 -1.00349,-1.00345 -0.23651,-0.23653 0.23652,-0.76695 0,-1.00348 -0.33296,-0.33296 -1.67391,0.33299 -2.00688,0 -0.23655,-0.23651 0.23652,-0.76692 0,-1.00345 -0.23655,-0.2365 -0.76696,0.23653 -1.00348,0 -0.23651,-0.2365 0.23652,-0.76694 0,-1.00345 -0.23651,-0.23653 -0.76692,0.23651 -1.00344,0 -0.23651,-0.23653 0.23652,-0.76695 0,-1.00345 -0.23651,-0.23653 -0.76693,0.2365 -1.00348,0 -0.23652,-0.23653 0.23655,-0.76696 0,-1.00347 -0.23652,-0.23651 -0.76693,0.23651 -1.00344,0 -0.23651,-0.23651 0.23651,-0.76693 0,-1.00345 -0.23651,-0.23651 -0.76696,0.23652 -1.00344,0 -0.23655,-0.23651 0.23648,-0.76694 0,-1.00345 -0.23655,-0.23653 -0.76697,0.23651 -1.00348,0 -0.23652,-0.23653 0.23651,-0.76695 0,-1.00346 -0.23652,-0.23653 -0.70427,0.14959 -1.00344,0 -3.32804,-3.32806 0.94606,0.47303 -2.00693,-1.00346 -0.42309,-0.21155 -0.58034,-0.79191 -1.00343,-1.00346 -0.29919,-0.14958 -0.76697,0.23651 -1.00348,0 -0.23652,-0.23651 0.23651,-0.76693 0,-1.00346 -0.47304,-0.47303 -1.5339,0.47304 -2.00692,0 -0.23648,-0.2365 0.23655,-0.76695 0,-1.00345 -0.50173,-0.50172 -2.508613,0.50172 -3.010329,0 -0.236553,-0.23653 0.236476,-0.76694 0,-1.00346 -0.236553,-0.23652 -0.668993,0 -1.003485,0 -0.334492,0 -0.668985,0 -1.003439,0 -1.672469,0 -3.344854,0 -5.017285,0 -0.334493,0 -0.766962,-0.23652 -1.003477,0 -0.236515,0.23652 0.236515,0.76693 0,1.00346 -0.236515,0.2365 -0.766932,-0.23653 -1.003447,0 -0.236515,0.2365 0.236515,0.76695 0,1.00345 -0.236515,0.23653 -0.766924,-0.2365 -1.003477,0 -0.236476,0.23653 0.236553,0.76695 0,1.00346 -0.236476,0.23651 -0.766924,-0.23651 -1.003438,0 -0.236515,0.23651 0.236514,0.76694 0,1.00346 -0.236515,0.23651 -0.704302,-0.14959 -1.003447,0 -0.423132,0.21154 -0.580382,0.79192 -1.003477,1.00346 -0.299183,0.14959 -0.766924,-0.23653 -1.003438,0 -0.236523,0.23651 0.236514,0.76693 0,1.00346 -0.335091,0.33509 -1.671833,-0.3351 -2.006924,0 -0.236515,0.23651 0.236515,0.76694 0,1.00345 -0.501723,0.50172 -2.508646,-0.50174 -3.010362,0 -0.236515,0.23652 0.236515,0.76694 0,1.00345 -0.236515,0.23651 -0.668993,0 -1.003485,0 -0.334454,0 -1.003439,0.33449 -1.003439,0 0,-0.33447 1.337931,0 1.003439,0 -0.668946,0 -1.337931,0 -2.006877,0 -0.471474,0 -4.284038,0 -2.006924,0 5.878876,0 -2.921537,0 -4.013847,0 -0.471427,0 -4.283992,0 -2.006877,0 6.724949,0 -4.988224,-0.0291 -5.017286,0 -0.236514,0.23651 0.236515,0.76694 0,1.00347 -0.473029,0.47303 -1.533893,-0.47303 -2.006923,0 -0.236515,0.2365 0.236515,0.76692 0,1.00345 -0.236515,0.23651 -0.704263,-0.14959 -1.003477,0 -0.423056,0.21155 -0.580352,0.79191 -1.003447,1.00345 -0.299137,0.1496 -0.766923,-0.2365 -1.003438,0 -0.236515,0.23653 0.236515,0.76694 0,1.00345 -0.236515,0.23653 -0.704302,-0.14956 -1.003439,0 -0.423133,0.21157 -0.58039,0.79191 -1.003485,1.00348 -0.59832,0.29916 -1.533886,-0.47305 -2.006915,0 -0.236523,0.2365 0.236515,0.76693 0,1.00345 -0.03235,0.0322 -2.767002,0 -3.01037,0 -0.334493,0 -1.337931,0 -1.003439,0 0.668946,0 2.67587,0 2.006924,0 -1.337978,0 -2.675909,0 -4.013847,0 -0.334493,0 -1.337931,0 -1.003477,0 0.668984,0 2.675908,0 2.006923,0 -1.003446,0 -2.006923,0 -3.010362,0 -0.243368,0 -2.978103,0.0322 -3.010369,0 -1.337932,-1.33794 1.67243,-1.00345 -1.003478,-1.00345 -0.471427,0 -4.283992,0 -2.006884,0 0.668953,0 2.67587,0 2.006884,0 -9.365578,0 -1.003438,1.00345 -3.010324,-1.00348 -0.334791,-0.33475 -1.67217,0.33478 -2.006962,0 -0.236476,-0.23651 0.236554,-0.76692 0,-1.00345 -0.236476,-0.2365 -0.766923,0.23653 -1.003438,0 -0.236515,-0.2365 0.236515,-0.76694 0,-1.00345 -0.236515,-0.23653 -0.766924,0.23651 -1.003439,0 -0.236523,-0.23653 -0.334499,-1.00345 0,-1.00345 0.334493,0 0.334493,1.00345 0,1.00345 -0.901743,0 -1.387283,-2.00692 -1.003446,-2.00692 0.334454,0 0,0.66897 0,1.00347 0.668947,-1.00345 1.337939,-2.00692 2.006885,-3.01037 0,-0.3345 -0.149592,-0.70429 0,-1.00346 0.211547,-0.4231 0.79193,-0.58037 1.003438,-1.00346 0.198976,-0.39787 -0.205107,-2.80523 0,-3.01037 0.236554,-0.23653 0.766971,0.2365 1.003485,0 0.335083,-0.3351 -0.335089,-1.67181 0,-2.00691 0.236515,-0.23651 0.766924,0.23651 1.003477,0 0.236477,-0.23651 -0.236553,-0.76694 0,-1.00346 0.236477,-0.23651 0.766924,0.23652 1.00344,0 0.236515,-0.23651 -0.236516,-0.76693 0,-1.00346 0.236515,-0.23652 0.766931,0.23653 1.003446,0 0.236514,-0.23652 -0.236515,-0.76695 0,-1.00345 0.236514,-0.23652 0.766962,0.2365 1.003438,0 0.236554,-0.23652 -0.236476,-0.76694 0,-1.00346 0.236554,-0.23651 0.766963,0.23652 1.003478,0 0.236522,-0.23651 -0.149585,-0.70428 0,-1.00346 0.423094,-0.84619 1.583829,-1.16072 2.006923,-2.00691 0.891961,-1.78392 -0.5575,-0.55747 -1.003477,-1.00345 -0.236515,-0.23652 0.236514,-0.76694 0,-1.00345 -1.337938,-1.33795 -1.003446,1.67242 -1.003446,-1.00347 0,-2.34139 0,-4.68279 0,-7.02418 0,-0.3345 -0.236515,-0.76695 0,-1.00346 1.337938,-1.33794 1.003446,1.67241 1.003446,-1.00347 0,-0.33447 0.236514,-0.76694 0,-1.00345 -0.236515,-0.23651 -0.668947,0 -1.003446,0 -0.334492,0 -1.337932,0 -1.003478,0 0.668986,0 2.006924,0.66898 2.006924,0 0,-2.76318 -2.290285,-0.28338 -3.010362,-1.00346 -0.236515,-0.23652 0.236514,-0.76695 0,-1.00344 -0.236515,-0.23654 -0.766931,0.23649 -1.003446,0 -0.236516,-0.23654 0.236515,-0.76695 0,-1.00346 -0.236516,-0.23653 -0.766963,0.23651 -1.00344,0 -0.236553,-0.23653 0.149554,-0.70429 0,-1.00347 -2.088082,-4.17614 0.06922,1.07274 -2.006962,-1.00346 -0.236476,-0.2365 0.236554,-0.76694 0,-1.00345 -0.236476,-0.23652 -0.766923,0.23651 -1.003438,0 -0.236515,-0.23652 0.236515,-0.76695 0,-1.00345 -0.236515,-0.23652 -0.766924,0.2365 -1.003439,0 -0.236523,-0.23652 0.236515,-0.76695 0,-1.00347 -0.236523,-0.2365 -0.704301,0.1496 -1.003446,0 -0.423132,-0.21154 -0.580382,-0.79192 -1.003477,-1.00345 -0.299184,-0.1496 -0.766931,0.23652 -1.003446,0 -0.47303,-0.47304 0.473038,-1.53387 0,-2.00692 -0.236516,-0.23651 -0.766924,0.23651 -1.003478,0 -0.236514,-0.23651 0,-0.66897 0,-1.00344 0,-2.34141 0,-4.68281 0,-7.02421 0,-0.33449 0,-0.66896 0,-1.00345 0,-0.3345 -0.236514,-0.76695 0,-1.00345 0.236554,-0.23653 0.766962,0.2365 1.003478,0 0.473038,-0.47305 -0.47303,-1.53389 0,-2.00693 0.236515,-0.2365 0.766931,0.23652 1.003446,0 0.334753,-0.33477 -0.334753,-1.67215 0,-2.0069 0.236515,-0.23652 0.766924,0.23651 1.003477,0 0.236477,-0.23652 -0.236553,-0.76695 0,-1.00345 0.236477,-0.23653 0.766923,0.2365 1.003446,0 0.236515,-0.23653 -0.236523,-0.76695 0,-1.00347 0.236515,-0.23651 0.766924,0.23652 1.003439,0 0.236515,-0.23651 -0.236515,-0.76694 0,-1.00345 0.236515,-0.23651 0.766962,0.23651 1.003438,0 0.236554,-0.23651 0,-0.66897 0,-1.00346 0,-0.33449 0,-0.66899 0,-1.00346 0,-1.00346 0,-2.00691 0,-3.01036 0,-0.33449 0,-1.33795 0,-1.00346 0,0.66897 0,2.67589 0,2.00691 0,-1.00345 0.317345,-2.05841 0,-3.01037 -0.10575,-0.31731 -0.766923,0.23651 -1.003438,0 -0.236515,-0.23651 0,-0.66897 0,-1.00346 0,-0.36851 -0.04039,-3.97345 0,-4.01381 0.236515,-0.23652 0.766962,0.23651 1.003438,0 0.236554,-0.23652 -0.236476,-0.76694 0,-1.00347 0.236554,-0.23651 0.766971,0.23653 1.003485,0 0.236515,-0.23651 -0.236514,-0.76693 0,-1.00346 0.236515,-0.2365 0.766924,0.23653 1.003477,0 0.236477,-0.2365 -0.236553,-0.76694 0,-1.00345 0.236477,-0.23652 0.704264,0.14959 1.00344,0 0.423094,-0.21154 0.580352,-0.7919 1.003446,-1.00345 0.299176,-0.14959 0.766962,0.23651 1.003438,0 0.236554,-0.23652 -0.236476,-0.76695 0,-1.00347 0.236554,-0.23651 0.766963,0.23652 1.003478,0 0.236522,-0.23651 -0.236515,-0.76693 0,-1.00346 2.076177,-2.07617 -0.08115,3.1727 2.006923,-1.00345 0.149591,-0.29916 -0.236553,-0.76693 0,-1.00344 0.236515,-0.23654 0.766932,0.23651 1.003446,0 0.236515,-0.23654 -0.236514,-0.76695 0,-1.00346 0.236515,-0.23652 0.766962,0.23651 1.003439,0 0.501762,-0.50174 -0.501723,-2.50866 0,-3.01037 0.236554,-0.23653 0.766962,0.2365 1.003477,0 0.47303,-0.47304 -0.299176,-1.40858 0,-2.00693 0.211547,-0.42309 0.791899,-0.58035 1.003446,-1.00345 0.149585,-0.29917 -0.236515,-0.76693 0,-1.00346 0.501716,-0.50173 2.508639,0.50173 3.010401,0 0.236476,-0.23652 -0.236553,-0.76695 0,-1.00344 0.501715,-0.50173 2.5086,0.50171 3.010362,0 0.236514,-0.23654 -0.236515,-0.76695 0,-1.00346 0.501723,-0.50173 2.508639,0.50173 3.010362,0 0.236515,-0.23653 -0.236515,-0.76695 0,-1.00346 0.236515,-0.23651 0.704301,0.14958 1.003438,0 0.423095,-0.21155 0.580391,-0.79192 1.003447,-1.00346 0.299214,-0.14959 0.766962,0.23652 1.003477,0 0.236515,-0.23651 -0.236515,-0.76693 0,-1.00346 0.47303,-0.47303 1.533894,0.47304 2.006923,0 0.236515,-0.23652 -0.236514,-0.76695 0,-1.00344 0.332967,-0.333 1.673919,0.33296 2.006886,0 0.473029,-0.47304 -0.473038,-1.5339 0,-2.00693 0.236553,-0.23651 0.766962,0.23652 1.003476,0 0.236515,-0.23651 -0.149591,-0.70427 0,-1.00346 0.211548,-0.42307 0.791893,-0.58036 1.003439,-1.00345 0.299184,-0.59835 -0.473029,-1.53388 0,-2.00692 0.236516,-0.2365 0.766932,0.23653 1.003485,0 0.236515,-0.2365 -0.149592,-0.70427 0,-1.00345 0.211548,-0.42309 0.791891,-0.58036 1.003439,-1.00346 0.149591,-0.29916 -0.236515,-0.76694 0,-1.00345 0.236514,-0.23652 0.766924,0.23651 1.003438,0 0.236523,-0.23652 -0.149545,-0.70428 0,-1.00345 0.211586,-0.42309 0.791938,-0.58037 1.003485,-1.00347 0.149585,-0.29916 -0.236514,-0.76693 0,-1.00345 0.332967,-0.33298 1.673949,0.33297 2.006916,0 0.236515,-0.23651 -0.236515,-0.76694 0,-1.00346 0.501723,-0.50172 2.508647,0.50173 3.01037,0 0.236515,-0.23651 -0.236523,-0.76694 0,-1.00344 0.236515,-0.23653 0.704293,0.14957 1.003438,0 0.423095,-0.21157 0.580383,-0.79192 1.003439,-1.00348 0.299222,-0.14957 0.76697,0.23653 1.003485,0 0.236515,-0.23651 -0.236515,-0.76693 0,-1.00346 0.236515,-0.2365 0.766924,0.23653 1.003477,0 0.236476,-0.2365 -0.236553,-0.76693 0,-1.00344 0.332966,-0.33298 1.673918,0.33296 2.006885,0 0.236515,-0.23653 -0.236515,-0.76694 0,-1.00346 0.205146,-0.20514 2.612496,0.19894 3.010362,0 0.423095,-0.21154 0.580345,-0.79191 1.003477,-1.00344 0.397828,-0.19894 2.805216,0.20513 3.010362,0 0.236515,-0.23654 -0.236515,-0.76695 0,-1.00348 0.236515,-0.23651 0.668955,0 1.003447,0 0.334492,0 0.766924,-0.23651 1.003477,0 2.353244,2.3533 -3.091559,0 -1.003477,0 0.747943,0 1.297371,0.76694 2.006915,1.00348 0.317306,0.10576 0.766932,-0.23654 1.003447,0 0.236515,0.2365 -0.236515,0.76692 0,1.00344 0.473068,0.47303 1.533886,-0.47303 2.006924,0 0.236514,0.23652 -0.236515,0.76693 0,1.00346 0.236514,0.23651 0.668984,0 1.003476,0 0.334454,0 0.668947,0 1.003439,0 2.675874,0 -0.334492,-0.33449 1.003485,1.00344 0.04546,0.0454 4.544139,0 5.017249,0 0.33449,0 0.76696,0.23653 1.00348,0 0.23651,-0.2365 -0.23652,-0.76693 0,-1.00344 0.24146,-0.24146 3.77234,0.24146 4.0138,0 0.23651,-0.23653 -0.23652,-0.76694 0,-1.00346 0.47303,-0.47303 1.53389,0.47303 2.00692,0 0.23651,-0.23652 -0.23651,-0.76694 0,-1.00344 0.50172,-0.50173 2.50864,0.50171 3.01036,0 0.23652,-0.23654 -0.23651,-0.76695 0,-1.00348 0.50172,-0.50173 2.50865,0.50175 3.01036,0 0.23652,-0.23651 -0.23651,-0.76693 0,-1.00345 0.47307,-0.47304 1.40861,0.29918 2.00693,0 0.42309,-0.21154 0.58038,-0.79191 1.00347,-1.00345 0.54437,-0.27219 3.73923,0.27457 4.01381,0 0.23652,-0.23654 -0.23651,-0.76695 0,-1.00346 0.27459,-0.27457 3.46948,0.27218 4.01384,0 0.42309,-0.21153 0.58035,-0.79191 1.00345,-1.00345 0.39785,-0.19894 2.80522,0.20514 3.01036,0 0.23652,-0.23653 -0.23651,-0.76695 0,-1.00347 0.23652,-0.2365 0.66899,0 1.00348,0 0.33449,0 1.33793,0 1.00343,0 -0.66894,0 -2.67586,0 -2.00691,0 1.00348,0 2.00691,0 3.01036,0 0,-0.33447 -0.31731,-0.89768 0,-1.00345 0.95197,-0.31733 2.00692,0 3.0104,0 z'}));SVGs.steppes=_react2.default.createElement('g',{style:midBoldStyle},_react2.default.createElement('path',{d:'m 40.419365,789.48227 c 1.443325,-3.40185 1.24191,-6.44943 1.24191,-9.93531 0,-0.41406 0.292729,-0.94923 0,-1.24194 -0.29272,-0.2927 -0.94919,0.29271 -1.24191,0 -0.29272,-0.2927 0,-0.82796 0,-1.24193 0,-2.48379 0,-4.96766 0,-7.45153 0,-0.41398 0.29272,-0.94915 0,-1.24186 -0.29272,-0.29278 -0.949191,0.29271 -1.241919,0 -0.29272,-0.29278 0,-0.82795 0,-1.24193 0,-2.89785 0,-5.7957 0,-8.69347 0,-0.41397 0,-0.82795 0,-1.24185 0,-0.41398 -0.29272,-0.94923 0,-1.24193 1.655905,-1.65592 1.241919,2.06981 1.241919,-1.24194 0,-2.89785 0,-5.79561 0,-8.69338 0,-0.55934 -0.188991,-3.34784 0,-3.72582 0.261813,-0.52363 0.980097,-0.71823 1.24191,-1.24191 0.185135,-0.37026 0,-0.82793 0,-1.24191 0,-0.41394 0,-0.82793 0,-1.24192 0,-2.48383 0,-4.96766 0,-7.45149 0,-0.41394 0,-0.82793 0,-1.24192 0,-0.41394 -0.29272,-0.94919 0,-1.24191 0.292729,-0.29273 0.949199,0.29272 1.241919,0 0.253904,-0.2539 -0.246192,-3.23332 0,-3.72575 0.261814,-0.52363 0.980097,-0.71828 1.241919,-1.24192 0.370254,-0.74051 -0.370262,-1.7433 0,-2.48383 0.261814,-0.52363 0.980097,-0.71828 1.241911,-1.24192 0.333197,-0.66633 -0.33314,-1.81748 0,-2.48383 0.261821,-0.52363 0.980097,-0.71827 1.241918,-1.24191 0.370262,-0.74052 -0.585448,-1.89839 0,-2.48383 0.292721,-0.29272 0.949191,0.29272 1.241911,0 0.620959,-0.62095 -0.620951,-3.10478 0,-3.72574 0.292728,-0.29273 0.949199,0.29272 1.241919,0 0.29272,-0.29273 -0.185127,-0.87166 0,-1.24192 0.261813,-0.52364 0.980097,-0.71829 1.241919,-1.24191 0.185126,-0.37026 -0.292729,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.585449,-0.58545 -0.58544,-1.89839 0,-2.48383 0.29272,-0.29272 0.949199,0.29272 1.241919,0 0.29272,-0.29272 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.292729,-0.29272 -0.29272,-0.94919 0,-1.24191 0.292729,-0.29273 0.949199,0.29272 1.241919,0 0.29272,-0.29273 -0.185127,-0.87166 0,-1.24192 0.261814,-0.52363 0.980097,-0.71828 1.241919,-1.24192 0.185127,-0.37025 -0.292728,-0.94919 0,-1.24191 0.29272,-0.29272 0.949191,0.29272 1.241911,0 0.29272,-0.29272 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.241918,0 0.292721,-0.29272 -0.292728,-0.94919 0,-1.24191 0.292721,-0.29273 0.949191,0.29272 1.241911,0 0.292728,-0.29273 -0.29272,-0.9492 0,-1.24192 0.292728,-0.29272 0.871657,0.18513 1.241919,0 0.523685,-0.26181 0.718283,-0.98009 1.241919,-1.24192 0.370303,-0.18512 0.94919,0.29273 1.24191,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.949191,0.29272 1.241919,0 0.29272,-0.29272 -0.292728,-0.94919 0,-1.24191 0.29272,-0.29273 0.94924,0.29272 1.24196,0 0.292728,-0.29273 -0.29272,-0.9492 0,-1.24192 0.292728,-0.29272 0.949199,0.29272 1.241919,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.241919,0 0.29272,-0.29272 -0.292729,-0.94919 0,-1.24192 0.58544,-0.58544 1.89838,0.58545 2.483828,0 0.29272,-0.29272 -0.292719,-0.94919 0,-1.24191 0.29272,-0.29277 0.94919,0.29272 1.24191,0 0.29273,-0.29277 -0.29272,-0.94925 0,-1.24197 0.29273,-0.29272 0.87161,0.18518 1.24192,0 0.66329,-0.33164 3.07193,-3.07188 3.72575,-3.72575 0.41394,-0.41394 0.82792,-0.82792 1.24191,-1.24191 0.41394,-0.41394 0.71828,-0.9801 1.24192,-1.24192 0.37026,-0.18513 0.94919,0.29272 1.24191,0 0.29273,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29273,-0.29273 0.9492,0.29272 1.24192,0 0.29272,-0.29273 0,-0.82793 0,-1.24192 0.41393,0 0.87165,0.18513 1.24192,0 0.32973,-0.16484 3.56084,-3.396 3.72574,-3.72575 0.18513,-0.37026 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29273 0.94919,0.29272 1.24191,0 0.29272,-0.29273 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.87166,0.18514 1.24192,0 0.52363,-0.26181 0.71828,-0.98009 1.24191,-1.24192 0.37027,-0.18512 0.9492,0.29273 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29273,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29273,-0.29272 0.87166,0.18513 1.24192,0 0.52364,-0.26182 0.71829,-0.9801 1.24192,-1.24192 0.37025,-0.18513 0.94919,0.29273 1.24191,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29273 0.94919,0.29272 1.241909,0 0.29273,-0.29273 -0.292719,-0.9492 0,-1.24192 0.29273,-0.29272 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24192 0.29272,-0.29272 0.94919,0.29273 1.24192,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29272,-0.29272 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24191 0.29272,-0.29273 0.94919,0.29272 1.24191,0 0.29273,-0.29273 -0.29272,-0.9492 0,-1.24192 0.29273,-0.29272 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24192 0.29272,-0.29272 0.82797,0 1.24192,0 0,-0.41399 -0.18514,-0.87165 0,-1.24191 0.26181,-0.52364 0.98009,-0.71828 1.24191,-1.24192 0.37026,-0.74051 -0.58544,-1.89838 0,-2.48383 1.6559,-1.6559 1.24192,2.06984 1.24192,-1.24192 0,-0.41398 -0.29273,-0.94919 0,-1.24191 0.29272,-0.29272 1.24191,-0.41398 1.24191,0 0,0.58544 -1.24191,1.82736 -1.24191,1.24191 0,-0.9257 0.94919,-1.60566 1.24191,-2.48383 0.23357,-0.70069 0,-2.90969 0,-3.72574 0,-0.41399 0.29272,-0.9492 0,-1.24192 -0.29272,-0.29272 -0.94919,0.29272 -1.24191,0 -0.58545,-0.58544 0.58544,-1.89838 0,-2.48382 -0.29273,-0.29273 -0.9492,0.29272 -1.24192,0 -0.29272,-0.29273 0.18513,-0.87166 0,-1.24192 -0.26182,-0.52364 -0.9801,-0.71829 -1.24191,-1.24191 -0.18514,-0.37027 0.29272,-0.9492 0,-1.24192 -0.29273,-0.29272 -0.9492,0.29272 -1.24192,0 -0.58545,-0.58545 0.58544,-1.89839 0,-2.48383 -0.29272,-0.29273 -0.94919,0.29272 -1.24192,0 -0.29272,-0.29273 0.29273,-0.9492 0,-1.24192 -0.29272,-0.29272 -0.94919,0.29272 -1.24191,0 0,-3.31181 0.41398,0.41394 -1.24192,-1.24191 -0.29272,-0.29273 0.18513,-0.87166 0,-1.24192 -0.16484,-0.32979 -3.39601,-3.56091 -3.72575,-3.7258 -0.370249,-0.18512 -0.949189,0.29272 -1.241909,0 -2.56958,-2.56953 3.926649,0.10048 -1.24192,-2.48383 -0.37026,-0.18513 -0.94919,0.29272 -1.24191,0 -0.29273,-0.29272 0.29272,-0.94919 0,-1.24192 -0.29273,-0.29272 -0.9492,0.29273 -1.24192,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24191 -0.29272,-0.29272 -0.94919,0.29272 -1.24192,0 -0.29272,-0.29272 0.29273,-0.9492 0,-1.24192 -0.29272,-0.29272 -0.94919,0.29272 -1.24191,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24191 -0.29272,-0.29272 -0.9492,0.29272 -1.24192,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24191 -0.29272,-0.29272 -0.94919,0.29272 -1.24191,0 -0.29272,-0.29272 0.29272,-0.9492 0,-1.24192 -0.29272,-0.29272 -0.9492,0.29272 -1.24192,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24191 -0.29272,-0.29273 -0.94919,0.29272 -1.24191,0 -0.29272,-0.29273 0.29272,-0.9492 0,-1.24192 -0.29272,-0.29272 -0.94919,0.29272 -1.24191,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24191 -0.29272,-0.29273 -0.9492,0.29272 -1.24192,0 -0.29272,-0.29273 0.29272,-0.9492 0,-1.24192 -0.29272,-0.29272 -0.94919,0.29272 -1.24191,0 -0.29273,-0.29272 0,-0.82793 0,-1.24192 -0.414,0 -0.9492,0.29273 -1.24192,0 -0.29272,-0.29272 0.18512,-0.87165 0,-1.24191 -0.26182,-0.52364 -0.9801,-0.71829 -1.24192,-1.24192 -0.18513,-0.37026 0.29273,-0.94919 0,-1.24191 -0.29272,-0.29273 -0.94919,0.29272 -1.24191,0 -0.29272,-0.29273 0.29272,-0.9492 0,-1.24192 -0.29272,-0.29272 -0.94919,0.29272 -1.24192,0 -0.29272,-0.29272 0.29273,-0.94919 0,-1.24192 -0.29272,-0.29272 -0.94919,0.29273 -1.24191,0 -0.58545,-0.58544 0.58544,-1.89838 0,-2.48383 -0.29273,-0.29272 -0.9492,0.29272 -1.24192,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24191 -0.29272,-0.29273 -0.94919,0.29272 -1.24191,0 -0.29273,-0.29273 0.29272,-0.9492 0,-1.24192 -0.29273,-0.29272 -1.24192,0.41399 -1.24192,0 0,-0.41398 1.24192,0.41399 1.24192,0 0,-0.58544 -0.65648,-1.24192 -1.24192,-1.24192 -0.41399,0 0.29272,0.9492 0,1.24192 -1.65591,1.65591 -1.24192,-2.06984 -1.24192,1.24192 15.8632,4.40916 3.09332,-4.33524 4.96767,-6.20958 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29273,-0.29272 -0.18513,-0.87165 0,-1.24191 0.26182,-0.52364 0.9801,-0.71829 1.24192,-1.24192 0.18512,-0.37026 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29273,-0.29272 -0.18513,-0.87166 0,-1.24192 0.26182,-0.52364 0.9801,-0.71828 1.24192,-1.24191 0.18512,-0.37027 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.18514,-0.87166 0,-1.24191 0.26181,-0.52364 0.98009,-0.71829 1.24191,-1.24192 0.18513,-0.37026 -0.29272,-0.94919 0,-1.24192 0.29272,-0.29272 0.9492,0.29273 1.24192,0 0.29272,-0.29272 -0.18514,-0.87165 0,-1.24191 0.52363,-1.04727 1.96019,-1.43657 2.48382,-2.48383 0.18513,-0.37026 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.18513,-0.87166 0,-1.24192 0.26182,-0.52363 0.9801,-0.71827 1.24191,-1.24191 0.18514,-0.37031 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.18513,-0.87165 0,-1.24191 0.26182,-0.52368 0.9801,-0.71828 1.24191,-1.24192 0.18514,-0.37031 -0.29272,-0.94919 0,-1.24192 0.29273,-0.29272 0.9492,0.29273 1.24192,0 0.29272,-0.29272 -0.18512,-0.87164 0,-1.24191 0.26182,-0.52368 0.9801,-0.71828 1.24192,-1.24196 0.18513,-0.37027 -0.29273,-0.94919 0,-1.24192 0.29272,-0.29272 0.94919,0.29273 1.24191,0 0.58545,-0.58544 -0.58544,-1.89838 0,-2.48383 0.29272,-0.29272 0.9492,0.29273 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.241909,0 0.29273,-0.29272 -0.185129,-0.87161 0,-1.24192 0.26182,-0.52364 0.98011,-0.71829 1.24192,-1.24191 0.18513,-0.37026 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.18514,-0.87166 0,-1.24192 0.26181,-0.52363 0.9801,-0.71828 1.24191,-1.24191 0.18513,-0.37026 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24192,0 0.58544,-0.58544 -0.58545,-1.89838 0,-2.48383 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29273,-0.29272 -0.29272,-0.94919 0,-1.24192 0.29273,-0.29272 0.9492,0.29273 1.24192,0 0.29272,-0.29272 -0.18513,-0.87165 0,-1.24191 0.26181,-0.52363 0.98009,-0.71828 1.24192,-1.24192 0.18512,-0.37026 -0.29273,-0.94919 0,-1.24191 0.29272,-0.29273 0.94919,0.29272 1.24191,0 0.29272,-0.29273 -0.18513,-0.87165 0,-1.24192 0.52363,-1.04727 1.96019,-1.43655 2.48383,-2.48383 0.18513,-0.37026 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29273,-0.29272 -0.29272,-0.9492 0,-1.24192 0.29273,-0.29272 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.18513,-0.87165 0,-1.24191 0.52363,-1.04727 1.9602,-1.43656 2.48383,-2.48383 0.18513,-0.37027 -0.29273,-0.94919 0,-1.24192 0.29272,-0.29272 0.94919,0.29273 1.24191,0 0.29273,-0.29272 -0.18512,-0.87165 0,-1.24191 0.26183,-0.52364 0.9801,-0.71829 1.24192,-1.24192 0.37031,-0.74053 -0.37026,-1.74331 0,-2.48383 0.26182,-0.52364 0.9801,-0.71828 1.24191,-1.24192 0.18519,-0.37025 -0.18512,-0.87165 0,-1.24191 0.26182,-0.52364 0.98011,-0.71828 1.24192,-1.24192 0.18519,-0.37026 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29273 0.94919,0.29272 1.24192,0 0.29272,-0.29273 -0.29273,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.41369,-0.41364 -0.41363,-2.07019 0,-2.48383 0.29272,-0.29272 0.94925,0.29272 1.24197,0 0.29272,-0.29272 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.18519,-0.87165 0,-1.24191 0.74513,-1.49031 2.98056,-2.23549 3.72574,-3.72575 0.18513,-0.37031 -0.29272,-0.94919 0,-1.24191 0.29273,-0.29272 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.18514,-0.87166 0,-1.24191 0.26181,-0.52364 0.98009,-0.71829 1.24191,-1.24192 0.18513,-0.37031 -0.29272,-0.94919 0,-1.24192 0.29273,-0.29272 0.9492,0.29273 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24192 0.29272,-0.29272 0.94919,0.29273 1.24191,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24196 0.29272,-0.29273 0.94919,0.29277 1.24191,0 0.41364,-0.41364 -0.41364,-2.07015 0,-2.48384 0.29272,-0.29272 0.94919,0.29273 1.24192,0 0.29272,-0.29272 -0.18513,-0.8716 0,-1.24191 0.26182,-0.52364 0.9801,-0.71828 1.24191,-1.24192 0.18513,-0.37026 -0.18512,-0.8716 0,-1.24191 0.61105,-1.22208 4.35663,-3.74559 4.96766,-4.96767 0.18514,-0.37026 -0.29272,-0.94919 0,-1.24191 0.29273,-0.29273 0.9492,0.29272 1.24192,0 0.41409,-0.41409 -0.41408,-2.06974 0,-2.48383 0.29272,-0.29272 0.94919,0.29272 1.24192,0 0.58544,-0.58544 -0.58545,-1.89839 0,-2.48383 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.58545,-0.58544 -0.58544,-1.89838 0,-2.48383 0.29272,-0.29272 0.9492,0.29272 1.24192,0 0.29883,-0.29883 -0.29884,-4.66883 0,-4.96766 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.62096,-0.62096 -0.62095,-3.10479 0,-3.72575 0.29273,-0.29272 0.9492,0.29272 1.24192,0 0.2539,-0.2539 -0.24619,-3.23332 0,-3.72575 0.26181,-0.52363 0.9801,-0.71828 1.24192,-1.24191 0.33685,-0.67375 -0.33981,-4.62786 0,-4.96767 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.38453,-0.38458 -0.38454,-5.82504 0,-6.20957 0.29272,-0.29272 0.94919,0.29273 1.24192,0 0.29883,-0.29883 -0.29884,-4.66883 0,-4.96766 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29273,-0.29272 0,-0.82798 0,-1.24192 0,-0.41399 0,-0.82797 0,-1.24191 0,-4.55373 0,-9.1074 0,-13.66112 0,-3.31176 0,-6.62352 0,-9.93533 0,-0.41394 -0.29272,-0.94919 0,-1.24191 0.29273,-0.29272 0.9492,0.29272 1.24192,0 0.62096,-0.62096 -0.62096,-3.10479 0,-3.72575 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29273,-0.29272 0,-0.82792 0,-1.24192 0,-2.06984 0,-4.13973 0,-6.20958 0,-0.41398 0.29273,-0.94919 0,-1.24191 -0.29272,-0.29272 -0.94919,0.29272 -1.24191,0 -0.04,-0.04 0,-3.42456 0,-3.72574 0,-0.58555 -0.0563,-6.15328 0,-6.20958 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.41364,-0.41363 -0.41364,-2.07019 0,-2.48383 0.29273,-0.29272 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24192 0.29272,-0.29272 0.94919,0.29273 1.24191,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.41409,-0.41409 2.06975,0.41409 2.48383,0 2.91255,-2.91255 -3.82617,0 -1.24192,0 1.78639,0 3.72575,-2.99565 3.72575,-1.24192 0,0.41394 -1.65585,0 -1.24191,0 0.82798,0 1.6559,0 2.48383,0 0.41399,0 0.87166,-0.18513 1.24191,0 0.52364,0.26181 0.71829,0.9801 1.24192,1.24192 0.37026,0.18513 0.94919,-0.29273 1.24192,0 0.29272,0.29272 -0.29273,0.94919 0,1.24191 2.56958,2.56954 -0.10043,-3.92665 2.48383,1.24192 0.18513,0.37026 -0.29272,0.94919 0,1.24191 0.29272,0.29273 0.94919,-0.29272 1.24191,0 0.29273,0.29273 -0.29272,0.9492 0,1.24192 0.29273,0.29272 0.87166,-0.18513 1.24192,0 0.52363,0.26181 0.71828,0.9801 1.24192,1.24192 0.3703,0.18512 0.94919,-0.29273 1.24191,0 0.29272,0.29272 -0.29272,0.94919 0,1.24191 0.58545,0.58545 1.74331,-0.37026 2.48388,0 0.52363,0.26182 0.71823,0.9801 1.24192,1.24192 0.37026,0.18512 0.82792,0 1.24191,0 0.41394,0.41398 0.71823,0.98009 1.24191,1.24191 0.67371,0.33685 4.62781,-0.33981 4.96767,0 0.29272,0.29273 -0.29273,0.9492 0,1.24192 0.0562,0.0563 5.62398,0 6.20958,0 0.30118,0 3.68577,-0.04 3.72574,0 0.29273,0.29272 -0.29272,0.94919 0,1.24191 0.29273,0.29273 0.82793,0 1.24192,0 0.58555,0 6.15327,-0.0563 6.20958,0 0.29272,0.29273 -0.29272,0.9492 0,1.24192 0.41408,0.41408 2.06974,-0.41409 2.48382,0 0.29273,0.29272 -0.29272,0.94919 0,1.24191 0.29273,0.29272 0.9492,-0.29272 1.24192,0 0.29272,0.29272 0,0.82793 0,1.24192 0.41399,0 0.87165,-0.18513 1.24191,0 0.52364,0.26182 0.82794,0.82793 1.24192,1.24191 0.41399,0.41399 1.65591,0.82793 1.24191,1.24191 -0.41398,0.414 -1.65589,-1.65589 -1.24191,-1.24191 2.77655,2.77655 1.31294,2.48383 3.72575,2.48383 0.41399,0 1.6559,0 1.24191,0 -0.82792,0 -3.31175,0 -2.48383,0 1.24192,0 2.48383,0 3.72575,0 0.41399,0 0.82792,0 1.24191,0 0.414,0 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24192 0.41364,-0.41363 2.0702,0.41365 2.48383,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.58545,-0.58544 1.89839,0.58544 2.48383,0 0.29273,-0.29272 -0.29272,-0.94919 0,-1.24191 0.41409,-0.41409 2.06974,0.41409 2.48384,0 0.29272,-0.29272 -0.29273,-0.9492 0,-1.24192 0.58544,-0.58544 1.7433,0.37027 2.48383,0 0.52363,-0.26182 0.71827,-0.98009 1.24191,-1.24191 0.37031,-0.18513 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24192 0.29272,-0.29272 0.94919,0.29273 1.24191,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29272,-0.29272 0,-0.82793 0,-1.24192 0,-2.06985 0,-4.13974 0,-6.20958 0,-0.41399 0.29272,-0.94919 0,-1.24191 -0.29272,-0.29272 -0.94919,0.29272 -1.24191,0 -0.58544,-0.58545 0.58544,-1.89839 0,-2.48383 -0.29272,-0.29273 -0.94919,0.29272 -1.24191,0 -0.58545,-0.58545 0.37031,-1.74331 0,-2.48384 -0.26183,-0.52362 -0.9801,-0.71827 -1.24192,-1.24191 -0.37027,-0.74057 0.58544,-1.89839 0,-2.48383 -0.29272,-0.29273 -0.94919,0.29272 -1.24191,0 -0.41365,-0.41364 0.41363,-2.07019 0,-2.48383 -0.29273,-0.29273 -0.9492,0.29272 -1.24192,0 -0.29272,-0.29273 0.29272,-0.9492 0,-1.24192 -0.29272,-0.29272 -0.82793,0 -1.24191,0 -0.41395,0 -0.82794,0 -1.24192,0 1.6559,-0.82793 3.31181,-1.6559 4.96766,-2.48382 0,-0.414 -0.29272,-0.94925 0,-1.24197 0.29272,-0.29272 0.87165,0.18517 1.24192,0 1.04732,-0.52364 1.43655,-1.96015 2.48382,-2.48383 0.37032,-0.18514 0.87166,0.18517 1.24192,0 0.52369,-0.26182 0.71828,-0.9801 1.24191,-1.24192 0.37032,-0.18513 0.9492,0.29272 1.24197,0 0.29272,-0.29272 -0.29277,-0.94919 0,-1.24191 0.29272,-0.29273 0.87161,0.18513 1.24192,0 0.52363,-0.26182 0.71823,-0.98011 1.24191,-1.24192 0.37026,-0.18513 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24192 0.41363,-0.41363 2.07019,0.41364 2.48383,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.29273,-0.9492 0,-1.24192 0.41408,-0.41408 2.06973,0.41409 2.48383,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24191 0.29272,-0.29273 0.94919,0.29272 1.24191,0 0.29273,-0.29273 -0.29272,-0.9492 0,-1.24192 0.29273,-0.29272 0.87166,0.18513 1.24192,0 0.52363,-0.26181 0.71828,-0.9801 1.24192,-1.24192 0.74051,-0.37025 1.89838,0.58545 2.48383,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24192 0.29272,-0.29272 0.87165,0.18514 1.24191,0 0.52364,-0.26181 0.71829,-0.98009 1.24192,-1.24191 0.37026,-0.18513 0.94919,0.29272 1.24191,0 0.29272,-0.29273 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.87166,0.18513 1.24192,0 0.52364,-0.26181 0.71828,-0.98009 1.24191,-1.24191 0.37027,-0.18513 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24192 0.41364,-0.41364 2.07019,0.41364 2.48383,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24191 0.58544,-0.58545 1.89838,0.58544 2.48383,0 0.29272,-0.29273 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 1.24191,-0.41399 1.24191,0 0,0.41398 -1.6559,0 -1.24191,0 0.82792,0 1.65591,0 2.48383,0 0.41399,0 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24191 0.25389,-0.25391 3.23336,0.24618 3.72574,0 0.52363,-0.26183 0.71828,-0.98011 1.24192,-1.24192 0.74052,-0.37026 1.74331,0.37026 2.48383,0 0.52363,-0.26182 0.71828,-0.9801 1.24191,-1.24192 0.74058,-0.37026 1.89839,0.58545 2.48383,0 0.29272,-0.29272 -0.37026,-1.05679 0,-1.24191 0.74058,-0.37026 1.65591,0 2.48383,0 0.41399,0 0.94919,0.29272 1.24192,0 0.29272,-0.29273 -0.29273,-0.9492 0,-1.24192 0.62096,-0.62096 3.10479,0.62096 3.72575,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24191 0.29888,-0.29884 4.66882,0.29883 4.96766,0 0.29272,-0.29273 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.82797,0 1.24191,0 0.41399,0 0.82798,0 1.24197,0 3.72575,0 7.45149,0 11.17723,0 9.93533,0 19.87066,0 29.80598,0 0.45606,0 4.91772,-0.0501 4.96766,0 0.29272,0.29272 -0.29272,0.94919 0,1.24192 0.2539,0.25389 3.23336,-0.24619 3.72575,0 0.52363,0.26181 0.71828,0.9801 1.24191,1.24191 0.37031,0.18513 0.87166,-0.18513 1.24192,0 0.52363,0.26182 0.71828,0.9801 1.24192,1.24192 0.74056,0.37026 1.7433,-0.37026 2.48383,0 0.52368,0.26181 0.71828,0.98009 1.24191,1.24191 0.74057,0.37026 1.89839,-0.58544 2.48388,0 0.29272,0.29273 -0.29272,0.9492 0,1.24192 0.62095,0.62096 3.10479,-0.62096 3.72574,0 0.29273,0.29272 -0.29272,0.94919 0,1.24192 0.29273,0.29272 0.82794,0 1.24192,0 0.41394,0 0.82793,0 1.24192,0 0.30118,0 3.68577,0.04 3.72574,0 0.29273,-0.29273 -0.29272,-0.9492 0,-1.24192 0.29273,-0.29272 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.18513,-0.87166 0,-1.24192 0.26181,-0.52364 0.9801,-0.71828 1.24192,-1.24191 0.18513,-0.37026 -0.29273,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29273 0.94919,0.29272 1.24192,0 0.29272,-0.29273 -0.29273,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29273,-0.29272 -0.29272,-0.94919 0,-1.24192 0.58545,-0.58544 1.89839,0.58545 2.48384,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29272,-0.29272 -0.29272,-0.9492 0,-1.24192 0.41409,-0.41408 2.06974,0.4141 2.48383,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.62096,-0.62096 3.10478,0.62095 3.72574,0 0.29272,-0.29273 -0.29272,-0.9492 0,-1.24192 0.58545,-0.58544 1.89839,0.58544 2.48383,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24192 0.29272,-0.29272 0.9492,0.29273 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29273,-0.29272 -0.29272,-0.9492 0,-1.24192 0.29273,-0.29272 0.87166,0.18514 1.24192,0 0.52364,-0.26181 0.71829,-0.98009 1.24192,-1.24191 0.37025,-0.18513 0.94919,0.29272 1.24191,0 0.29272,-0.29272 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 2.56958,-2.56958 -0.10043,3.92661 2.48383,-1.24191 0.18513,-0.37027 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24191 0.29272,-0.29273 0.94919,0.29272 1.24191,0 0.58545,-0.58545 -0.58544,-1.89839 0,-2.48384 0.29272,-0.29272 0.94919,0.29273 1.24192,0 0.58544,-0.58544 -0.58545,-1.89838 0,-2.48383 0.29272,-0.29272 0.94919,0.29273 1.24191,0 0.41409,-0.41409 -0.41409,-2.06979 0,-2.48383 0.29273,-0.29272 0.9492,0.29272 1.24192,0 0.58544,-0.58549 -0.58545,-1.89844 0,-2.48388 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29738,-0.29733 -0.28231,-4.96767 0,-4.96767 0.41399,0 -0.41394,1.24192 0,1.24192 1.53464,0 1.24192,-1.7416 1.24192,-2.48383 3.11611,1.35793 5.5794,1.24191 8.6934,1.24191 0.52439,0 5.45353,0 2.48383,0 -7.27587,0 3.61586,0 4.96772,0 1.65585,0 3.31175,0 4.96766,0 0.41393,0 1.24192,-0.41393 1.24192,0 0,0.414 -1.65591,0 -1.24192,0 0.82793,0 1.74326,0.37032 2.48383,0 0.37026,-0.18512 -0.29272,-0.94919 0,-1.24191 0.29273,-0.29272 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24192 0.29272,-0.29272 0.94919,0.29273 1.24191,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29272,-0.29272 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.58545,-0.58544 -0.58544,-1.89838 0,-2.48383 0.29273,-0.29272 0.9492,0.29272 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29273 0.94919,0.29272 1.24192,0 0.29272,-0.29273 -0.29273,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24192 0.29272,-0.29272 0.9492,0.29273 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29273,-0.29272 -0.29272,-0.9492 0,-1.24192 0.29273,-0.29272 0.87166,0.18513 1.24192,0 0.52364,-0.26181 0.71828,-0.9801 1.24192,-1.24191 0.37025,-0.18514 0.94919,0.29272 1.24191,0 0.29272,-0.29273 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.18514,-0.87166 0,-1.24192 0.26181,-0.52363 0.82792,-0.82792 1.24191,-1.24191 0.41399,-0.41399 0.71828,-0.9801 1.24192,-1.24192 0.37026,-0.18512 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24191 0.29272,-0.29273 0.94919,0.29272 1.24191,0 0.29272,-0.29273 -0.29272,-0.9492 0,-1.24192 0.58545,-0.58544 1.89839,0.58545 2.48383,0 0.29273,-0.29272 -0.29272,-0.94919 0,-1.24192 0.29273,-0.29272 0.9492,0.29273 1.24192,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.41408,-0.41409 2.06974,0.41409 2.48383,0 0.29272,-0.29272 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29272 0.94919,0.29272 1.24191,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29273 0.82799,0 1.24192,0 0.88027,0 7.13042,-0.16054 7.45149,0 0.52364,0.26181 0.71828,0.98009 1.24192,1.24191 0.49243,0.24619 3.47189,-0.2539 3.72575,0 0.29272,0.29272 -0.29272,0.94919 0,1.24191 0.41408,0.4141 2.06979,-0.41408 2.48383,0 0.29272,0.29272 -0.29272,0.9492 0,1.24192 0.04,0.04 3.42456,0 3.7258,0 6.62351,0 13.24707,0 19.87064,0 2.06984,0 4.13973,0 6.20958,0 0.82793,0 1.6559,0 2.48383,0 0.41399,0 1.24191,-0.41398 1.24191,0 0,0.41399 -1.24191,-0.41398 -1.24191,0 0,0.48502 2.32705,1.3987 1.24191,2.48383 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29272 0.29272,0.94919 0,1.24192 -0.29272,0.29272 -0.94919,-0.29273 -1.24191,0 -0.29273,0.29272 0.18512,0.87165 0,1.24191 -0.26183,0.52364 -0.9801,0.71829 -1.24192,1.24192 -0.18513,0.37026 0.29272,0.94919 0,1.24191 -0.29272,0.29273 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29273 0.29272,0.9492 0,1.24192 -0.29273,0.29272 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.18512,0.87166 0,1.24192 -0.26182,0.52363 -0.9801,0.71827 -1.24192,1.24191 -0.18513,0.37026 0.29273,0.9492 0,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.29272,0.29273 -0.94919,-0.29272 -1.24192,0 -0.29272,0.29273 0.29273,0.9492 0,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29272 0.18512,0.87165 0,1.24192 -0.49689,0.99382 -1.98695,1.49005 -2.48383,2.48383 -0.18514,0.37026 0.29272,0.94919 0,1.24191 -0.29273,0.29272 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24192,0 -0.29272,0.29272 0.18514,0.87165 0,1.24191 -0.26181,0.52364 -0.9801,0.71828 -1.24191,1.24191 -0.18513,0.37027 0.29272,0.9492 0,1.24192 -0.29273,0.29272 -0.9492,-0.29272 -1.24192,0 -0.58544,0.58544 0.58545,1.89839 0,2.48383 -1.6559,1.65591 -1.24191,-2.06984 -1.24191,1.24192 0,0.52439 0,5.45352 0,2.48383 0,-0.82793 0.82793,-2.48383 0,-2.48383 -0.92571,0 -0.9492,1.60566 -1.24192,2.48383 -0.28476,0.85428 0.36636,2.99304 0,3.7258 -1.53464,3.06927 -1.24192,-0.42872 -1.24192,2.48383 0,0.82792 0,3.31175 0,2.48383 0,-0.82798 0,-3.31181 0,-2.48383 0,1.24191 -0.39275,2.54754 0,3.72575 0.13089,0.3927 0.82794,0 1.24192,0 2.89777,0 5.79559,0 8.69341,0 7.4515,0 14.90298,0 22.35448,0 2.48383,0 4.96766,0 7.45149,0 0.82798,0 3.31181,0 2.48384,0 -0.82794,0 -3.31177,0 -2.48384,0 4.13973,0 3.72575,1.24191 3.72575,-1.24192 1.65588,0.41398 3.29396,0.90716 4.96764,1.24192 1.11774,0.22349 2.58321,0 3.7258,0 2.89776,0 5.79559,0 8.6934,0 0.5593,0 3.34778,-0.189 3.72575,0 0.52364,0.26181 0.71828,0.98009 1.24191,1.24191 0.32108,0.16053 6.57122,0 7.4515,0 0.41398,0 0.94919,-0.29272 1.24192,0 0.29272,0.29272 -0.29273,0.9492 0,1.24192 0.29272,0.29272 0.82792,0 1.24191,0 0.41398,0 0.82793,0 1.24192,0 3.31175,0 6.62356,0 9.93532,0 3.3118,0 6.62357,0 9.93532,0 0.41399,0 0.9492,-0.29272 1.24192,0 0.29272,0.29272 -0.29272,0.94919 0,1.24191 0.29272,0.29272 0.94919,-0.29272 1.24191,0 0.29273,0.29272 0,0.82793 0,1.24191 0,0.88028 0.16059,7.13037 0,7.4515 -0.26181,0.52363 -0.9801,0.71828 -1.24191,1.24191 -0.37026,0.74053 0.58544,1.89839 0,2.48383 -0.29272,0.29273 -0.94919,-0.29272 -1.24192,0 -0.29272,0.29273 0,0.82793 0,1.24192 0,0.41399 0,0.82792 0,1.24192 0,2.91249 0.29273,-0.58545 -1.24191,2.48383 -0.18514,0.37026 0,0.82792 0,1.24191 0,0.41399 0,0.82793 0,1.24192 0,1.49521 0,3.02995 0,2.48383 0,-0.82793 0,-3.31176 0,-2.48383 0,1.24192 0,2.48383 0,3.72575 0,0.41398 -0.29273,0.94919 0,1.24191 0.29272,0.29272 0.94919,-0.29272 1.24191,0 0.29273,0.29272 -0.29272,0.94919 0,1.24191 0.29273,0.29273 0.82798,0 1.24192,0 0.86384,0 5.76047,-0.22455 6.20958,0 0.52363,0.26182 0.71828,0.9801 1.24191,1.24192 0.49243,0.24619 3.47189,-0.2539 3.72574,0 0.29278,0.29272 -0.29272,0.94919 0,1.24191 0.62101,0.62096 3.10484,-0.62096 3.7258,0 0.29272,0.29272 -0.29272,0.94919 0,1.24192 0.29884,0.29883 4.66878,-0.29883 4.96766,0 0.29273,0.29272 -0.29272,0.94919 0,1.24191 0.62096,0.62096 3.10479,-0.62096 3.72575,0 0.29272,0.29273 -0.29272,0.9492 0,1.24192 0.62096,0.62096 3.10479,-0.62096 3.72575,0 0.29272,0.29272 -0.29272,0.94919 0,1.24191 0.29272,0.29273 0.94919,-0.29272 1.24192,0 0.29272,0.29273 0.41393,1.24192 0,1.24192 -0.414,0 0,-1.65585 0,-1.24192 0,0.82798 0,1.65591 0,2.48384 0,0.41399 0.29272,0.94919 0,1.24191 -0.29273,0.29272 -0.9492,-0.29272 -1.24192,0 -0.58544,0.58545 0.37026,1.74331 0,2.48383 -0.26182,0.52364 -0.9801,0.71828 -1.24192,1.24192 -0.18898,0.37797 0,3.16645 0,3.72575 0,0.64945 -0.16329,4.64113 0,4.96771 0.26182,0.52363 0.71828,0.98009 1.24192,1.24191 0.74052,0.37027 1.89839,-0.58544 2.48383,0 0.29272,0.29272 -0.29272,0.94919 0,1.24192 0.04,0.04 3.42456,0 3.72574,0 0.5593,0 3.34778,-0.18899 3.72575,0 0.52364,0.26182 0.71828,0.9801 1.24191,1.24191 0.32108,0.16054 6.57123,0 7.4515,0 0.41399,0 0.87166,-0.18512 1.24191,0 0.52364,0.26182 0.71828,0.9801 1.24192,1.24192 0.74052,0.37026 1.89839,-0.58545 2.48383,0 0.29273,0.29272 -0.29272,0.94919 0,1.24191 0.29884,0.29884 4.66883,-0.29888 4.96767,0 0.29272,0.29272 -0.29273,0.9492 0,1.24192 0.58544,0.58544 1.7433,-0.37026 2.48383,0 0.52363,0.26182 0.71828,0.9801 1.24191,1.24191 0.74057,0.37026 1.89838,-0.58544 2.48383,0 0.29272,0.29273 -0.29273,0.9492 0,1.24192 0.58544,0.58544 1.74331,-0.37026 2.48383,0 0.52364,0.26181 0.71829,0.9801 1.24191,1.24192 0.74058,0.37025 1.89839,-0.58545 2.48384,0 0.29272,0.29272 -0.29273,0.94919 0,1.24191 0.62095,0.62096 3.10484,-0.62096 3.72579,0 0.29273,0.29272 -0.29272,0.9492 0,1.24192 0.25385,0.2539 3.23332,-0.24624 3.72575,0 0.52363,0.26181 0.71828,0.9801 1.24192,1.24191 0.37026,0.18514 0.94919,-0.29272 1.24191,0 0.29273,0.29273 -0.29272,0.9492 0,1.24192 0.29273,0.29272 0.9492,-0.29272 1.24192,0 0.29272,0.29272 -0.29272,0.94919 0,1.24192 0.41408,0.41408 2.06974,-0.4141 2.48383,0 0.29272,0.29272 -0.29272,0.94919 0,1.24191 0.29272,0.29272 0.94919,0.29272 1.24191,0 0.29272,-0.29272 -0.29272,-0.94919 0,-1.24191 0.29272,-0.29273 0.94919,0.29272 1.24192,0 0.29272,-0.29273 -0.29273,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24191,0 2.56954,-2.56959 -3.92665,0.10043 1.24192,-2.48383 0.37026,-0.18514 0.94919,0.29272 1.24191,0 0.29272,-0.29272 -0.29272,-0.9492 0,-1.24192 0.29272,-0.29272 0.94919,0.29272 1.24192,0 0.29272,-0.29272 -0.29273,-0.94919 0,-1.24191 0.29272,-0.29273 0.87165,0.18513 1.24191,0 0.52364,-0.26182 0.71829,-0.98011 1.24192,-1.24192 0.37026,-0.18513 0.94919,0.29272 1.24191,0 0,-3.31181 -0.41398,0.41394 1.24192,-1.24192 0.29272,-0.29272 -0.41399,-1.24191 0,-1.24191 1.82736,0 -2.87703,4.11889 1.24192,0 1.6559,0.82793 3.48657,1.373 4.96766,2.48383 0.33119,0.24835 -0.29272,0.94919 0,1.24192 0.62096,0.62095 3.10479,-0.62096 3.72575,0 0.29272,0.29272 -0.29272,0.94919 0,1.24191 0.29272,0.29272 0.94919,-0.29272 1.24191,0 0.29273,0.29272 -0.29272,0.9492 0,1.24192 0.29273,0.29272 0.9492,-0.29272 1.24192,0 0.12416,0.12417 0.12416,3.60152 0,3.72575 -0.29272,0.29272 -0.94919,-0.29273 -1.24192,0 -0.0563,0.0563 0,5.62403 0,6.20957 0,0.30119 0.04,3.68583 0,3.72575 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29272 0,0.82793 0,1.24191 0,0.64941 -0.16329,4.64113 0,4.96766 0.26181,0.52364 0.98009,0.71829 1.24191,1.24192 0.3903,0.78059 -0.39029,4.18712 0,4.96766 0.26182,0.52364 0.9801,0.71828 1.24192,1.24192 0.16053,0.32112 0,6.57122 0,7.45149 0,0.41399 -0.29272,0.9492 0,1.24192 0.29272,0.29272 0.94919,-0.29272 1.24191,0 0.58545,0.58544 -0.37026,1.7433 0,2.48383 0.26182,0.52363 0.9801,0.71828 1.24192,1.24191 0.37026,0.74057 -0.58544,1.89839 0,2.48383 0.29272,0.29272 0.94919,-0.29272 1.24191,0 0.41409,0.41409 -0.41409,2.0698 0,2.48388 0.29272,0.29272 0.94919,-0.29277 1.24191,0 0.29884,0.29884 -0.29882,4.66878 0,4.96767 0.29273,0.29272 0.9492,-0.29273 1.24192,0 0.41364,0.41363 -0.41364,2.07019 0,2.48383 0.29272,0.29272 0.94919,-0.29273 1.24192,0 0.29272,0.29272 -0.29273,0.94919 0,1.24191 0.29272,0.29273 0.94919,-0.29272 1.24191,0 0.58545,0.58545 -0.58544,1.89839 0,2.48384 0.29272,0.29272 1.24192,0.41393 1.24192,0 0,-0.58545 -1.24192,-1.82737 -1.24192,-1.24192 0,1.78639 2.99564,3.72575 1.24192,3.72575 -0.41394,0 -0.41394,-1.24192 0,-1.24192 2.58431,0 0.49974,1.74161 1.24191,2.48383 0.29273,0.29273 1.24192,-0.41399 1.24192,0 0,0.41393 -1.24192,-0.41399 -1.24192,0 0,0.58545 0.98011,0.71828 1.24192,1.24192 0.18898,0.37792 0,3.16644 0,3.72574 0,2.89782 0,5.79559 0,8.69341 0,0.58554 0.0563,6.15327 0,6.20958 -0.29272,0.29272 -1.24192,0.41398 -1.24192,0 0,-0.58545 1.24192,-1.82736 1.24192,-1.24192 0,0.92565 -0.94919,1.60567 -1.24192,2.48383 -0.13088,0.39276 0.29273,0.9492 0,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29272 0.29272,0.94919 0,1.24192 -0.62096,0.62095 -3.10479,-0.62096 -3.72575,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.58545,0.58545 -1.89839,-0.58544 -2.48383,0 -0.29272,0.29272 0.29272,0.94919 0,1.24192 -0.58544,0.58544 -1.89838,-0.58545 -2.48383,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.58544,0.58544 -1.74331,-0.37027 -2.48383,0 -0.52363,0.26182 -0.71828,0.98009 -1.24191,1.24192 -0.37027,0.18512 -0.9492,-0.29273 -1.24192,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.62096,0.62096 -3.10479,-0.62096 -3.72575,0 -0.29272,0.29272 0.29273,0.94919 0,1.24191 -0.58544,0.58545 -1.89838,-0.58544 -2.48383,0 -0.29272,0.29272 0.29273,0.94919 0,1.24192 -0.29272,0.29272 -0.94919,-0.29273 -1.24191,0 -0.29273,0.29272 0.29272,0.94919 0,1.24191 -0.58545,0.58545 -1.89839,-0.58544 -2.48384,0 -0.29272,0.29273 0.29273,0.9492 0,1.24192 -0.41408,0.41409 -2.06973,-0.41409 -2.48383,0 -0.29272,0.29272 0.29273,0.94919 0,1.24191 -0.58544,0.58545 -1.89838,-0.58544 -2.48383,0 0,3.31181 0.41394,-0.41393 -1.24191,1.24192 -0.29273,0.29272 0.29272,0.94919 0,1.24192 -0.41409,0.41409 -2.06974,-0.41409 -2.48383,0 -0.29273,0.29272 0.29272,0.94919 0,1.24191 -3.31181,0 0.41393,-0.41394 -1.24192,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.29272,0.29273 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29273 0.29272,0.9492 0,1.24192 -0.58545,0.58545 -1.89839,-0.58544 -2.48384,0 -0.29272,0.29272 0.29273,0.94919 0,1.24192 -0.29272,0.29277 -0.94919,-0.29273 -1.24191,0 -0.29272,0.29277 0.29272,0.94924 0,1.24196 -0.29272,0.29273 -0.87166,-0.18518 -1.24192,0 -0.52369,0.26182 -0.71829,0.9801 -1.24191,1.24192 -0.37031,0.18512 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.41369,0.41364 -2.0702,-0.41368 -2.48388,0 -0.29273,0.29273 0.29272,0.9492 0,1.24192 -0.58545,0.58544 -1.89839,-0.58544 -2.48383,0 -0.29273,0.29272 0.29272,0.94919 0,1.24192 -0.41409,0.41408 -2.06974,-0.4141 -2.48384,0 -0.29272,0.29272 0.29273,0.94919 0,1.24191 -0.62095,0.62096 -3.10479,-0.62096 -3.72574,0 -1.65585,1.65585 2.0699,1.24191 -1.24192,1.24191 -0.41393,0 -0.82792,0 -1.24191,0 -0.41394,0 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29272 0.29272,0.9492 0,1.24192 -0.29884,0.29883 -4.66883,-0.29888 -4.96767,0 -0.29272,0.29272 0.29273,0.94919 0,1.24191 -0.2539,0.25386 -3.23332,-0.24624 -3.72574,0 -0.52364,0.26182 -0.71829,0.9801 -1.24192,1.24192 -0.85783,0.42891 -5.77365,-0.43593 -6.20958,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.62096,0.62096 -3.10479,-0.62096 -3.72575,0 -0.29272,0.29272 0.29273,0.9492 0,1.24192 -0.58544,0.58544 -1.7433,-0.37026 -2.48383,0 -0.52363,0.26182 -0.71828,0.9801 -1.24191,1.24191 -0.74052,0.37026 -1.74331,-0.37025 -2.48383,0 -0.52363,0.26182 -0.71828,0.98011 -1.24191,1.24192 -0.74053,0.37026 -1.89839,-0.58544 -2.48383,0 -0.29273,0.29272 0.29272,0.94919 0,1.24192 -0.29273,0.29272 -0.82799,0 -1.24192,0 -0.41399,0 -0.82798,0 -1.24192,0 -0.41399,0 -0.82797,0 -1.24191,0 -0.41399,0 -0.9492,-0.29273 -1.24192,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.29888,0.29884 -4.66883,-0.29883 -4.96766,0 -0.29272,0.29272 0.29272,0.9492 0,1.24192 -0.29889,0.29883 -4.66883,-0.29884 -4.96767,0 -0.29272,0.29272 0.29273,0.94919 0,1.24191 -0.41408,0.41409 -2.06978,-0.41409 -2.48388,0 -0.29272,0.29273 0.29278,0.9492 0,1.24192 -0.43592,0.43593 -5.35174,-0.42892 -6.20957,0 -0.52364,0.26181 -0.71829,0.9801 -1.24191,1.24192 -0.99353,0.49678 -2.73218,-0.49679 -3.72575,0 -0.52364,0.26181 -0.71828,0.98009 -1.24192,1.24191 -0.49238,0.24619 -3.47184,-0.25391 -3.72574,0 -0.29273,0.29272 0.29272,0.94919 0,1.24192 -0.29884,0.29883 -4.66883,-0.29884 -4.96767,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.58544,0.58545 -1.7433,-0.37026 -2.48383,0 -0.52363,0.26182 -0.71828,0.9801 -1.24192,1.24192 -0.37025,0.18512 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29272 0.29272,0.94919 0,1.24192 -0.29272,0.29272 -0.87165,-0.18514 -1.24191,0 -0.52364,0.26181 -0.71829,0.98009 -1.24192,1.24191 -0.37026,0.18513 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.58545,0.58545 -1.74332,-0.37026 -2.48383,0 -0.52364,0.26182 -0.71829,0.9801 -1.24192,1.24192 -0.78059,0.39029 -4.18712,-0.3903 -4.96766,0 -0.52364,0.26182 -0.71828,0.98009 -1.24192,1.24191 -0.74052,0.37027 -1.89838,-0.58544 -2.48383,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.62096,0.62096 -3.10479,-0.62095 -3.72575,0 -0.29272,0.29273 0.29272,0.9492 0,1.24192 -0.58544,0.58545 -1.89838,-0.58544 -2.48383,0 -0.29272,0.29272 0.29272,0.94919 0,1.24192 -0.04,0.04 -3.42456,0 -3.72575,0 -3.3118,0 0.41394,-0.41399 -1.24191,1.24191 -0.2539,0.25391 -3.23337,-0.24618 -3.72574,0 -4.11895,4.11895 1.17089,-0.58544 -2.48388,1.24192 -0.52364,0.26182 -0.71824,0.9801 -1.24192,1.24191 -0.37026,0.18514 -0.94919,-0.29272 -1.24192,0 -0.29272,0.29273 0.29273,0.9492 0,1.24192 -0.29272,0.29272 -0.8716,-0.18513 -1.24191,0 -0.52364,0.26181 -0.71828,0.9801 -1.24189,1.24192 -0.49239,0.24623 -3.47185,-0.2539 -3.72575,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.29272,0.29272 -0.82793,0 -1.24192,0 -0.86379,0 -5.76043,-0.22455 -6.20958,0 -0.52363,0.26182 -0.71827,0.9801 -1.24191,1.24192 -0.49238,0.24624 -3.47184,-0.25386 -3.72575,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.29272,0.29273 -0.94919,-0.29272 -1.24192,0 -0.29272,0.29273 0,0.82798 0,1.24192 0,0.41399 0,0.82797 0,1.24192 0,4.69172 0,-5.51961 0,2.48383 0,0.41398 0.414,1.24191 0,1.24191 -0.41398,0 0,-0.82793 0,-1.24191 -0.41398,0.82797 -0.58734,1.8293 -1.24191,2.48383 -0.0501,0.0501 -4.5116,0 -4.96766,0 -2.06985,0 -4.13974,0 -6.20958,0 -0.41399,0 -0.94919,0.29272 -1.24191,0 -2.9125,-2.9125 3.82617,0 1.24191,0 -0.92565,0 -1.60566,-0.94919 -2.48383,-1.24192 -0.39275,-0.13088 -1.24191,0.41399 -1.24191,0 0,-0.41394 1.6559,0 1.24191,0 -2.06984,0 -4.13974,0 -6.20958,0 -1.49521,0 -3.02995,0 -2.48383,0 0.82793,0 3.31176,0 2.48383,0 -1.24191,0 -2.48383,0 -3.72574,0 -0.41399,0 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29273 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.82797,0 -1.24192,0 -0.41398,0 -1.24191,0.41398 -1.24191,0 0,-0.58545 0.82793,-0.82793 1.24191,-1.24192 -2.06984,0 -4.13973,0 -6.20957,0 0,-0.41394 0.29272,-0.94919 0,-1.24191 -0.58544,-0.58545 -1.89838,0.58544 -2.48383,0 -0.29272,-0.29272 0.29272,-0.9492 0,-1.24192 -0.29272,-0.29272 -0.94919,0.29272 -1.24191,0 -0.29278,-0.29272 0.29272,-0.94919 0,-1.24191 -0.29278,-0.29273 -0.87166,0.18512 -1.24197,0 -0.52364,-0.26182 -0.71824,-0.98011 -1.24192,-1.24192 -0.37025,-0.18513 -0.94919,0.29272 -1.24191,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24192 -0.29272,-0.29272 -0.9492,0.29273 -1.24192,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24191 -0.29272,-0.29272 -0.94919,0.29272 -1.24191,0 -0.29273,-0.29272 0.29272,-0.9492 0,-1.24192 -0.41364,-0.41363 -2.0702,0.41364 -2.48384,0 -0.29272,-0.29272 0.29273,-0.94919 0,-1.24191 -0.29272,-0.29273 -0.87165,0.18513 -1.24191,0 -0.52363,-0.26182 -0.71828,-0.98011 -1.24192,-1.24192 -0.37026,-0.18513 -0.94919,0.29272 -1.24191,0 -0.29273,-0.29272 0.29272,-0.94919 0,-1.24192 -0.29273,-0.29272 -0.87166,0.18514 -1.24192,0 -0.52363,-0.26181 -0.71828,-0.98009 -1.24192,-1.24191 -0.37025,-0.18513 -0.94919,0.29272 -1.24191,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24192 -0.29272,-0.29272 -0.9492,0.29273 -1.24192,0 0,-3.31175 0.41399,0.41399 -1.24191,-1.24191 -0.29272,-0.29273 0.29272,-0.9492 0,-1.24192 -0.41409,-0.41408 -2.06974,0.41409 -2.48383,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24192 -0.29272,-0.29272 -0.94919,0.29273 -1.24191,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24191 -0.41365,-0.41364 -2.0702,0.41364 -2.48383,0 -0.29273,-0.29272 0.29272,-0.94919 0,-1.24191 -0.58545,-0.58544 -1.89839,0.58544 -2.48383,0 -0.29273,-0.29272 0.29272,-0.9492 0,-1.24192 -0.29273,-0.29272 -0.82793,0 -1.24192,0 -0.41399,0 -0.82793,0 -1.24192,0 -0.41399,0 -1.65591,0 -1.24191,0 0.82792,0 3.31175,0 2.48383,0 -1.24192,0 -2.48383,0 -3.72575,0 -0.41399,0 -0.82792,0 -1.24191,0 -0.414,0 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.29272,0.9492 0,1.24192 -0.41369,0.41369 -2.07015,-0.41369 -2.48383,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.41364,0.41364 -2.07019,-0.41364 -2.48383,0 -0.29273,0.29272 0.29272,0.94919 0,1.24191 -0.62096,0.62096 -3.10479,-0.62095 -3.72575,0 -0.29272,0.29273 0.18513,0.87166 0,1.24192 -0.26182,0.52364 -0.98009,0.71829 -1.24191,1.24192 -0.18513,0.37026 0.29272,0.94919 0,1.24191 -0.29273,0.29273 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29273 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29272 0.18512,0.87166 0,1.24191 -0.26182,0.52364 -0.9801,0.71829 -1.24192,1.24192 -0.18513,0.37026 0.29273,0.94919 0,1.24192 -0.29272,0.29272 -0.94919,-0.29273 -1.24191,0 -0.29272,0.29272 0.18512,0.87165 0,1.24191 -0.26183,0.52364 -0.9801,0.71828 -1.24192,1.24192 -0.37026,0.74057 0.58545,1.89838 0,2.48383 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29272 0.18512,0.87166 0,1.24192 -0.26182,0.52362 -0.98011,0.71827 -1.24192,1.24191 -0.18513,0.37031 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24192,0 -0.58544,0.58544 0.58545,1.89838 0,2.48383 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29272 0.18513,0.87165 0,1.24191 -0.26182,0.52368 -0.9801,0.71828 -1.24192,1.24192 -0.18518,0.37031 0.29273,0.94924 0,1.24196 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.58545,0.58544 0.58544,1.89839 0,2.48383 -0.29273,0.29272 -0.9492,-0.29272 -1.24192,0 -0.58549,0.58545 0.58545,1.89839 0,2.48383 -0.29272,0.29272 -0.94924,-0.29272 -1.24197,0 -0.58544,0.58545 0.37031,1.74327 0,2.48383 -0.26181,0.52364 -0.98005,0.71829 -1.24191,1.24192 -0.18513,0.37026 0,0.82792 0,1.24192 -0.41394,0.41394 -0.9801,0.71827 -1.24192,1.24191 -0.18512,0.37026 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.41409,0.41408 0.41409,2.06974 0,2.48383 -0.29273,0.29272 -0.9492,-0.29272 -1.24192,0 -0.41364,0.41364 0.41365,2.07019 0,2.48383 -0.29272,0.29272 -0.94919,-0.29272 -1.24192,0 -0.58544,0.58545 0.58545,1.89839 0,2.48383 -0.29272,0.29273 -0.94919,-0.29272 -1.24191,0 -0.58544,0.58545 0.37032,1.74331 0,2.48383 -4.1189,4.1189 0.58544,-1.17089 -1.24191,2.48383 -0.26182,0.52364 -0.9801,0.71828 -1.24191,1.24191 -0.18514,0.37027 0,0.82794 0,1.24192 -0.41394,0.41399 -0.9801,0.71829 -1.24192,1.24191 -0.37027,0.74053 0.58544,1.89839 0,2.48384 -0.29272,0.29272 -0.94919,-0.29273 -1.24192,0 -0.58544,0.58544 0.58545,1.89838 0,2.48383 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.58545,0.58544 0.58544,1.89839 0,2.48383 -0.29272,0.29272 -0.94919,-0.29272 -1.24192,0 0,3.31181 0.41399,-0.41399 -1.24191,1.24192 -0.29273,0.29272 0.29272,0.94919 0,1.24191 -0.62096,0.62096 -3.10479,-0.62096 -3.72575,0 -0.29272,0.29272 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.82792,0 -1.24192,0 -0.41399,0 -0.82792,0 -1.24191,0 -2.89782,0 -5.79559,0 -8.69341,0 -0.41399,0 -0.9492,0.29272 -1.24192,0 -0.29272,-0.29272 0.29272,-0.9492 0,-1.24192 -0.29272,-0.29272 -0.82792,0 -1.24191,0 -3.31176,0 -6.62357,0 -9.93532,0 -1.24192,0 -2.48383,0 -3.72575,0 -0.41399,0 -1.65591,0 -1.24192,0 0.82793,0 3.31176,0 2.48384,0 -1.24192,0 -2.52095,0.30124 -3.72575,0 -0.56797,-0.142 -0.71828,-0.9801 -1.24192,-1.24191 -0.37031,-0.18514 -0.82797,0 -1.24191,0 -0.41399,0 -0.82798,0 -1.24192,0 -2.48383,0 -4.96766,0 -7.45154,0 -0.82793,0 -1.65585,0 -2.48383,0 -0.41394,0 -1.65586,0 -1.24191,0 0.82797,0 2.48383,-0.82793 2.48383,0 0,1.42704 -2.83456,1.24191 -3.72575,1.24191 -0.41394,0 -1.24192,0.41399 -1.24192,0 0,-0.41399 1.6559,0 1.24192,0 -0.82793,0 -1.74326,-0.37026 -2.48383,0 -0.74053,0.37026 0.37026,1.74331 0,2.48383 -0.26182,0.52363 -0.82793,0.82798 -1.24192,1.24192 -6.92986,-4.13768 -5.70818,3.4751 -8.69341,4.96766 -0.37026,0.18513 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29272 0.29272,0.9492 0,1.24192 -0.29273,0.29272 -0.87165,-0.18513 -1.24192,0 -0.52363,0.26181 -0.71828,0.98009 -1.24192,1.24191 -0.37025,0.18513 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.29272,0.29272 -0.87165,-0.18512 -1.24191,0 -0.52364,0.26183 -0.71829,0.9801 -1.24192,1.24192 -0.37026,0.18513 -0.94919,-0.29272 -1.24191,0 0,3.31181 0.41398,-0.41393 -1.24192,1.24191 -0.29272,0.29273 0.29273,0.9492 0,1.24192 -0.29272,0.29272 -0.87165,-0.18513 -1.24191,0 -0.52364,0.26182 -0.71829,0.9801 -1.24192,1.24191 -0.37026,0.18519 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29273 0.29272,0.9492 0,1.24192 -0.4141,0.41409 -2.06975,-0.41403 -2.48384,0 -0.29272,0.29272 0.29273,0.94919 0,1.24192 -0.29272,0.29272 -0.94919,-0.29273 -1.24191,0 -0.29272,0.29272 0.29272,0.94924 0,1.24196 -0.29272,0.29273 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29273 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29272 0,0.82792 0,1.24192 -0.414,0 -0.87166,-0.18519 -1.24192,0 -5.16857,2.58425 1.32767,-0.0858 -1.24192,2.48383 -0.29272,0.29272 -0.94919,-0.29273 -1.24191,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.29272,0.29273 -0.87166,-0.18513 -1.24192,0 -0.57512,0.28751 -4.23725,4.23721 -4.96766,4.96767 -0.41398,0.41393 -0.71828,0.98009 -1.24192,1.24191 -0.37026,0.18513 -0.82797,0 -1.24191,0 -0.41399,0.41393 -0.71828,0.98009 -1.24191,1.24191 -0.37032,0.18513 -0.94919,-0.29272 -1.24192,0 -0.29272,0.29272 0.29273,0.9492 0,1.24192 -0.29272,0.29272 -0.87165,-0.18513 -1.24191,0 -0.52364,0.26182 -0.71829,0.9801 -1.24192,1.24191 -0.37031,0.18513 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29272 0.29272,0.94919 0,1.24192 -0.58545,0.58544 -1.89839,-0.58545 -2.48389,0 -0.29272,0.29272 0.29278,0.94919 0,1.24191 -0.41404,0.4141 -2.06974,-0.41408 -2.48383,0 -0.29272,0.29272 0.29273,0.9492 0,1.24192 -0.29272,0.29272 -0.8716,-0.18513 -1.24191,0 -0.52364,0.26182 -0.71828,0.9801 -1.24192,1.24191 -0.37026,0.18514 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29273 0.29272,0.9492 0,1.24192 -0.29273,0.29272 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.29272,0.94919 0,1.24192 -0.41409,0.41409 -2.06974,-0.41409 -2.48383,0 -0.29273,0.29272 0.29272,0.94919 0,1.24191 -0.29273,0.29272 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.87165,-0.18514 -1.24191,0 -0.52363,0.26181 -0.71828,0.9801 -1.24192,1.24191 -0.37026,0.18514 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29273 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.29272,0.94919 0,1.24192 -0.29272,0.29272 -0.87165,-0.18514 -1.24191,0 -1.04727,0.52363 -1.43656,1.96019 -2.48383,2.48383 -0.37027,0.18512 -0.94919,-0.29272 -1.24192,0 -0.29272,0.29272 0.29273,0.94919 0,1.24191 -0.29272,0.29273 -0.87165,-0.18513 -1.24191,0 -0.52364,0.26182 -0.71829,0.9801 -1.24192,1.24192 -0.37026,0.18512 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29272 0.29272,0.94919 0,1.24192 -0.29273,0.29272 -0.9492,-0.29273 -1.24192,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.58544,0.58544 -1.89839,-0.58544 -2.48383,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.29272,0.29273 -0.87166,-0.18513 -1.24192,0 -0.52363,0.26182 -0.71828,0.9801 -1.24191,1.24192 -0.37026,0.18513 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.29272,0.29272 -0.94919,-0.29272 -1.24192,0 -0.29272,0.29272 0.29273,0.94919 0,1.24191 -0.29272,0.29273 -0.94919,0.29273 -1.24191,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24191 -0.29272,-0.29272 -0.94919,0.29272 -1.24192,0 -0.29272,-0.29272 0.29273,-0.94919 0,-1.24191 -0.29272,-0.29272 -0.94919,0.29272 -1.24191,0 -0.29273,-0.29272 0.29272,-0.94919 0,-1.24192 -0.29273,-0.29272 -0.9492,0.29273 -1.24192,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24191 -0.0501,-0.0501 -4.5116,0 -4.96765,0 -0.41399,0 -0.82799,0 -1.24192,0 -0.41399,0 -0.94919,0.29272 -1.24191,0 -0.29273,-0.29272 0.29272,-0.94919 0,-1.24191 -0.29884,-0.29884 -4.66883,0.29882 -4.96767,0 -0.29272,-0.29273 0.29272,-0.9492 0,-1.24192 -0.29272,-0.29272 -0.82797,0 -1.24191,0 -0.414,0 -0.82798,0 -1.24192,0 -4.13974,0 -8.27947,0 -12.4192,0 -4.13969,0 -8.27943,0 -12.41916,0 -0.41394,0 -0.82792,0 -1.24192,0 -0.41399,0 -0.94919,0.29272 -1.24191,0 -0.29272,-0.29272 0.29272,-0.94919 0,-1.24192 -0.29272,-0.29272 -0.82793,0 -1.24192,0 -0.41398,0 -0.82792,0 -1.24191,0 -0.41399,0 -0.82793,0 -1.24192,0 -0.41398,0 -0.94919,0.29273 -1.24192,0 -0.29272,-0.29272 0.29273,-0.94919 0,-1.24191 -0.29272,-0.29272 -0.82792,0 -1.24191,0 -0.41398,0 -0.82793,0 -1.24192,0 -0.52438,0 -5.45347,0 -2.48383,0 0.82793,0 3.31177,0 2.48383,0 -11.59122,0 -1.24191,1.24191 -3.72574,-1.24192 -0.04,-0.04 -3.42456,0 -3.72574,0 -0.414,0 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29272 0.29272,0.94919 0,1.24191 -0.29273,0.29273 -0.87166,-0.18513 -1.24192,0 -0.52364,0.26182 -0.71829,0.9801 -1.24192,1.24192 -0.37025,0.18512 -1.24191,0.41398 -1.24191,0 0,-0.41399 1.24191,-0.41399 1.24191,0 0,0.58544 -0.71828,0.98009 -1.24191,1.24192 -0.37026,0.18512 -0.9492,-0.29273 -1.24192,0 -0.29272,0.29272 0,0.82792 0,1.24191 0,2.06989 0,4.13973 0,6.20957 0,0.41399 0.29272,0.94919 0,1.24192 -0.29272,0.29272 -0.94919,-0.29273 -1.24191,0 -0.58545,0.58544 0.58544,1.89838 0,2.48383 -0.29273,0.29272 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.29272,0.29273 -0.94919,-0.29272 -1.24192,0 -0.29272,0.29273 0.18514,0.87166 0,1.24192 -0.26181,0.52364 -0.9801,0.71828 -1.24191,1.24192 -0.18513,0.37031 0.29272,0.94919 0,1.24191 -0.29272,0.29272 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29272 0.29272,0.94919 0,1.24191 -0.29273,0.29273 -0.82798,0 -1.24192,0 0,0.41399 0.18513,0.87166 0,1.24192 -0.26181,0.52368 -0.98009,0.71828 -1.24192,1.24192 -0.18512,0.37031 0.29273,0.94919 0,1.24191 -1.82735,0 -0.94919,-0.29272 -2.48383,1.24197 -0.65386,0.65381 -3.06246,3.3941 -3.72574,3.72574 -0.37031,0.18513 -0.94924,-0.29272 -1.24196,0 -0.29272,0.29272 0,0.82793 0,1.24192 -0.41394,0 -0.9492,-0.29273 -1.24192,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.29883,0.29883 -4.66878,-0.29888 -4.96766,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.41364,0.41365 -2.0702,-0.41363 -2.48383,0 -0.29273,0.29273 0.29272,0.9492 0,1.24192 -0.41409,0.41409 -2.06974,-0.41408 -2.48384,0 -0.29272,0.29272 0.29273,0.94919 0,1.24192 -0.29272,0.29272 -0.87165,-0.18513 -1.24191,0 -0.52363,0.26182 -0.71828,0.9801 -1.24192,1.24191 -0.37026,0.18514 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29272 0.29272,0.9492 0,1.24192 -0.29273,0.29272 -0.87165,-0.18513 -1.24192,0 -0.52363,0.26182 -0.71828,0.9801 -1.24192,1.24191 -0.74051,0.37026 -1.89838,-0.58544 -2.48382,0 -0.29272,0.29273 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.29272,0.94919 0,1.24192 -0.29272,0.29272 -0.87165,-0.18514 -1.24191,0 -1.49031,0.74513 -2.23544,2.98056 -3.72575,3.72574 -0.37026,0.18513 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29273 0.29272,0.9492 0,1.24192 -0.4141,0.41408 -2.06975,-0.41409 -2.48383,0 0,3.31176 0.41398,-0.41399 -1.24192,1.24192 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.41409,0.41409 -2.06975,-0.41409 -2.48383,0 -0.29272,0.29272 0.29272,0.94919 0,1.24192 -0.29272,0.29272 -1.24192,0.41398 -1.24192,0 0,-0.41399 1.65591,0 1.24192,0 -7.03756,0 -0.41399,-0.82794 -2.48383,1.24191 -0.29273,0.29273 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29273 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24192,0 -0.29272,0.29272 0.29273,0.94919 0,1.24191 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29272 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.82798,0 -1.24192,0 -0.41398,0 -0.82797,0 -1.24191,0 -0.41399,0 -1.6559,0 -1.24192,0 0.82793,0 3.31177,0 2.48383,0 -11.59122,0 -1.24191,1.24191 -3.72574,-1.24192 -0.58545,-0.58544 -1.74331,0.37026 -2.48383,0 -0.52364,-0.26182 -0.71829,-0.9801 -1.24191,-1.24191 -0.67376,-0.33685 -4.62786,0.3398 -4.96767,0 -0.29272,-0.29272 0.29273,-0.94919 0,-1.24192 -0.62096,-0.62095 -3.10479,0.62096 -3.72574,0 -0.29273,-0.29272 -0.414,-1.24191 0,-1.24191 0.58544,0 1.82736,1.24191 1.24191,1.24191 -0.9257,0 -1.82932,-0.58735 -2.48383,-1.24191 -0.29272,-0.29273 0.82792,0 1.24192,0 0.41394,0 0.82792,0 1.24191,0 -1.24191,0.41398 -2.48383,0.82792 -3.7258,1.24191 0,0.41399 0.29272,0.9492 0,1.24192 -0.41403,0.41408 -2.06974,-0.41409 -2.48383,0 -0.29272,0.29272 0.29272,0.94919 0,1.24191 -0.29272,0.29272 -0.87161,-0.18513 -1.24192,0 -0.52362,0.26182 -0.71827,0.9801 -1.24191,1.24192 -0.37026,0.18513 -0.94919,-0.29272 -1.24192,0 -0.29272,0.29272 0.29273,0.94919 0,1.24191 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29272 0.18513,0.87165 0,1.24191 -0.26182,0.52364 -0.9801,0.71829 -1.24192,1.24192 -0.18512,0.37027 0.29272,0.94919 0,1.24191 -0.29272,0.29273 -0.94919,-0.29272 -1.24191,0 -0.29272,0.29273 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24192,0 -0.29272,0.29272 0.29273,0.94919 0,1.24192 -0.29272,0.29272 -0.94919,-0.29273 -1.24191,0 0,3.3118 0.41399,-0.41399 -1.24191,1.24191 -0.29273,0.29272 0.18512,0.87166 0,1.24192 -0.26183,0.52364 -0.9801,0.71828 -1.24192,1.24191 -0.18513,0.37026 0.29272,0.9492 0,1.24192 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29272 0.29272,0.94919 0,1.24192 -0.29273,0.29272 -0.9492,-0.29273 -1.24192,0 -0.29272,0.29272 0.18512,0.87165 0,1.24191 -0.52364,1.04727 -1.9602,1.43657 -2.48383,2.48383 -0.18514,0.37026 0.29272,0.9492 0,1.24192 -0.29273,0.29272 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.29272,0.94919 0,1.24192 -0.29272,0.29272 -0.94919,-0.29273 -1.24191,0 -0.29273,0.29272 0.29272,0.94919 0,1.24191 -0.29273,0.29272 -0.9492,-0.29272 -1.24192,0 0,3.31181 0.41399,-0.41394 -1.24192,1.24192 -0.292719,0.29272 0.29273,0.94919 0,1.24191 -0.292719,0.29273 -0.949189,-0.29272 -1.241909,0 -0.29272,0.29273 0.18513,0.87165 0,1.24192 -0.26182,0.52363 -0.9801,0.71828 -1.24192,1.24191 -0.18513,0.37031 0.29272,0.94919 0,1.24191 -0.29272,0.29272 -0.94919,-0.29272 -1.24191,0 -0.29273,0.29272 0.29272,0.9492 0,1.24192 -0.29273,0.29272 -0.9492,-0.29272 -1.24192,0 -0.29272,0.29272 0.29272,0.94918 0,1.24196 -0.29272,0.29271 -1.24192,0.41398 -1.24192,0 0,-0.58549 1.24192,-1.8274 1.24192,-1.24196 0,6.27392 -0.95445,0.95444 -2.48383,2.4839 -0.29272,0.2927 0.29272,0.94915 0,1.24193 -0.29272,0.29271 -0.9492,-0.29278 -1.24192,0 -0.29272,0.29271 0.29272,0.94915 0,1.24186 -0.29272,0.29278 -0.94919,-0.29271 -1.24191,0 0,3.31174 0.41399,-0.41398 -1.24192,1.24193 -0.58544,0.58549 0.58545,1.89838 0,2.48387 -0.29272,0.29271 -0.82792,0 -1.24191,0 -0.41399,0 -1.24191,0.4139 -1.24191,0 0,-0.41406 1.24191,-0.41406 1.24191,0 0,0.58541 -0.71828,0.98007 -1.24191,1.24186 -0.37027,0.18516 -0.82799,0 -1.24192,0 -0.41399,0 -0.82798,0 -1.24191,0 -0.30119,0 -3.68583,-0.0403 -3.72575,0 -0.29272,0.29278 0.29272,0.94923 0,1.24193 -0.29272,0.2927 -0.87166,-0.18516 -1.24192,0 -4.11894,4.1189 1.17089,-0.58541 -2.48383,1.24194 -0.52364,0.26179 -0.71828,0.98006 -1.24191,1.24193 -0.37026,0.18508 -0.9492,-0.29278 -1.24192,0 -0.29272,0.29271 0.29272,0.94915 0,1.24185 -0.41364,0.41365 -2.0702,-0.41356 -2.48383,0 -0.292719,0.29279 0.29272,0.94924 0,1.24194 -0.585448,0.58549 -1.898388,-0.58541 -2.483828,0 -0.292729,0.2927 0.29272,0.94923 0,1.24194 -0.292729,0.2927 -0.949199,-0.29271 -1.241919,0 -0.29272,0.2927 0.29272,0.94914 0,1.24193 -0.585449,0.58541 -1.898389,-0.58549 -2.483879,0 -0.292728,0.2927 0.29272,0.94915 0,1.24194 -0.292728,0.2927 -0.949199,-0.29279 -1.241919,0 -0.29272,0.2927 0.29272,0.94914 0,1.24185 -0.29272,0.29278 -0.94919,-0.29271 -1.24191,0 -0.292729,0.29278 0.29272,0.94923 0,1.24193 -0.292729,0.29271 -0.871608,-0.18507 -1.241919,0 -1.047271,0.52366 -1.436509,1.96021 -2.48383,2.48387 -0.370262,0.18508 -0.949198,-0.29278 -1.241918,0 -0.29272,0.29271 0.29272,0.94915 0,1.24186 -0.29272,0.29278 -0.949191,-0.29271 -1.241911,0 -0.292728,0.29278 0.185127,0.8717 0,1.24193 -0.261822,0.52366 -0.980105,0.71828 -1.241919,1.24194 -0.185127,0.37024 0.29272,0.94923 0,1.24193 -0.29272,0.29271 -0.94919,-0.2927 -1.241919,0 -0.29272,0.29271 0,0.82788 0,1.24194 -0.413937,0 -0.94919,-0.29279 -1.24191,0 -0.585449,0.58541 0.58544,1.89838 0,2.48379 -0.29272,0.2927 -0.949199,-0.29271 -1.241919,0 -0.29272,0.2927 0.29272,0.94923 0,1.24193 -0.29272,0.29271 -0.94919,-0.2927 -1.24191,0 -0.292729,0.29271 0.185126,0.87162 0,1.24194 -0.261822,0.52357 -0.980106,0.71827 -1.241919,1.24185 -0.185127,0.37032 0.29272,0.94923 0,1.24194 -0.29272,0.2927 -0.949191,-0.29271 -1.241919,0 -0.29272,0.2927 0.292728,0.94923 0,1.24193 -0.29272,0.2927 -0.94919,-0.2927 -1.241911,0 -0.29272,0.2927 0.292721,0.94915 0,1.24194 -0.29272,0.2927 -0.949198,-0.29279 -1.241918,0 -0.292721,0.2927 0.29272,0.94915 0,1.24185 -0.292721,0.29278 -0.949191,-0.2927 -1.241911,0 -0.292728,0.29278 0,0.82804 0,1.24193 -1.241919,0.82796 -2.483838,1.65592 -3.725748,2.48387 z'}));SVGs.plains=_react2.default.createElement('g',{style:style},_react2.default.createElement('path',{d:'m 273.23532,567.10572 c 0,0.31226 -0.31224,0.93681 0,0.93681 0.3123,0 0.3123,-0.93681 0,-0.93681 -0.31224,0 -0.22082,0.71601 0,0.93681 0.22547,0.22542 3.52187,-0.22543 3.74734,0 0.22083,0.22082 -0.22082,0.71603 0,0.93683 0.4416,0.44164 1.43199,-0.44163 1.87364,0 0.22083,0.22081 -0.22082,0.71601 0,0.93684 0.22083,0.2208 0.71602,-0.22083 0.9368,0 0.22082,0.2208 -0.22078,0.716 0,0.93681 0.22082,0.22083 0.71607,-0.22081 0.93685,0 0.22082,0.22083 -0.22078,0.71603 0,0.93684 0.22082,0.2208 0.71602,-0.22081 0.93684,0 0.22083,0.2208 -0.22082,0.716 0,0.93683 0.22083,0.2208 0.65753,-0.13966 0.93685,0 0.39499,0.19751 0.5418,0.73933 0.93679,0.93683 0.27933,0.13965 0.71603,-0.22082 0.93685,0 0.22078,0.22081 -0.22082,0.71601 0,0.93681 0.4416,0.44164 1.43205,-0.44162 1.87364,0 0.22083,0.22083 -0.22082,0.71604 0,0.93684 0.22083,0.22081 0.65753,-0.13966 0.93685,0 0.39499,0.19751 0.62455,0.62455 0.9368,0.93684 0.3123,0.31226 0.73935,0.54182 0.93684,0.93681 0.13966,0.27932 0,0.62455 0,0.93684 0.31225,0 0.71603,-0.22081 0.93685,0 0.22082,0.22079 -0.22082,0.716 0,0.93683 0.22082,0.2208 0.71602,-0.22083 0.9368,0 0.22082,0.2208 -0.22078,0.716 0,0.93681 0.22082,0.22083 0.71602,-0.22081 0.93684,0 0.22083,0.22083 -0.13966,0.65753 0,0.93683 0.1975,0.39502 0.73935,0.54183 0.9368,0.93684 0.13966,0.2793 -0.22078,0.71601 0,0.93683 0.22082,0.22081 0.71607,-0.22082 0.93684,0 0.44165,0.44161 -0.27927,1.31502 0,1.87365 0.1975,0.39499 0.73935,0.54182 0.93685,0.93684 0.27927,0.5586 -0.27932,1.31504 0,1.87364 0.1975,0.39501 0.7393,0.54182 0.9368,0.93684 0.27932,0.5586 -0.27928,1.31504 0,1.87364 0.19749,0.39502 0.73935,0.54182 0.93684,0.93684 0.37473,0.74946 -0.37472,2.06102 0,2.81048 0.1975,0.39499 0.73935,0.54182 0.93685,0.93684 0.32353,0.6471 -0.32889,4.35528 0,4.68412 0.22077,0.22083 0.71597,-0.2208 0.93685,0 0.2563,0.25633 -0.25416,3.23911 0,3.74732 0.19744,0.39501 0.7393,0.54182 0.93679,0.93683 0.13967,0.27931 0,0.62455 0,0.93684 0,0.31226 0.22083,0.71601 0,0.93681 -0.22082,0.22083 -0.71602,-0.2208 -0.93679,0 -0.30561,0.30556 0.37702,4.38146 0,4.68415 0,2.85645 0.94945,0.0126 1.87364,0.93682 0.22077,0.22082 -0.22082,0.71602 0,0.93683 0.31235,0.31235 1.56129,-0.31236 1.87364,0 0.22083,0.22083 -0.22082,0.71601 0,0.93683 0.31235,0.31236 1.5613,-0.31235 1.87365,0 0.22082,0.22081 -0.22083,0.71601 0,0.93684 0.22082,0.2208 0.62454,0 0.93684,0 0.31225,0 0.62455,0 0.9368,0 2.49824,0 -0.31225,-0.31229 0.93684,0.93681 0.44165,0.44163 1.43205,-0.44161 1.87365,0 0.22082,0.22083 -0.22078,0.71603 0,0.93683 0.46845,0.46841 2.34209,-0.4684 2.81049,0 0.22082,0.22081 -0.22083,0.71601 0,0.93684 0.44165,0.44161 1.31504,-0.27932 1.87369,0 0.39494,0.19749 0.5418,0.73933 0.93681,0.93681 0.2793,0.13966 0.71601,-0.2208 0.93681,0 0.22083,0.22083 -0.2208,0.71603 0,0.93684 0.44163,0.44163 1.43204,-0.44163 1.87367,0 0.2208,0.2208 -0.22082,0.716 0,0.93683 0.46841,0.46841 2.34206,-0.46843 2.81048,0 0.22081,0.22081 -0.22083,0.71601 0,0.93683 0.31236,0.31236 1.5613,-0.31237 1.87365,0 0.22083,0.22081 -0.2208,0.71602 0,0.93682 0.31236,0.31236 1.56129,-0.31236 1.87367,0 0.2208,0.22083 -0.22082,0.71603 0,0.93683 0.31236,0.31236 1.56129,-0.31235 1.87365,0 0.2208,0.22081 -0.22081,0.71601 0,0.93684 0.2208,0.2208 0.65751,-0.13966 0.93683,0 0.39499,0.19748 0.54182,0.73932 0.93682,0.93681 0.55862,0.27932 1.43203,-0.44161 1.87366,0 0.22081,0.22083 -0.22082,0.71603 0,0.93684 0.44163,0.44163 1.31504,-0.27931 1.87365,0 0.39502,0.1975 0.54182,0.73932 0.93683,0.93683 0.55861,0.2793 1.31505,-0.27933 1.87365,0 0.39501,0.19748 0.54184,0.73933 0.93684,0.93681 0.50823,0.25412 3.49098,-0.25633 3.74731,0 1.87365,1.87367 -5.93325,0.93684 2.81049,0.93684 -0.31229,-0.31227 -0.93684,-0.49521 -0.93684,-0.93684 0,-0.62455 1.43204,0.44163 1.87367,0 0.2208,-0.2208 -0.22082,-0.71601 0,-0.93681 0.2208,-0.22083 0.71601,0.2208 0.93681,0 0.22083,-0.22083 -0.2208,-0.71603 0,-0.93683 0.22083,-0.22081 0.71603,0.2208 0.93684,0 0.2208,-0.22081 -0.22081,-0.71601 0,-0.93684 0.44163,-0.44161 1.43204,0.44163 1.87367,0 0.2208,-0.2208 -0.22083,-0.71601 0,-0.93681 0.31236,-0.31238 1.56129,0.31235 1.87364,0 0.22081,-0.22083 -0.2208,-0.71603 0,-0.93684 0.22081,-0.2208 0.71601,0.22081 0.93684,0 0.2208,-0.2208 -0.22083,-0.716 0,-0.93683 0.2208,-0.2208 0.65751,0.13966 0.93681,0 0.39502,-0.19751 0.54184,-0.73933 0.93684,-0.93682 0.2793,-0.13966 0.716,0.22081 0.93683,0 0.2208,-0.22082 -0.22083,-0.71602 0,-0.93683 0.44161,-0.44163 1.43202,0.44163 1.87365,0 0.22083,-0.22083 -0.22081,-0.71603 0,-0.93683 0.44163,-0.44163 1.43204,0.44163 1.87367,0 0.2208,-0.22081 -0.22083,-0.71601 0,-0.93684 0.4416,-0.44161 1.43201,0.44163 1.87364,0 0.22081,-0.2208 -0.2208,-0.71601 0,-0.93681 0.44164,-0.44163 1.43204,0.44161 1.87365,0 0.22083,-0.22083 -0.2208,-0.71603 0,-0.93684 0.22545,-0.22542 3.52189,0.22543 3.74732,0 0.22083,-0.2208 -0.22081,-0.716 0,-0.93683 0.22083,-0.2208 0.65753,0.13966 0.93683,0 0.395,-0.19749 0.54182,-0.73933 0.93684,-0.93681 0.2793,-0.13967 0.71601,0.2208 0.93681,0 0.22082,-0.22083 -0.2208,-0.71603 0,-0.93684 0.31268,-0.31266 1.56099,0.31267 1.87367,0 0.2208,-0.22082 -0.22083,-0.716 0,-0.93683 0.31235,-0.31236 1.56129,0.31235 1.87365,0 0.22082,-0.22081 -0.22081,-0.71601 0,-0.93683 0.22082,-0.22081 0.65753,0.13966 0.93683,0 0.39499,-0.19749 0.54182,-0.73933 0.93683,-0.93682 0.27931,-0.13966 0.71602,0.2208 0.93681,0 0.22083,-0.22083 -0.22079,-0.71603 0,-0.93683 0.22083,-0.22081 0.71604,0.2208 0.93684,0 0.22081,-0.22081 -0.2208,-0.71601 0,-0.93684 0.22081,-0.2208 0.71601,0.22083 0.93684,0 0.2208,-0.2208 -0.22083,-0.71601 0,-0.93681 0.2208,-0.22082 0.716,0.2208 0.93681,0 0.22082,-0.22082 -0.22081,-0.71603 0,-0.93684 0.22082,-0.2208 0.71603,0.22081 0.93684,0 0.2208,-0.2208 -0.22081,-0.716 0,-0.93683 0.2208,-0.2208 0.62454,0 0.93683,0 0,-0.31226 -0.22083,-0.71601 0,-0.93681 0.2208,-0.22083 0.71601,0.2208 0.93683,0 0.22081,-0.22083 -0.13966,-0.65753 0,-0.93684 0.19749,-0.39501 0.73931,-0.54182 0.93681,-0.93683 0.13967,-0.27931 -0.2208,-0.71601 0,-0.93684 0.22083,-0.2208 0.71604,0.22083 0.93684,0 0.22081,-0.2208 -0.2208,-0.71601 0,-0.93681 0.22081,-0.22082 0.71601,0.2208 0.93683,0 0.22081,-0.22082 -0.22082,-0.71603 0,-0.93683 0.22081,-0.22081 0.71601,0.2208 0.93682,0 0.22082,-0.22081 -0.22081,-0.71601 0,-0.93684 0.22082,-0.2208 0.71603,0.22083 0.93683,0 0.2208,-0.2208 -0.2208,-0.716 0,-0.93681 0.2208,-0.22083 0.71601,0.22081 0.93684,0 0.2208,-0.22083 -0.22083,-0.71603 0,-0.93684 0.2208,-0.2208 0.716,0.22081 0.93681,0 0.22083,-0.2208 -0.22081,-0.716 0,-0.93683 0.22083,-0.2208 0.71603,0.22083 0.93683,0 0.22083,-0.2208 -0.13964,-0.65751 0,-0.93683 0.62392,-1.24784 1.24973,-0.62581 1.87367,-1.87365 0.13964,-0.2793 -0.22082,-0.71601 0,-0.93684 0.22081,-0.2208 0.71601,0.22083 0.93681,0 0.22083,-0.2208 -0.2208,-0.716 0,-0.93681 0.22083,-0.22082 0.71604,0.22081 0.93684,0 0.2208,-0.22082 -0.13966,-0.65753 0,-0.93683 0.19751,-0.39502 0.62455,-0.62455 0.93684,-0.93684 0,-0.31226 -0.13967,-0.6575 0,-0.93681 0.19748,-0.39501 0.73932,-0.54184 0.93681,-0.93683 0.13966,-0.27931 -0.13964,-0.65754 0,-0.93684 0.1975,-0.39499 0.73932,-0.54182 0.93683,-0.93683 0.13967,-0.27931 -0.13966,-0.65752 0,-0.93681 0.19751,-0.39502 0.73933,-0.54185 0.93684,-0.93684 0.13964,-0.2793 -0.13967,-0.65751 0,-0.93684 0.1975,-0.39498 0.73933,-0.54181 0.93681,-0.93681 0.13966,-0.27932 -0.13964,-0.65753 0,-0.93683 0.1975,-0.39501 0.73933,-0.54182 0.93683,-0.93684 0.27931,-0.5586 -0.2793,-1.31504 0,-1.87364 0.19751,-0.39502 0.62455,-0.62455 0.93684,-0.93683 0,-0.31229 -0.13967,-0.65752 0,-0.93684 0.19751,-0.39499 0.73932,-0.54182 0.93683,-0.93681 0.2793,-0.55863 -0.44163,-1.43204 0,-1.87368 0.22081,-0.2208 0.71601,0.22083 0.93681,0 0.44164,-0.44162 -0.4416,-1.43201 0,-1.87364 0.22083,-0.22083 0.71603,0.2208 0.93684,0 0.46841,-0.46843 -0.46841,-2.34207 0,-2.81048 0.2208,-0.22083 0.71601,0.2208 0.93684,0 0.4416,-0.44163 -0.27933,-1.31504 0,-1.87367 0.19748,-0.39499 0.73932,-0.54182 0.93681,-0.93681 0.27932,-0.55863 -0.44161,-1.43204 0,-1.87367 0.22082,-0.22081 0.71603,0.22083 0.93683,0 0.44163,-0.44163 -0.2793,-1.31505 0,-1.87365 0.19751,-0.39502 0.73933,-0.54184 0.93683,-0.93683 0.13965,-0.27931 -0.22082,-0.71601 0,-0.93684 0.22081,-0.2208 0.71601,0.22083 0.93684,0 0.44161,-0.44161 -0.44163,-1.43201 0,-1.87365 0.22081,-0.2208 0.71601,0.22081 0.93681,0 0.22083,-0.2208 -0.13964,-0.65751 0,-0.93683 0.19751,-0.39499 0.73933,-0.54182 0.93684,-0.93682 0.13966,-0.27932 -0.22081,-0.71602 0,-0.93683 0.2208,-0.22083 0.71601,0.22081 0.93683,0 0.2208,-0.22083 -0.22082,-0.71603 0,-0.93683 0.2208,-0.22081 0.71601,0.2208 0.93681,0 0.22083,-0.22081 -0.13963,-0.65751 0,-0.93684 0.62395,-1.24783 1.24975,-0.62581 1.87367,-1.87364 0.13964,-0.27931 -0.22083,-0.71601 0,-0.93684 0.22081,-0.2208 0.71601,0.22083 0.93682,0 0.22082,-0.2208 -0.13965,-0.65751 0,-0.93681 0.1975,-0.39501 0.73933,-0.54184 0.93683,-0.93684 0.13966,-0.2793 -0.2208,-0.716 0,-0.93683 0.22083,-0.2208 0.71603,0.22083 0.93683,0 0.22081,-0.2208 -0.2208,-0.71601 0,-0.93683 0.22081,-0.22081 0.71602,0.22082 0.93684,0 0.2208,-0.22081 -0.13966,-0.65752 0,-0.93682 0.62415,-1.24835 1.24947,-0.62531 1.87365,-1.87367 0.13966,-0.2793 -0.22081,-0.71601 0,-0.93681 0.2208,-0.22082 0.716,0.2208 0.93683,0 0.2208,-0.22082 -0.22083,-0.71603 0,-0.93683 0.2208,-0.22081 0.71601,0.2208 0.93682,0 0.22082,-0.22081 -0.22081,-0.71601 0,-0.93684 0.22082,-0.2208 0.71602,0.22083 0.93683,0 0.22083,-0.2208 -0.22081,-0.716 0,-0.93681 0.22083,-0.22083 0.71601,0.22081 0.93683,0 0.22081,-0.22083 -0.22082,-0.71603 0,-0.93684 0.22081,-0.22082 0.65751,0.13965 0.93684,0 0.39499,-0.1975 0.54182,-0.73932 0.93681,-0.93683 0.27932,-0.13966 0.71603,0.2208 0.93683,0 0.22081,-0.22081 -0.2208,-0.71601 0,-0.93683 0.22081,-0.22081 0.71601,0.22082 0.93684,0 0.2208,-0.22081 -0.22083,-0.71602 0,-0.93681 0.2208,-0.22083 0.65751,0.13963 0.93681,0 0.39501,-0.19751 0.54184,-0.73933 0.93684,-0.93684 0.2793,-0.13966 0.716,0.2208 0.93683,0 0.22081,-0.22081 -0.22083,-0.71601 0,-0.93684 0.44163,-0.44161 1.43202,0.44164 1.87365,0 0.22083,-0.2208 -0.2208,-0.716 0,-0.93681 0.22543,-0.22545 3.52189,0.22543 3.74732,0 0.2208,-0.22082 -0.22081,-0.71603 0,-0.93684 0.29008,-0.29008 4.39406,0.29009 4.68414,0 0.22081,-0.22079 -0.22082,-0.716 0,-0.93683 0.19151,-0.19151 2.43903,0.18572 2.81049,0 0.39499,-0.1975 0.54182,-0.73933 0.93681,-0.93683 0.27932,-0.13964 0.71603,0.22083 0.93684,0 0.2208,-0.22081 -0.22081,-0.71601 0,-0.93681 0.44162,-0.44163 1.43203,0.44163 1.87364,0 0.22083,-0.22083 -0.2208,-0.71604 0,-0.93684 0.46843,-0.4684 2.34207,0.46841 2.81051,0 0.2208,-0.22081 -0.22083,-0.71601 0,-0.93683 0.2208,-0.22081 0.62455,0 0.93681,0 0.93683,0 1.87367,0 2.81048,0 0.62457,0 -1.2491,0 -1.87365,0 -0.31228,0 0.62455,0 0.93684,0 0.34403,0 3.70962,0.0377 3.74731,0 0.22081,-0.22081 -0.22082,-0.71601 0,-0.93682 0.22081,-0.22082 0.62455,0 0.93681,0 0.31229,0 0.62456,0 0.93684,0 1.56138,0 3.12277,0 4.68413,0 0.31229,0 0.62457,0 0.93683,0 0.31229,0 0.65754,0.13964 0.93684,0 0.39499,-0.19751 0.54182,-0.73932 0.93683,-0.93683 0.59101,-0.29551 4.09313,0.2955 4.68413,0 0.39502,-0.19751 0.54182,-0.73933 0.93683,-0.93684 0.58881,-0.2944 3.15849,0.29441 3.74732,0 0.39499,-0.19748 0.54182,-0.73933 0.93682,-0.93681 0.24633,-0.12318 3.25743,0 3.74731,0 1.87367,0 3.74732,0 5.62097,0 0.4219,0 2.52538,0.14254 2.8105,0 0.39499,-0.1975 0.54182,-0.73933 0.93681,-0.93683 0.28511,-0.14256 2.38858,0 2.81048,0 2.49822,0 4.99642,0 7.49464,0 4.99641,0 9.99282,0 14.98924,0 0.22722,0 2.78037,-0.0301 2.81048,0 0.22083,0.2208 -0.22081,0.716 0,0.93683 0.22083,0.22081 0.62457,0 0.93683,0 2.34904,0 4.2072,-0.0875 6.5578,0.93681 0,-2.49819 -0.31228,0.31229 0.93684,-0.93681 0.2208,-0.22083 -0.22083,-0.71603 0,-0.93683 0.2208,-0.22082 0.716,-0.22082 0.93681,0 0.22083,0.2208 -0.22081,0.716 0,0.93683 0.22083,0.22081 0.71603,-0.22083 0.93683,0 0.22083,0.22081 -0.2208,0.71601 0,0.93681 0.44163,0.44163 1.43204,-0.44161 1.87367,0 0.22081,0.22083 -0.22082,0.71604 0,0.93684 0.22081,0.2208 0.71601,-0.2208 0.93682,0 0.22082,0.2208 -0.22081,0.71601 0,0.93683 0.22082,0.22081 0.71602,-0.22082 0.93683,0 0.2208,0.22081 -0.22081,0.71601 0,0.93682 0.2208,0.22082 0.71601,-0.22081 0.93684,0 0.2208,0.22082 -0.22083,0.71602 0,0.93683 0.2208,0.2208 0.716,-0.22081 0.93681,0 0.44163,0.44163 -0.44161,1.43204 0,1.87365 0.22082,0.22083 0.71603,-0.22081 0.93683,0 0.22081,0.22083 -0.2208,0.71603 0,0.93683 0.22081,0.22083 0.71601,-0.2208 0.93683,0 0.22081,0.22083 -0.13966,0.65754 0,0.93683 0.19751,0.395 0.73933,0.54183 0.93684,0.93684 0.13964,0.2793 -0.22082,0.71601 0,0.93681 0.22081,0.22083 0.71601,-0.2208 0.93681,0 0.22083,0.22083 -0.2208,0.71603 0,0.93684 0.22083,0.2208 0.71603,-0.22081 0.93684,0 0.2208,0.2208 -0.22081,0.71601 0,0.93684 0.2208,0.22079 0.71601,-0.22083 0.93684,0 0.22079,0.22079 -0.22083,0.716 0,0.93681 0.4416,0.44163 1.43201,-0.44161 1.87364,0 0.2208,0.22082 -0.22081,0.71602 0,0.93683 0.44163,0.44163 1.43204,-0.44163 1.87365,0 0.22083,0.2208 -0.22081,0.71601 0,0.93683 0.0301,0.0301 2.58328,0 2.8105,0 0.31226,0 0.71601,0.22081 0.93681,0 0.22083,-0.22082 -0.2208,-0.71603 0,-0.93683 0.22083,-0.22081 0.62455,0 0.93684,0 1.56138,0 3.12277,0 4.68412,0 0.31229,0 0.71604,0.2208 0.93684,0 0.22083,-0.22081 -0.2208,-0.71601 0,-0.93683 0.22083,-0.22081 0.62455,0 0.93684,0 0.31226,0 0.62455,0 0.93683,0 0.2272,0 2.78035,0.0301 2.81048,0 0.22081,-0.22081 -0.22083,-0.71602 0,-0.93681 0.29009,-0.29009 4.39405,0.29008 4.68413,0 0.22083,-0.22083 -0.2208,-0.71604 0,-0.93684 0.46843,-0.46841 2.34208,0.4684 2.81048,0 0.22083,-0.22081 -0.2208,-0.71601 0,-0.93684 0.44163,-0.44161 1.31505,0.27933 1.87367,0 0.39499,-0.19748 0.54182,-0.73932 0.93681,-0.93681 0.55863,-0.27932 1.43204,0.44161 1.87367,0 0.22081,-0.22082 -0.2208,-0.71603 0,-0.93684 0.44164,-0.44162 1.43204,0.44164 1.87365,0 0.22083,-0.22079 -0.22081,-0.716 0,-0.93683 0.44163,-0.44163 1.31504,0.27931 1.87367,0 0.39499,-0.1975 0.54182,-0.73933 0.93681,-0.93683 0.55863,-0.27931 1.43204,0.44163 1.87367,0 0.22081,-0.22081 -0.22082,-0.71601 0,-0.93681 0.31236,-0.31236 1.56129,0.31235 1.87365,0 0.22082,-0.22083 -0.22081,-0.71604 0,-0.93684 0.44163,-0.44163 1.43204,0.44163 1.87367,0 0.2208,-0.22081 -0.22083,-0.71601 0,-0.93683 0.44161,-0.44161 1.31504,0.27932 1.87364,0 0.39502,-0.19749 0.54183,-0.73933 0.93684,-0.93682 0.5586,-0.27932 1.43201,0.44161 1.87364,0 0.22083,-0.22082 -0.2208,-0.71603 0,-0.93683 0.46844,-0.46841 2.34208,0.4684 2.81049,0 0.22082,-0.2208 -0.22081,-0.71601 0,-0.93684 0.44163,-0.44161 1.43204,0.44163 1.87367,0 0.2208,-0.2208 -0.22083,-0.716 0,-0.93681 0.4684,-0.46843 2.34205,0.46841 2.81048,0 0.2208,-0.22083 -0.22083,-0.71603 0,-0.93683 0.4684,-0.46842 2.34208,0.4684 2.81048,0 0.2208,-0.22082 -0.22081,-0.71601 0,-0.93683 0.46841,-0.46841 2.34208,0.46841 2.81048,0 0.22081,-0.2208 -0.2208,-0.71601 0,-0.93684 0.44163,-0.4416 1.31504,0.27933 1.87365,0 0.39502,-0.19748 0.54184,-0.73932 0.93683,-0.93681 0.37144,-0.18572 2.61898,0.19151 2.81049,0 0.22082,-0.22082 -0.22081,-0.71603 0,-0.93683 0.32886,-0.32884 4.03705,0.32356 4.68415,0 0.39499,-0.19751 0.54182,-0.73933 0.93683,-0.93684 0.2793,-0.13964 0.62455,0 0.93681,0 0.31229,0 0.62455,0 0.93684,0 0.93683,0 1.87365,0 2.81048,0 0.62455,0 -1.2491,0 -1.87365,0 -0.31228,0 0.62455,0 0.93682,0 0.31228,0 0.62454,0 0.93683,0 0.31229,0 0.65753,0.13967 0.93683,0 0.395,-0.19748 0.54183,-0.73933 0.93681,-0.93681 0.55863,-0.27933 1.31505,0.2793 1.87368,0 0.39499,-0.1975 0.54182,-0.73933 0.93683,-0.93683 0.37144,-0.18572 2.61895,0.19151 2.81048,0 0.22081,-0.22081 -0.22083,-0.71601 0,-0.93684 0.22081,-0.2208 0.62455,0 0.93681,0 0.31229,0 0.62458,0 0.93684,0 1.56139,0 3.12277,0 4.68415,0 0.31226,0 0.62455,0 0.93681,0 0.31229,0 0.65754,0.13966 0.93684,0 0.39499,-0.19751 0.54182,-0.73932 0.93683,-0.93683 0.28511,-0.14254 2.38858,0 2.81048,0 2.18594,0 4.37187,0 6.5578,0 0.31226,0 0.62455,0 0.93684,0 0.31226,0 0.716,0.22082 0.93681,0 0.22082,-0.22081 -0.22081,-0.71601 0,-0.93681 0.32886,-0.32887 4.03703,0.32353 4.68414,0 0.39499,-0.19752 0.54185,-0.73933 0.93684,-0.93684 0.50822,-0.25412 3.49099,0.25633 3.74729,0 0.22082,-0.2208 -0.22078,-0.71601 0,-0.93684 0.19152,-0.19151 2.43903,0.18575 2.81049,0 0.39499,-0.19748 0.54185,-0.73932 0.93684,-0.93681 0.37141,-0.18572 2.61897,0.19151 2.81049,0 0.22083,-0.22082 -0.22082,-0.71603 0,-0.93683 0.2563,-0.25634 3.23907,0.25411 3.74729,0 0.39499,-0.19751 0.54185,-0.73933 0.93684,-0.93684 0.64711,-0.32353 4.3553,0.32886 4.68414,0 0.22082,-0.2208 -0.22083,-0.71601 0,-0.93681 0.31235,-0.31238 1.56129,0.31236 1.87364,0 0.22082,-0.22083 -0.22083,-0.71603 0,-0.93683 0.3124,-0.31236 1.56129,0.31235 1.87369,0 0.22078,-0.22083 -0.22082,-0.71601 0,-0.93684 0.31235,-0.31235 1.56129,0.31236 1.87365,0 0.22082,-0.2208 -0.22083,-0.71601 0,-0.93683 0.46839,-0.46841 2.34204,0.46843 2.81048,0 0.0937,-0.0937 0.0937,-2.71678 0,-2.81048 -0.46844,-0.46841 -2.34209,0.46842 -2.81048,0 -0.22083,-0.22081 0.22082,-0.71601 0,-0.93682 -0.22083,-0.22083 -0.65753,0.13965 -0.93685,0 -0.24875,-0.12437 -2.68609,-2.56175 -2.81049,-2.8105 -0.27932,-0.55861 0.44165,-1.43202 0,-1.87365 -0.22083,-0.2208 -0.71602,0.22081 -0.9368,0 -0.46839,-0.4684 0.4684,-2.34207 0,-2.81048 -0.22082,-0.2208 -0.71602,0.2208 -0.93684,0 -0.22542,-0.22543 0.22542,-3.52189 0,-3.74732 -0.22083,-0.2208 -0.71603,0.22083 -0.9368,0 -0.22082,-0.2208 0,-0.62455 0,-0.93683 0,-1.56136 0,-3.12275 0,-4.68413 0,-0.31229 0,-0.62455 0,-0.93683 0,-0.31227 -0.22082,-0.71601 0,-0.93681 0.22077,-0.22083 0.71597,0.2208 0.9368,0 0.46845,-0.46843 -0.4684,-2.34209 0,-2.81051 0.22082,-0.22081 0.71602,0.22083 0.93684,0 0.22078,-0.22081 -0.22082,-0.71601 0,-0.93681 0.22078,-0.22083 0.71597,0.2208 0.9368,0 0.22082,-0.22083 -0.22083,-0.71604 0,-0.93684 0.22082,-0.2208 0.71602,0.2208 0.93685,0 0.22082,-0.2208 -0.22083,-0.71601 0,-0.93683 0.22082,-0.22081 0.71602,0.22082 0.93684,0 0.22078,-0.22081 -0.22082,-0.71601 0,-0.93681 0.22078,-0.22083 0.71597,0.2208 0.9368,0 0.22082,-0.22083 -0.22083,-0.71604 0,-0.93684 0.22082,-0.22083 0.65752,0.13964 0.93685,0 0.39499,-0.19751 0.5418,-0.73933 0.93679,-0.93684 0.27932,-0.13963 0.71607,0.22083 0.93685,0 0.22082,-0.2208 -0.22078,-0.716 0,-0.93683 0.4684,-0.46841 2.34209,0.46843 2.81049,0 0.22082,-0.2208 -0.22083,-0.71601 0,-0.93681 0.22082,-0.22083 0.62454,0 0.93684,0 0.31225,0 0.62455,0 0.9368,0 0.22721,0 2.78037,0.0301 2.81049,0 0.22082,-0.22083 -0.22083,-0.71603 0,-0.93684 0.22547,-0.22542 3.52186,0.22543 3.74733,0 0.22083,-0.2208 -0.22082,-0.716 0,-0.93683 0.55988,-0.55986 1.87365,1.01261 1.87365,-0.93681 0,-0.31229 -0.93685,-0.31229 -0.93685,0 0,0.31226 0.71602,0.2208 0.93685,0 0.22082,-0.22083 -0.22083,-0.71604 0,-0.93684 0.22082,-0.2208 0.71602,0.2208 0.93684,0 0.4416,-0.44163 -0.44165,-1.43204 0,-1.87364 0.22078,-0.22083 0.71603,0.2208 0.9368,0 0.46845,-0.46843 -0.4684,-2.34208 0,-2.81051 0.22082,-0.2208 0.71602,0.22083 0.93685,0 0.19152,-0.19151 -0.18571,-2.43902 0,-2.81048 0.19749,-0.39499 0.73935,-0.54182 0.93684,-0.93681 0.18571,-0.37146 -0.19152,-2.61898 0,-2.81051 0.49372,-0.49373 1.17539,-0.93681 1.87365,-0.93681 0.44159,0 -0.4952,0.93681 -0.93685,0.93681 -0.31225,0 -0.22083,-0.716 0,-0.93681 0.22082,-0.22083 0.71602,0.22081 0.93685,0 0.22077,-0.22083 -0.22083,-0.71603 0,-0.93683 0.22077,-0.22081 0.71602,0.2208 0.93684,0 0.22078,-0.22081 -0.22082,-0.71601 0,-0.93684 0.31235,-0.31236 1.56129,0.31238 1.87365,0 0.22082,-0.2208 -0.22083,-0.71601 0,-0.93681 0.22082,-0.22083 0.65752,0.13964 0.93679,0 0.39499,-0.19751 0.54185,-0.73933 0.93685,-0.93683 0.27932,-0.13967 0.71602,0.2208 0.93679,0 0.22088,-0.22081 -0.22077,-0.71602 0,-0.93684 0.44165,-0.44163 1.43205,0.44163 1.8737,0 0.22082,-0.2208 -0.22083,-0.71601 0,-0.93681 0.22542,-0.22545 3.52186,0.22542 3.74733,0 0.22078,-0.22083 -0.22082,-0.71603 0,-0.93684 0.22542,-0.22542 3.52187,0.22543 3.74729,0 0.22082,-0.22082 -0.22083,-0.71603 0,-0.93683 0.4416,-0.44163 1.31504,0.2793 1.87364,0 0.39499,-0.19751 0.62455,-0.62455 0.93685,-0.93684 0.31225,0 0.65752,0.13967 0.93679,0 0.39505,-0.19748 0.54186,-0.73933 0.93685,-0.93681 0.27932,-0.13966 0.65752,0.13964 0.93685,0 0.39499,-0.1975 0.5418,-0.73933 0.93679,-0.93683 0.27933,-0.13967 0.65753,0.13966 0.93685,0 0.39499,-0.19751 0.5418,-0.73933 0.93685,-0.93684 0.27927,-0.13964 0.71602,0.22083 0.93679,0 0.22083,-0.2208 -0.22077,-0.71601 0,-0.93681 0.44165,-0.44163 1.43205,0.44161 1.8737,0 0.22077,-0.22083 -0.22083,-0.71603 0,-0.93683 0.22077,-0.22083 0.71597,0.2208 0.93679,0 0.22083,-0.22083 -0.22082,-0.71601 0,-0.93684 0.19153,-0.19151 2.43903,0.18572 2.81049,0 0.39499,-0.19751 0.54185,-0.73933 0.93685,-0.93684 0.59101,-0.2955 4.09312,0.29553 4.68413,0 0.39499,-0.19748 0.5418,-0.73932 0.93685,-0.93681 0.55859,-0.27932 1.43199,0.44161 1.87364,0 0.22077,-0.22082 -0.22083,-0.71603 0,-0.93683 0.22077,-0.22081 0.71602,0.2208 0.93685,0 0.22077,-0.22081 -0.22083,-0.71601 0,-0.93683 0.31235,-0.31236 1.56129,0.31237 1.87364,0 0.22077,-0.22081 -0.22083,-0.71602 0,-0.93682 1.59687,-1.59686 1.87364,5.34594 1.87364,-2.81048 0,-2.26196 -2.14801,5.23281 0,0.93681 0.12317,-0.24632 0,-3.25741 0,-3.74731 0,-2.81048 0,-5.62097 0,-8.43145 0,-0.2272 0.0301,-2.78034 0,-2.81048 -0.22082,-0.22081 -0.71602,0.2208 -0.93685,0 -0.4416,-0.44163 0.44165,-1.43204 0,-1.87365 -0.55987,-0.55989 -1.87364,1.01258 -1.87364,-0.93683 0,-0.31229 0.93685,0.31226 0.93685,0 0,-0.31229 -0.62455,0 -0.93685,0 -0.31225,0 -0.62455,0 -0.93679,0 -2.59426,0 0.72056,-0.93684 -1.8737,-0.93684 -0.34405,0 -3.70961,0.0377 -3.74733,0 -0.22078,-0.2208 0.22082,-0.716 0,-0.93683 -0.4684,-0.46841 -2.34204,0.46842 -2.81044,0 -0.22083,-0.22081 0.22082,-0.71601 0,-0.93681 -0.46845,-0.46843 -2.34209,0.4684 -2.81049,0 -0.22083,-0.22083 0.22082,-0.71604 0,-0.93684 -0.22083,-0.2208 -0.62455,0 -0.93685,0 -0.31225,0 -0.62455,0 -0.93679,0 -2.49825,0 0.31224,0.31229 -0.93685,-0.93683 -0.44165,-0.44161 -1.43205,0.44163 -1.87364,0 -0.22083,-0.22081 0.22077,-0.71601 0,-0.93681 -0.19153,-0.19154 -2.43908,0.18571 -2.81049,0 -0.395,-0.19751 -0.54186,-0.73933 -0.93685,-0.93684 -0.5586,-0.2793 -1.31505,0.2793 -1.87364,0 -0.395,-0.19751 -0.54186,-0.73933 -0.93685,-0.93684 -0.5586,-0.2793 -1.43204,0.44164 -1.87364,0 -0.22083,-0.2208 0.22082,-0.716 0,-0.93683 -0.31266,-0.31266 -1.56099,0.31268 -1.87364,0 -0.22083,-0.2208 0.22077,-0.71601 0,-0.93681 -0.4684,-0.46843 -2.3421,0.4684 -2.81049,0 -0.22083,-0.22083 0.22077,-0.71603 0,-0.93684 -0.46845,-0.4684 -2.3421,0.46841 -2.81049,0 -0.22083,-0.2208 0.22082,-0.716 0,-0.93683 -0.44165,-0.44161 -1.31505,0.27932 -1.8737,0 -0.39494,-0.19748 -0.5418,-0.73933 -0.93679,-0.93681 -0.5586,-0.27933 -1.43205,0.44161 -1.87364,0 -0.22083,-0.22083 0.22082,-0.71604 0,-0.93684 -0.44165,-0.44163 -1.43205,0.44163 -1.87365,0 -0.22082,-0.2208 0.22078,-0.71601 0,-0.93683 -0.44165,-0.44164 -1.43204,0.44163 -1.87369,0 -0.22083,-0.22081 0.22082,-0.71601 0,-0.93681 -0.4416,-0.44164 -1.43199,0.4416 -1.87364,0 -0.22083,-0.22083 0.22082,-0.71603 0,-0.93684 -0.44165,-0.44163 -1.31505,0.2793 -1.87365,0 -0.39504,-0.19751 -0.54185,-0.73933 -0.93684,-0.93684 -0.27928,-0.13966 -0.71602,0.22081 -0.93685,0 -0.22077,-0.2208 0.22083,-0.716 0,-0.93683 -0.22077,-0.2208 -0.71597,0.22083 -0.9368,0 -0.22082,-0.2208 0.22083,-0.71601 0,-0.93681 -0.44164,-0.44163 -1.43204,0.44161 -1.87369,0 -0.22077,-0.22083 0.22083,-0.71603 0,-0.93683 -0.4684,-0.46841 -2.34204,0.4684 -2.81044,0 -0.22082,-0.22081 0.22078,-0.71602 0,-0.93684 -0.31235,-0.31236 -1.56129,0.31235 -1.87369,0 -0.22077,-0.22081 0.22082,-0.71601 0,-0.93681 -0.4684,-0.46843 -2.34204,0.4684 -2.81049,0 -0.22077,-0.22083 0.22083,-0.71603 0,-0.93684 -0.4416,-0.44163 -1.31505,0.2793 -1.87364,0 -0.395,-0.19751 -0.5418,-0.73932 -0.93685,-0.93683 -0.5586,-0.2793 -1.43199,0.44163 -1.87364,0 -0.22083,-0.2208 0.22082,-0.71601 0,-0.93684 -0.31235,-0.31235 -1.56129,0.31238 -1.87364,0 -0.22083,-0.2208 0.22082,-0.716 0,-0.93681 -0.31235,-0.31235 -1.5613,0.31236 -1.87365,0 -0.22082,-0.22083 0.22078,-0.71603 0,-0.93683 -0.31265,-0.31267 -1.56098,0.31266 -1.87364,0 -0.22082,-0.22081 0.22077,-0.71601 0,-0.93684 -0.44165,-0.44161 -1.31505,0.27933 -1.87369,0 -0.395,-0.19748 -0.5418,-0.73933 -0.93685,-0.93681 -0.27927,-0.13966 -0.65747,0.13964 -0.9368,0 -0.39499,-0.19751 -0.54185,-0.73933 -0.93684,-0.93683 -0.27927,-0.13967 -0.65747,0.13966 -0.93685,0 -0.39494,-0.19751 -0.5418,-0.73933 -0.93679,-0.93684 -0.5586,-0.2793 -1.43205,0.44163 -1.87365,0 -0.22082,-0.2208 0.22083,-0.71601 0,-0.93681 -0.44165,-0.44164 -1.43204,0.44161 -1.87364,0 -0.22088,-0.22083 0.22077,-0.71603 0,-0.93684 -0.22547,-0.22542 -3.52192,0.22543 -3.74734,0 -0.22082,-0.22082 0,-0.62455 0,-0.93683 -1.24909,-0.31229 -2.49824,-0.62455 -3.74733,-0.93684 2.13239,-2.13233 0.68927,-0.2476 0,-0.93681 -0.22078,-0.22083 0,-0.62455 0,-0.93683 0,-0.31229 -0.22078,-0.71601 0,-0.93684 0.22082,-0.2208 0.71602,0.22083 0.93685,0 0.22082,-0.2208 0,-0.62455 0,-0.93681 0,-1.87367 0,-3.74732 0,-5.62098 0,-2.19703 -0.22083,0.44162 0.93684,-1.87365 0.13961,-0.27931 0,-0.62455 0,-0.93684 0,-0.31226 0,-0.62455 0,-0.93681 0,-1.87367 0,-3.74732 0,-5.62099 0,-0.31226 0.22078,-0.71601 0,-0.93681 -0.22082,-0.22082 -0.71602,0.2208 -0.93684,0 -0.44165,-0.44163 0.44164,-1.43204 0,-1.87367 -0.44165,-0.44163 -1.43205,0.44163 -1.87365,0 -0.22082,-0.2208 0.22083,-0.716 0,-0.93683 -0.44165,-0.44161 -1.43204,0.44163 -1.87369,0 -0.22077,-0.22081 0.22082,-0.71601 0,-0.93682 -0.4416,-0.44163 -1.315,0.27931 -1.87364,0 -0.395,-0.1975 -0.54183,-0.73932 -0.93681,-0.93683 -0.27931,-0.13966 -0.65754,0.13966 -0.93684,0 -0.39499,-0.19751 -0.54182,-0.73933 -0.93681,-0.93683 -0.55863,-0.27931 -1.43204,0.44163 -1.87368,0 -0.22079,-0.22081 0.22081,-0.71601 0,-0.93681 -0.4684,-0.46843 -2.34207,0.4684 -2.81047,0 -0.22081,-0.22083 0.2208,-0.71604 0,-0.93684 -0.22081,-0.22081 -0.71601,0.2208 -0.93684,0 -0.22081,-0.22081 0.22083,-0.71601 0,-0.93684 -0.31236,-0.31235 -1.56129,0.31236 -1.87365,0 -0.2208,-0.2208 0.22081,-0.716 0,-0.93681 -0.44163,-0.44163 -1.31504,0.2793 -1.87367,0 -0.39499,-0.19751 -0.54182,-0.73932 -0.93681,-0.93683 -0.37146,-0.18572 -2.61897,0.1915 -2.81048,0 -0.22083,-0.22083 0.2208,-0.71601 0,-0.93684 -0.22083,-0.2208 -0.65753,0.13966 -0.93683,0 -0.395,-0.1975 -0.54183,-0.73933 -0.93684,-0.93683 -0.5586,-0.27931 -1.43201,0.44163 -1.87365,0 -0.22082,-0.22081 0.22081,-0.71601 0,-0.93681 -0.46843,-0.46843 -2.34207,0.4684 -2.81048,0 -0.22083,-0.22083 0.22081,-0.71604 0,-0.93684 -0.46843,-0.4684 -2.34207,0.46841 -2.81048,0 -0.22083,-0.2208 0.2208,-0.71601 0,-0.93683 -0.46843,-0.46841 -2.34208,0.46843 -2.81051,0 -0.2208,-0.22081 0.22083,-0.71601 0,-0.93681 -0.31235,-0.31238 -1.56128,0.31235 -1.87364,0 -0.2208,-0.22083 0.2208,-0.71604 0,-0.93684 -0.19153,-0.19153 -2.43905,0.18572 -2.81048,0 -0.39499,-0.19751 -0.54182,-0.73933 -0.93684,-0.93684 -0.2793,-0.13963 -0.65751,0.13966 -0.93681,0 -0.39501,-0.1975 -0.54184,-0.73932 -0.93683,-0.93683 -0.55863,-0.2793 -1.31505,0.27933 -1.87367,0 -0.39499,-0.19748 -0.54182,-0.73931 -0.93682,-0.93681 -0.37146,-0.18572 -2.61897,0.1915 -2.81047,0 -0.22083,-0.22083 0.22079,-0.71603 0,-0.93684 -0.31239,-0.31235 -1.56132,0.31236 -1.87368,0 -0.2208,-0.2208 0.22083,-0.716 0,-0.93683 -0.2208,-0.22081 -0.65751,0.13966 -0.93683,0 -0.39499,-0.19748 -0.54182,-0.73933 -0.93682,-0.93681 -0.27929,-0.13967 -0.71602,0.2208 -0.93683,0 -0.2208,-0.22083 0.22081,-0.71604 0,-0.93684 -0.2208,-0.2208 -0.65751,0.13966 -0.93683,0 -0.39499,-0.19751 -0.54183,-0.73932 -0.93681,-0.93683 -0.27933,-0.13964 -0.71604,0.22082 -0.93684,0 -0.22081,-0.22081 0.2208,-0.71601 0,-0.93682 -0.31236,-0.31237 -1.56129,0.31236 -1.87365,0 -0.22082,-0.22082 0.22081,-0.71602 0,-0.93683 -0.22082,-0.22083 -0.62457,0 -0.93683,0 0,-0.31229 0.2208,-0.71601 0,-0.93684 -0.40764,-0.40761 -7.79025,1.42339 -4.68415,-2.81047 -2.4982,0 0.31228,0.31228 -0.93681,-0.93684 -0.44163,-0.44161 -1.43204,0.44163 -1.87368,0 -0.2208,-0.22081 0.22083,-0.71601 0,-0.93681 -0.2208,-0.22083 -0.62454,0 -0.93683,0 -1.56136,0 -3.12275,0 -4.68412,0 -3.43504,0 -6.87009,0 -10.30512,0 -0.31226,0 -0.62455,0 -0.93684,0 -0.31226,0 -0.716,-0.22083 -0.93681,0 -0.22083,0.2208 0.22081,0.716 0,0.93681 -0.29009,0.29008 -4.39406,-0.29009 -4.68415,0 -0.2208,0.22082 0.22083,0.71603 0,0.93684 -0.2208,0.2208 -0.62455,0 -0.93681,0 -1.56139,0 -3.12277,0 -4.68415,0 -3.12277,0 -6.24551,0 -9.36828,0 -0.31229,0 -0.62455,0 -0.93684,0 -0.31226,0 -0.71601,-0.22081 -0.93681,0 -0.22082,0.2208 0.2208,0.716 0,0.93683 -0.0301,0.0301 -2.58328,0 -2.8105,0 -2.19702,0 0.44162,-0.22083 -1.87365,0.93681 -0.2793,0.13966 -0.62455,0 -0.93683,0 -0.66403,0 -5.37876,-0.1211 -5.62097,0 -0.39499,0.1975 -0.54182,0.73933 -0.93683,0.93683 -0.27931,0.13967 -0.62455,0 -0.93681,0 -0.31229,0 -0.62455,0 -0.93684,0 -1.87365,0 -3.74732,0 -5.62096,0 -0.31229,0 -0.62455,0 -0.93684,0 -0.31228,0 -0.71601,0.22083 -0.93683,0 -0.22081,-0.2208 0.22082,-0.716 0,-0.93683 -0.22081,-0.2208 -0.62455,0 -0.93681,0 -0.31229,0 -0.62458,0 -0.93684,0 -3.43503,0 -6.87008,0 -10.30512,0 -0.31226,0 -0.62454,0 -0.93683,0 -0.31226,0 -0.71601,0.22083 -0.93681,0 -0.22083,-0.2208 0.2208,-0.71601 0,-0.93681 -0.22083,-0.22083 -0.62455,0 -0.93683,0 -1.56139,0 -3.12277,0 -4.68413,0 -0.31229,0 -0.71603,0.2208 -0.93684,0 -0.22083,-0.22083 0.22081,-0.71603 0,-0.93683 -0.22083,-0.22081 -0.62455,0 -0.93683,0 -0.31227,0 -0.62455,0 -0.93684,0 -0.66402,0 -5.37873,0.1211 -5.62096,0 -0.39499,-0.19751 -0.54182,-0.73933 -0.93684,-0.93684 -0.591,-0.2955 -4.09312,0.29552 -4.68412,0 -0.39502,-0.19749 -0.54182,-0.73933 -0.93684,-0.93681 -0.55861,-0.27933 -1.31504,0.2793 -1.87365,0 -0.39501,-0.19751 -0.54182,-0.73933 -0.93683,-0.93684 -0.50821,-0.25411 -3.49099,0.25633 -3.74732,0 -0.2208,-0.2208 0.22083,-0.71601 0,-0.93684 -0.2208,-0.22079 -0.62455,0 -0.93681,0 -0.31228,0 -0.62457,0 -0.93684,0 -1.87366,0 -3.74731,0 -5.62096,0 -0.31228,0 -0.71603,0.22083 -0.93683,0 -0.22081,-0.22079 0.2208,-0.716 0,-0.93683 -0.25633,-0.25633 -3.23909,0.25411 -3.74732,0 -0.39499,-0.19748 -0.54182,-0.7393 -0.93683,-0.93681 -0.24632,-0.12316 -3.25742,0 -3.7473,0 -2.8105,0 -5.62098,0 -8.43147,0 -0.9263,0 -2.93298,0.20358 -3.74731,0 -0.95801,-0.2395 -1.87365,-0.62455 -2.81048,-0.93683 0,-0.31227 0.22082,-0.71601 0,-0.93684 -0.0301,-0.0301 -2.58328,0 -2.81049,0 -0.31226,0 -0.716,0.22083 -0.93683,0 -0.2208,-0.22081 0.22083,-0.71601 0,-0.93681 -0.0301,-0.0301 -2.58326,0 -2.81048,0 -0.31226,0 -0.62455,0 -0.93681,0 -0.31229,0 -0.71603,0.2208 -0.93684,0 -0.2208,-0.22083 0.22081,-0.71603 0,-0.93683 -0.44163,-0.44164 -1.43204,0.44163 -1.87365,0 -0.22082,-0.22081 0.22081,-0.71602 0,-0.93684 -0.46842,-0.46841 -2.34207,0.46843 -2.8105,0 -0.2208,-0.2208 0.22083,-0.71601 0,-0.93681 -0.4416,-0.44164 -1.31502,0.2793 -1.87364,0 -0.395,-0.19751 -0.54183,-0.73933 -0.93684,-0.93684 -0.55861,-0.2793 -1.43202,0.44163 -1.87365,0 -0.2208,-0.22082 0.22081,-0.716 0,-0.93683 -0.44163,-0.44163 -1.31504,0.2793 -1.87367,0 -0.39499,-0.19751 -0.54182,-0.73933 -0.93681,-0.93684 -0.2793,-0.13964 -0.71603,0.22083 -0.93683,0 -0.22081,-0.2208 0.2208,-0.71601 0,-0.93681 -0.31236,-0.31236 -1.5613,0.31236 -1.87365,0 -0.22083,-0.22083 0.2208,-0.71603 0,-0.93683 -0.22083,-0.22081 -0.71603,0.2208 -0.93684,0 -0.2208,-0.22081 0.22081,-0.71601 0,-0.93684 -0.44163,-0.44161 -1.43204,0.44163 -1.87364,0 -0.22083,-0.2208 0.2208,-0.71601 0,-0.93681 -0.22083,-0.22083 -0.71603,0.2208 -0.93684,0 -0.22082,-0.22083 0.22081,-0.71603 0,-0.93684 -0.31235,-0.31235 -1.56129,0.31236 -1.87366,0 -0.22081,-0.2208 0.22082,-0.716 0,-0.93683 -0.22081,-0.2208 -0.65752,0.13966 -0.93682,0 -0.39501,-0.19751 -0.54184,-0.73933 -0.93683,-0.93681 -0.55863,-0.27933 -1.43204,0.4416 -1.87365,0 -0.22082,-0.22083 0.2208,-0.71603 0,-0.93684 -0.22082,-0.22083 -0.71603,0.22081 -0.93684,0 -0.2208,-0.22083 0.22081,-0.71603 0,-0.93683 -0.44163,-0.44164 -1.31504,0.2793 -1.87366,0 -0.395,-0.19751 -0.54183,-0.73933 -0.93682,-0.93684 -0.50822,-0.25409 -3.49098,0.25636 -3.74731,0 -0.22081,-0.2208 0.2208,-0.71601 0,-0.93681 -0.22081,-0.22083 -0.62455,0 -0.93684,0 -2.49819,0 -4.99641,0 -7.49461,0 -0.31228,0 0.93681,0.31226 0.93681,0 0,-0.31229 -0.62455,0 -0.93681,0 -0.62457,0 -1.24912,0 -1.87367,0 -0.31226,0 0.93684,0.31226 0.93684,0 0,-0.31229 -0.62455,0 -0.93684,0 -0.31226,0 -0.62454,0 -0.93683,0 -0.31227,0 -0.71601,-0.22083 -0.93681,0 -0.22083,0.2208 0.2208,0.71601 0,0.93681 -0.22083,0.22083 -0.62455,0 -0.93684,0 -0.31226,0 -0.62455,0 -0.93683,0 -0.4417,0 -4.64167,-0.0424 -4.68413,0 -0.22083,0.22083 0.2208,0.71603 0,0.93684 -0.22083,0.2208 -0.62455,0 -0.93684,0 -0.31226,0 -0.62454,0 -0.93683,0 -1.56136,0 -3.12274,0 -4.68413,0 -0.31229,0 -0.62455,0 -0.93684,0 -0.31226,0 -0.6575,-0.13967 -0.93681,0 -0.39501,0.1975 -0.54184,0.73933 -0.93683,0.93683 -0.58883,0.29441 -3.15851,-0.2944 -3.74732,0 -0.39499,0.19751 -0.54182,0.73933 -0.93684,0.93684 -0.64709,0.32353 -4.35528,-0.32886 -4.68412,0 -0.22083,0.2208 0.2208,0.71601 0,0.93681 -0.44163,0.44163 -1.31504,-0.2793 -1.87367,0 -0.39499,0.19751 -0.54182,0.73933 -0.93681,0.93683 -0.37146,0.18572 -2.61898,-0.19153 -2.81049,0 -0.22082,0.22081 0.22081,0.71601 0,0.93684 -0.46842,0.46841 -2.34207,-0.46843 -2.8105,0 -0.2208,0.2208 0.22083,0.71601 0,0.93681 -0.4684,0.46843 -2.34205,-0.4684 -2.81048,0 -0.2208,0.22083 0.22083,0.71603 0,0.93684 -0.44161,0.44163 -1.31505,-0.27931 -1.87365,0 -0.39501,0.1975 -0.54182,0.73933 -0.93683,0.93683 -0.59101,0.2955 -4.09312,-0.29552 -4.68413,0 -0.39501,0.19748 -0.54184,0.73933 -0.93684,0.93681 -0.37143,0.18575 -2.61897,-0.19151 -2.81048,0 -0.22083,0.22083 0.22081,0.71603 0,0.93684 -0.44163,0.44163 -1.31504,-0.2793 -1.87367,0 -0.39499,0.1975 -0.54182,0.73932 -0.93681,0.93683 -0.37146,0.18572 -2.61897,-0.19153 -2.81048,0 -0.22083,0.22081 0.22081,0.71601 0,0.93684 -0.31238,0.31235 -1.56131,-0.31238 -1.87367,0 -0.2208,0.2208 0.22083,0.71601 0,0.93681 -0.4684,0.46843 -2.34208,-0.46841 -2.81048,0 -0.22081,0.22082 0.2208,0.71603 0,0.93684 -0.22081,0.2208 -0.65751,-0.13967 -0.93684,0 -0.39499,0.1975 -0.54182,0.73932 -0.93681,0.93683 -0.27932,0.13964 -0.65753,-0.13966 -0.93684,0 -0.39501,0.19748 -0.54181,0.73933 -0.93683,0.93681 -0.37144,0.18574 -2.61895,-0.19151 -2.81048,0 -0.22081,0.22083 0.2208,0.71603 0,0.93684 -0.46841,0.4684 -2.34208,-0.46841 -2.81048,0 -0.22081,0.2208 0.2208,0.716 0,0.93683 -0.44163,0.44163 -1.31504,-0.2793 -1.87365,0 -0.39501,0.19751 -0.54184,0.73933 -0.93684,0.93681 -0.55862,0.27933 -1.43204,-0.44161 -1.87366,0 -0.22081,0.22083 0.22082,0.71604 0,0.93683 -0.31267,0.31267 -1.56099,-0.31265 -1.87365,0 -0.22081,0.22083 0.2208,0.71604 0,0.93684 -0.31236,0.31236 -1.56129,-0.31235 -1.87365,0 -0.22082,0.22081 0.2208,0.71601 0,0.93684 -0.46843,0.4684 -2.34208,-0.46843 -2.81048,0 -0.22084,0.2208 0.22081,0.716 0,0.93681 -0.22543,0.22542 -3.52188,-0.22543 -3.7473,0 -0.22082,0.22082 0.22077,0.71603 0,0.93684 -0.22082,0.2208 -0.62455,0 -0.93685,0 -0.34405,0 -3.70961,0.0377 -3.74733,0 -0.22078,-0.22081 0.22082,-0.71602 0,-0.93684 -0.4684,-0.46841 -2.34204,0.46843 -2.81049,0 -0.22078,-0.22081 0.22082,-0.71601 0,-0.93681 -0.22078,-0.22083 -0.65747,0.13963 -0.9368,0 -0.39499,-0.19751 -0.54185,-0.73933 -0.93684,-0.93684 -0.27933,-0.13966 -0.71603,0.22081 -0.9368,0 -0.22082,-0.2208 0.22077,-0.71601 0,-0.93684 -0.44165,-0.44162 -1.43204,0.44164 -1.87364,0 -0.22088,-0.22079 0.22077,-0.716 0,-0.93683 -0.44165,-0.44161 -1.43205,0.44163 -1.8737,0 -0.22082,-0.2208 0.22083,-0.716 0,-0.93681 -0.44165,-0.44163 -1.43204,0.44163 -1.87364,0 -0.22082,-0.22083 0.22078,-0.71603 0,-0.93683 -0.22082,-0.22081 -0.65752,0.13966 -0.93685,0 -3.89884,-1.94942 1.00153,0.0647 -0.93684,-1.87365 -0.22078,-0.22083 -0.71597,0.2208 -0.9368,0 -0.22082,-0.22083 0.22083,-0.71603 0,-0.93683 -0.22082,-0.22081 -0.71602,0.2208 -0.93684,0 -0.22078,-0.22081 0.27932,-0.79718 0,-0.93684 -5.30868,-2.65434 -0.9368,1.32718 -0.9368,0 0,-0.31226 -0.6246,0 -0.93685,0 -0.62403,0 -1.2496,0 -1.87364,0 -1.87364,0 -3.74734,0 -5.62098,0 -0.42189,0 -2.5254,-0.14256 -2.81049,0 -0.39499,0.19751 -0.54185,0.73932 -0.93684,0.93684 -0.2851,0.14255 -2.38855,0 -2.81044,0 -3.20702,0 -6.28305,0.25992 -9.36832,-0.93684 0,-0.31226 -0.22082,-0.71601 0,-0.93681 0.22083,-0.22083 0.71602,0.2208 0.93685,0 0.22082,-0.22083 0,-0.62457 0,-0.93684 0,-0.31228 0.22082,-0.716 0,-0.93683 -0.22083,-0.22081 -0.71602,0.22083 -0.93685,0 -0.22082,-0.22081 0,-0.62455 0,-0.93684 0,-0.65158 0.16942,-4.34535 0,-4.68413 -0.19749,-0.39501 -0.7393,-0.54182 -0.93684,-0.93683 -0.12313,-0.24632 0,-3.25742 0,-3.74732 0,-2.4982 0,-4.99642 0,-7.49461 0,-0.44172 0.0424,-4.64169 0,-4.68415 -1.2491,-1.2491 -0.9368,1.56138 -0.9368,-0.93681 0,-1.56139 0,-3.12277 0,-4.68415 0,-0.31229 0.22083,-0.71601 0,-0.93684 -0.22082,-0.2208 -0.71602,0.22083 -0.93685,0 -0.22082,-0.2208 0.22083,-0.716 0,-0.93681 -0.22082,-0.22083 -0.71602,0.22081 -0.93679,0 -0.22083,-0.22083 0.22077,-0.71603 0,-0.93684 -0.22083,-0.22082 -0.71602,0.22081 -0.93685,0 -1.87364,-1.87366 5.93323,-0.93683 -2.81049,-0.93683 -0.62455,0 1.2491,0 1.87364,0 0.3123,0 -0.62454,0 -0.93679,0 -1.2491,0 -2.49824,0 -3.74734,0 -0.62454,0 1.2491,0 1.87365,0 0.31229,0 -0.62455,0 -0.9368,0 -0.62348,0 -1.25022,0 -1.87369,0 -1.87365,0 -3.74729,0 -5.62093,0 -2.81049,0 -5.62098,0 -8.43147,0 -0.3123,0 -0.62455,0 -0.93685,0 -0.31224,0 -0.71602,-0.22081 -0.93684,0 -0.22078,0.22083 0.22082,0.71601 0,0.93683 -0.4684,0.46841 -2.34204,-0.4684 -2.81044,0 -0.22083,0.22081 0.22082,0.71601 0,0.93684 -0.22547,0.22543 -3.52187,-0.22545 -3.74734,0 -0.22082,0.22081 0.22083,0.71601 0,0.93681 -0.22082,0.22083 -0.62455,0 -0.93679,0 -0.34405,0 -3.70962,0.0377 -3.74734,0 -0.22082,-0.2208 0.22083,-0.716 0,-0.93681 -0.22082,-0.22083 -0.62455,0 -0.93685,0 -0.2272,0 -2.78032,-0.0301 -2.81049,0 -0.22077,0.22081 0.22083,0.71601 0,0.93681 -0.44159,0.44163 -1.43204,-0.44161 -1.87364,0 -0.22082,0.22083 0.22083,0.71603 0,0.93684 -0.22082,0.2208 -0.71602,-0.22081 -0.93679,0 -0.22083,0.2208 0.22077,0.71601 0,0.93683 -0.22083,0.2208 -0.65753,-0.13966 -0.93685,0 -0.39499,0.19749 -0.51786,0.79717 -0.93685,0.93681 -0.59249,0.19751 -1.24909,0 -1.87364,0 -0.31225,0 0.93685,0.31229 0.93685,0 0,-0.31226 -0.62455,0 -0.93685,0 -0.31225,0 -0.65752,-0.13964 -0.93685,0 -0.39499,0.19751 -0.93679,0.49521 -0.93679,0.93684 0,0.31228 0.93679,0.31228 0.93679,0 0,-0.31227 -0.62454,0 -0.93679,0 -0.3123,0 -0.62455,0 -0.93685,0 -0.3123,0 -0.71602,-0.22081 -0.93685,0 -0.22077,0.2208 0.22083,0.716 0,0.93683 -0.22077,0.22081 -0.62454,0 -0.93679,0 -0.3123,0 -0.62455,0 -0.93685,0 -1.87364,0 -3.74728,0 -5.62093,0 -0.3123,0 -0.71607,-0.22083 -0.93684,0 -0.22083,0.22081 0.22077,0.71601 0,0.93684 -0.2901,0.29006 -4.39409,-0.29009 -4.68419,0 -0.22077,0.2208 0.22083,0.71601 0,0.93681 -0.0378,0.0377 -3.40323,0 -3.74728,0 -1.56139,0 -3.12274,0 -4.68413,0 -0.31225,0 -0.62455,0 -0.93685,0 -0.31225,0 -0.65752,0.13966 -0.93679,0 -0.39505,-0.19751 -0.54186,-0.73933 -0.93685,-0.93681 -0.28509,-0.14256 -2.3886,0 -2.81049,0 -2.18594,0 -4.37188,0 -6.55778,0 -0.2272,0 -2.78037,0.0301 -2.81049,0 -0.22082,-0.22083 0.22078,-0.71603 0,-0.93684 -0.31235,-0.31235 -1.56129,0.31236 -1.87369,0 -0.22077,-0.22083 0.22082,-0.71603 0,-0.93683 -0.4416,-0.44163 -1.35394,0.34644 -1.87364,0 -5.05391,-3.3693 -0.53976,-1.4766 0,-0.93684 0.22082,0.22083 -0.65753,0.13966 -0.93685,0 -0.39499,-0.19748 -0.5418,-0.73932 -0.9368,-0.93681 -0.27932,-0.13966 -0.71602,0.2208 -0.93684,0 -0.22078,-0.22082 0.22082,-0.71603 0,-0.93683 -0.22078,-0.22081 -0.62455,0 -0.9368,0 -0.3123,0 -0.62455,0 -0.93684,0 -0.31225,0 -0.71603,0.2208 -0.9368,0 -0.22088,-0.22081 0.22077,-0.71601 0,-0.93684 -0.22088,-0.2208 -0.6246,0 -0.93685,0 -0.3123,0 -0.71602,-0.2208 -0.93684,0 -0.22083,0.22083 0.22082,0.71603 0,0.93684 -0.22083,0.2208 -0.71603,-0.22081 -0.9368,0 -0.22082,0.2208 0.22077,0.71601 0,0.93683 -0.3124,0.31236 -1.56134,-0.31238 -1.87369,0 -0.22078,0.2208 0.22082,0.71601 0,0.93681 -0.22078,0.22083 -0.71602,-0.2208 -0.9368,0 -0.22082,0.22083 0.22078,0.71603 0,0.93684 -0.44165,0.44163 -1.43204,-0.44163 -1.87369,0 -0.22078,0.2208 0.22082,0.716 0,0.93683 -0.4416,0.44163 -1.43205,-0.44163 -1.87364,0 -0.22083,0.22081 0.22082,0.71601 0,0.93684 -0.22083,0.2208 -0.71603,-0.22083 -0.93685,0 -0.22078,0.2208 0.22082,0.71601 0,0.93681 -0.22078,0.22083 -0.65747,-0.13964 -0.9368,0 -0.39499,0.19751 -0.54185,0.73933 -0.93684,0.93683 -0.27933,0.13967 -0.71603,-0.2208 -0.9368,0 -0.44165,0.44164 0.4416,1.43204 0,1.87365 -0.22082,0.22083 -0.71602,-0.2208 -0.93685,0 -0.22082,0.22083 0.22083,0.71603 0,0.93684 -0.22082,0.2208 -0.71602,-0.22081 -0.93684,0 -0.22083,0.2208 0.22082,0.716 0,0.93683 -0.22083,0.2208 -0.71603,-0.22083 -0.9368,0 -0.22082,0.2208 0.22077,0.71601 0,0.93681 -0.22082,0.22083 -0.71602,-0.2208 -0.93685,0 -0.22077,0.22083 0.22083,0.71603 0,0.93684 -0.22077,0.22083 -0.71602,-0.22081 -0.93684,0 -0.22078,0.22083 0.13966,0.65753 0,0.93683 -0.0896,0.17932 -3.56796,3.65766 -3.74729,3.74732 -0.27932,0.13964 -0.71602,-0.22083 -0.93684,0 -0.22083,0.2208 0.22082,0.71601 0,0.93681 -0.22083,0.22083 -0.71603,-0.2208 -0.9368,0 -0.22083,0.22083 0.22077,0.71603 0,0.93684 -0.22083,0.2208 -0.65752,-0.13967 -0.93685,0 -0.39499,0.1975 -0.5418,0.73933 -0.93679,0.93683 -0.27933,0.13964 -0.71608,-0.22083 -0.93685,0 -0.22082,0.22081 0.22077,0.71601 0,0.93684 -0.44165,0.4416 -1.43204,-0.44163 -1.87364,0 -0.22083,0.2208 0.22077,0.71601 0,0.93681 -0.22083,0.22083 -0.71602,-0.2208 -0.93685,0 -0.22082,0.22083 0.13966,0.65753 0,0.93683 -0.46094,0.92188 -3.28639,2.82545 -3.74733,3.74732 -0.13966,0.2793 0.22082,0.71601 0,0.93681 -0.22078,0.22083 -0.71597,-0.2208 -0.9368,0 -0.22082,0.22083 0.22083,0.71603 0,0.93684 -0.22082,0.22083 -0.71602,-0.22081 -0.93685,0 -0.22082,0.22083 0.22083,0.71601 0,0.93683 -0.22082,0.22081 -0.71602,-0.22082 -0.93679,0 -0.22083,0.22081 0.22077,0.71601 0,0.93684 -0.22083,0.2208 -0.71602,-0.22083 -0.93685,0 -0.22082,0.2208 0.13966,0.65751 0,0.93681 -0.19749,0.39501 -0.73935,0.54184 -0.93684,0.93684 -0.13967,0.27929 0.22082,0.716 0,0.93683 -0.22083,0.2208 -0.71603,-0.22083 -0.9368,0 -0.22082,0.2208 0.22077,0.716 0,0.93681 -0.22082,0.22083 -0.71607,-0.22081 -0.93685,0 -0.22082,0.22083 0.22078,0.71603 0,0.93684 -0.22082,0.2208 -0.71602,-0.22081 -0.93684,0 -0.22078,0.2208 0.22082,0.716 0,0.93683 -0.22078,0.22081 -0.71603,-0.22083 -0.9368,0 -0.22082,0.22081 0.22077,0.71601 0,0.93681 -0.22082,0.22083 -0.65752,-0.13964 -0.93685,0 -0.39499,0.19751 -0.5418,0.73933 -0.93684,0.93683 -0.27928,0.13967 -0.71597,-0.22079 -0.9368,0 -0.22082,0.22083 0.22083,0.71604 0,0.93684 -0.22082,0.22081 -0.71602,-0.2208 -0.93685,0 -0.22077,0.22081 0.22083,0.71601 0,0.93684 -0.22077,0.2208 -0.71602,-0.22083 -0.93684,0 -0.22078,0.2208 0.22082,0.716 0,0.93681 -0.22078,0.22082 -0.71597,-0.22081 -0.9368,0 -0.22082,0.22082 0.22083,0.71603 0,0.93684 -0.22082,0.2208 -0.71602,-0.22081 -0.93684,0 -0.22083,0.2208 0.22082,0.716 0,0.93683 -0.22083,0.2208 -0.71603,-0.22083 -0.9368,0 -0.22083,0.2208 0.22077,0.71601 0,0.93681 -0.22083,0.22083 -0.71602,-0.2208 -0.93685,0 -0.22082,0.22083 0.22083,0.71603 0,0.93683 -0.22082,0.22083 -0.71602,-0.2208 -0.93679,0 -0.22088,0.22083 0.22077,0.71601 0,0.93684 -0.22088,0.22081 -0.71608,-0.22083 -0.93685,0 -0.22082,0.22081 0.22077,0.71601 0,0.93683 -0.22082,0.22081 -0.71602,-0.22082 -0.93685,0 -0.22082,0.22081 0,0.62455 0,0.93682 -0.93684,0.62457 -1.87364,1.24912 -2.81049,1.87367 0.3123,0 0.62455,0 0.93685,0 0.31225,0 0.93685,0.31226 0.93685,0 0,-0.31229 -0.6246,0 -0.93685,0 -0.6661,0 -2.81049,-0.39352 -2.81049,0.93681 0,0.31228 0.9368,0.31228 0.9368,0 0,-0.31227 -0.62455,0 -0.9368,0 -0.3123,0 -0.62455,0 -0.93684,0 -0.4219,0 -2.52535,-0.14254 -2.81049,0 -0.395,0.1975 -0.54181,0.73933 -0.9368,0.93683 -0.28514,0.14256 -2.38859,0 -2.81049,0 -1.87364,0 -3.747343,0 -5.620983,0 -0.3123,0 -0.62455,0 -0.93684,0 -0.31225,0 -0.71598,-0.2208 -0.9368,0 -0.22083,0.22081 0.22082,0.71601 0,0.93684 -0.29009,0.29008 -4.39409,-0.29009 -4.68413,0 -0.22083,0.2208 0.22077,0.71601 0,0.93681 -0.0424,0.0425 -4.24243,0 -4.68419,0 -0.31224,0 -0.71597,0.22083 -0.93679,0 -0.22083,-0.2208 0.22082,-0.71601 0,-0.93681 -0.0301,-0.0301 -2.58328,0 -2.81049,0 -2.49819,0 0.31225,0.31226 -0.93685,-0.93684 -0.2563,-0.25633 -3.23907,0.25412 -3.74728,0 -0.395,-0.1975 -0.54185,-0.73933 -0.93685,-0.93683 -0.55859,-0.27931 -1.43199,0.44163 -1.87364,0 -0.22082,-0.22081 0.22077,-0.71601 0,-0.93681 -0.31235,-0.31238 -1.56129,0.31235 -1.87369,0 -0.22078,-0.22083 0.22082,-0.71604 0,-0.93684 -0.4684,-0.4684 -2.34204,0.46841 -2.81049,0 -0.22078,-0.2208 0.22087,-0.71601 0,-0.93683 -0.4684,-0.46841 -2.34204,0.46843 -2.81044,0 -0.22083,-0.22081 0.22082,-0.71601 0,-0.93682 -0.46845,-0.46843 -2.34209,0.46841 -2.81049,0 -0.22082,-0.22082 0.22083,-0.71602 0,-0.93683 -0.22082,-0.22083 -0.62455,0 -0.93685,0 -0.6516,0 -4.34534,-0.1694 -4.68413,0 -0.39499,0.19751 -0.5418,0.73933 -0.93684,0.93683 -0.50822,0.25409 -3.49094,-0.25635 -3.74729,0 -0.22082,0.22081 0.22082,0.71601 0,0.93682 -0.22082,0.22082 -0.65752,-0.13964 -0.93685,0 -0.39499,0.19751 -0.5418,0.73932 -0.93679,0.93683 -0.27933,0.13966 -0.71602,-0.2208 -0.93685,0 -0.22082,0.2208 0.13966,0.65751 0,0.93684 -1.94945,3.89883 0.0647,-1.00152 -1.87364,0.93681 -0.22083,0.22083 0.13961,0.65753 0,0.93683 -1.94945,3.89887 0.0646,-1.00149 -1.8737,0.93684 -0.22077,0.2208 0.22083,0.71601 0,0.93681 -0.31235,0.31238 -1.56129,-0.31236 -1.87364,0 -0.22077,0.22083 0.22083,0.71603 0,0.93683 -0.22077,0.22083 -0.65752,-0.13963 -0.93684,0 -0.395,0.19751 -0.54181,0.73933 -0.9368,0.93684 -0.55865,0.2793 -1.43204,-0.44163 -1.87364,0 -0.22083,0.2208 0.22082,0.71601 0,0.93684 -0.3124,0.31235 -1.5613,-0.31238 -1.8737,0 -0.22082,0.2208 0.22083,0.716 0,0.93681 -0.4416,0.44163 -1.31499,-0.27931 -1.87364,0 -0.39499,0.1975 -0.5418,0.73932 -0.93679,0.93683 -0.27933,0.13967 -0.65758,-0.13966 -0.93685,0 -0.395,0.19751 -0.54185,0.73933 -0.93685,0.93684 -0.55859,0.2793 -1.31504,-0.27933 -1.87364,0 -0.39499,0.19748 -0.5418,0.73932 -0.93685,0.93681 -0.27927,0.13966 -0.62455,0 -0.93684,0 -1.87365,0 -3.74729,0 -5.62093,0 -0.3123,0 -0.71602,0.22083 -0.93685,0 -0.22082,-0.22081 0.22083,-0.71601 0,-0.93681 -0.31235,-0.31236 -1.56129,0.31235 -1.87364,0 -0.22083,-0.22083 0.22082,-0.71604 0,-0.93684 -0.22083,-0.2208 -0.71602,0.2208 -0.93685,0 -0.22077,-0.2208 0.22083,-0.71601 0,-0.93683 -0.22077,-0.22081 -0.65752,0.13966 -0.93679,0 -0.39505,-0.19749 -0.54186,-0.73933 -0.93685,-0.93681 -0.55865,-0.27933 -1.43204,0.4416 -1.87364,0 -0.22083,-0.22083 0.22082,-0.71604 0,-0.93684 -0.22083,-0.2208 -0.62455,0 -0.93685,0 -0.3123,0 -0.71597,-0.2208 -0.93685,0 -0.22077,0.2208 0.22088,0.71601 0,0.93684 -0.22077,0.2208 -0.71597,-0.22083 -0.93679,0 -0.0301,0.0301 0,2.58325 0,2.81048 0,2.49819 0.31225,-0.31229 -0.93685,0.93681 -0.2563,0.25635 0.25411,3.23911 0,3.74731 -0.1975,0.39502 -0.7393,0.54185 -0.93679,0.93684 -0.12318,0.24634 0,3.25744 0,3.74731 0,0.31227 -0.22083,0.71601 0,0.93682 1.24909,1.24912 0.93679,-1.56136 0.93679,0.93683 0,0.48989 -0.12317,3.50097 0,3.74732 0.1975,0.39499 0.73935,0.54182 0.93685,0.93683 0.13966,0.27931 -0.22083,0.71601 0,0.93682 0.4684,0.46842 2.34204,-0.46841 2.81049,0 0.22082,0.22082 -0.22083,0.71603 0,0.93683 0.22082,0.22083 0.71602,-0.2208 0.93679,0 0.22083,0.22083 -0.22077,0.71601 0,0.93683 0.22083,0.22081 0.71602,-0.22082 0.93685,0 0.22082,0.22081 -0.22083,0.71601 0,0.93684 0.22082,0.2208 0.71602,-0.22083 0.93685,0 0.22077,0.2208 0,0.62455 0,0.93681 0,0.31229 0,0.62455 0,0.93684 0,0.62454 0,1.24909 0,1.87365 0,0.31228 0.31224,-0.93682 0,-0.93682 -0.3123,0 0,0.62455 0,0.93682 0,0.93683 0,1.87366 0,2.81047 0,0.62458 0,-1.24909 0,-1.87364 0,-0.31227 0,0.62455 0,0.93683 0,0.62455 0,1.2491 0,1.87365 0,1.87367 0,3.74732 0,5.62096 0,0.31229 0,0.62458 0,0.93684 0,0.31228 0.22077,0.71601 0,0.93683 -0.22083,0.22081 -0.71603,-0.22082 -0.93685,0 -0.22083,0.22081 0,0.62455 0,0.93684 0,1.56136 0,3.12274 0,4.68413 0,0.31228 -0.22083,0.716 0,0.93683 0.22082,0.22081 0.71602,-0.22083 0.93685,0 0.0378,0.0377 0,3.40326 0,3.74732 0,2.18593 0,4.37186 0,6.5578 0,0.31226 -0.22083,0.716 0,0.93681 0.22077,0.22082 0.71602,-0.22081 0.93679,0 0.22083,0.22082 -0.13961,0.65753 0,0.93683 1.94945,3.89886 -0.0647,-1.0015 1.8737,0.93684 1.15363,1.15367 -2.85904,1.87364 1.87364,1.87364 0.4416,0 -0.4952,-0.93683 -0.93685,-0.93683 -0.31225,0 -0.22082,0.71603 0,0.93683 0.22083,0.22081 0.71602,-0.2208 0.93685,0 0.22082,0.22081 -0.22083,0.71601 0,0.93684 0.22082,0.2208 0.71602,-0.22083 0.93684,0 0.22078,0.2208 -0.22082,0.71601 0,0.93681 0.4416,0.44163 1.432,-0.44161 1.87365,0 0.22082,0.22083 -0.22083,0.71603 0,0.93683 0.22082,0.22083 0.65752,-0.13963 0.93679,0 0.395,0.19751 0.54186,0.73933 0.93685,0.93684 0.27932,0.13966 0.71602,-0.2208 0.9368,0 0.22087,0.2208 -0.22078,0.71601 0,0.93684 0.3124,0.31235 1.56134,-0.31238 1.87369,0 0.22082,0.2208 -0.22083,0.716 0,0.93681 0.22082,0.22082 0.71602,-0.22081 0.93685,0 0.22077,0.22082 -0.22083,0.71603 0,0.93683 0.22077,0.2208 0.71597,-0.2208 0.93679,0 0.22083,0.2208 -0.22082,0.71601 0,0.93684 0.22083,0.2208 0.71602,-0.22083 0.93685,0 0.22077,0.2208 -0.22083,0.716 0,0.93681 0.4416,0.44163 1.43204,-0.44161 1.87364,0 0.22083,0.22083 -0.22082,0.71603 0,0.93683 0.22083,0.22081 0.62455,0 0.93685,0 0.62455,0 1.24909,0 1.87364,0 0.3123,0 -0.93685,-0.31226 -0.93685,0 0,0.31229 0.62455,0 0.93685,0 0.62455,0 1.2491,0 1.87364,0 0.3123,0 -0.93679,-0.31226 -0.93679,0 0,0.31229 0.62454,0 0.93679,0 0.93685,0 1.87365,0 2.81049,0 0.22721,0 2.78037,-0.0301 2.81049,0 0.22083,0.22081 -0.22082,0.71601 0,0.93684 0.44165,0.44163 1.31505,-0.2793 1.8737,0 0.39499,0.19751 0.5418,0.73932 0.93679,0.93683 0.5586,0.2793 1.43204,-0.44163 1.87364,0 0.22083,0.22081 -0.22082,0.71601 0,0.93681 0.44165,0.44164 1.31505,-0.2793 1.87365,0 0.39504,0.19751 0.54185,0.73933 0.93684,0.93684 0.27933,0.13966 0.65753,-0.13966 0.93685,0 0.39499,0.19751 0.5418,0.73933 0.9368,0.93684 0.27932,0.13963 0.71607,-0.22083 0.93684,0 0.22083,0.2208 -0.22077,0.716 0,0.93681 0.22083,0.22082 0.71602,-0.22081 0.93685,0 0.22077,0.22082 -0.22083,0.71603 0,0.93683 0.4416,0.44163 1.43199,-0.44163 1.87364,0 0.22083,0.2208 -0.22082,0.71601 0,0.93683 0.22083,0.22081 0.71602,-0.22082 0.93685,0 0.22077,0.22081 -0.22083,0.71602 0,0.93682 0.22077,0.22083 0.71597,-0.2208 0.93679,0 0.22083,0.22083 -0.22082,0.71603 0,0.93683 0.22083,0.22083 0.71603,-0.2208 0.93685,0 0.22083,0.22083 -0.22082,0.71603 0,0.93684 0.22083,0.2208 0.71602,-0.22081 0.93685,0 0.22077,0.2208 -0.22083,0.71601 0,0.93683 0.22077,0.2208 0.71597,-0.22082 0.93679,0 0.22083,0.2208 -0.22082,0.71601 0,0.93682 0.22083,0.22082 0.71602,-0.22081 0.93685,0 0.22082,0.22082 0,0.62454 0,0.93683 0,0.31229 0.13966,0.65751 0,0.93683 -0.1975,0.39499 -0.93685,0.49521 -0.93685,0.93682 0,0.31228 0.93685,0.31228 0.93685,0 0,-0.31227 -0.65752,-0.13965 -0.93685,0 -0.39499,0.1975 -0.5418,0.73932 -0.93679,0.93683 -0.27933,0.13966 -0.71602,-0.2208 -0.93685,0 -1.24909,1.2491 1.56139,0.93683 -0.93685,0.93683 -2.49819,0 0.3123,-0.31228 -0.93679,0.93684 -0.44165,0.44161 -1.43205,-0.44163 -1.8737,0 -0.22077,0.2208 0.22083,0.71601 0,0.93681 -0.44159,0.44164 -1.43199,-0.44163 -1.87364,0 -0.22077,0.22083 0.22083,0.71603 0,0.93684 -0.44165,0.44163 -1.31504,-0.27931 -1.87364,0 -0.39499,0.1975 -0.54185,0.73933 -0.93685,0.93683 -0.37141,0.18572 -2.61896,-0.19153 -2.81049,0 -0.22082,0.2208 0.22083,0.71601 0,0.93682 -0.29004,0.29008 -4.39403,-0.29009 -4.68413,0 -0.22082,0.22082 0.22083,0.71602 0,0.93683 -0.22082,0.2208 -0.62455,0 -0.93685,0 -0.4417,0 -4.64166,-0.0425 -4.68413,0 -0.22077,0.2208 0.22083,0.71601 0,0.93683 -0.4416,0.44161 -1.43204,-0.44163 -1.87364,0 -0.22082,0.22081 0,0.62455 0,0.93681 0,0.42193 -0.14252,2.5254 0,2.81051 0.1975,0.39499 0.7393,0.54182 0.93685,0.93681 0.16937,0.33881 0,4.03255 0,4.68415 0,3.43503 0,6.87007 0,10.30512 0,1.56136 0,3.12274 0,4.68412 0,0.31229 0.22082,0.71602 0,0.93684 -0.22083,0.22081 -0.71602,-0.22082 -0.93685,0 -0.22082,0.22081 0.22083,0.71601 0,0.93684 -0.22082,0.2208 -0.71602,-0.22083 -0.93685,0 -0.22082,0.2208 0.22083,0.716 0,0.93681 -0.22082,0.22082 -0.71602,-0.22081 -0.93679,0 -0.22083,0.22082 0.22077,0.71603 0,0.93683 -0.22083,0.2208 -0.71602,-0.2208 -0.93685,0 -0.22082,0.2208 0.22083,0.71601 0,0.93684 -0.22082,0.2208 -0.65752,-0.13967 -0.93679,0 -0.39505,0.19748 -0.54186,0.73933 -0.93685,0.93681 -0.27933,0.13966 -0.71602,-0.22081 -0.93685,0 -0.22082,0.22083 0.22083,0.71603 0,0.93683 -0.22082,0.22081 -0.71602,-0.2208 -0.93679,0 -0.22083,0.22081 0.22077,0.71601 0,0.93684 -0.22083,0.2208 -0.71603,-0.22083 -0.93685,0 -0.22083,0.2208 0.22082,0.71601 0,0.93681 -0.22083,0.22083 -0.71602,-0.2208 -0.93685,0 -1.93832,1.93833 2.96205,-0.0758 -0.93684,1.87367 -0.27928,0.13964 -0.71598,-0.22083 -0.9368,0 -0.22082,0.2208 0.22082,0.71601 0,0.93684 -0.22082,0.2208 -0.65752,-0.13967 -0.93685,0 -0.39499,0.19748 -0.5418,0.73932 -0.93679,0.93681 -0.27933,0.13966 -0.71602,-0.22081 -0.93685,0 -0.22082,0.22082 0.22083,0.71603 0,0.93683 -0.22082,0.2208 -0.71602,-0.2208 -0.9368,0 -0.22082,0.2208 0.22078,0.71601 0,0.93684 -0.22082,0.2208 -0.62454,0 -0.93684,0 -0.93685,1.2491 -1.87364,2.4982 -2.81049,3.74732 -1.88013,7.71541 2.64326,1.70641 3.74733,2.81048 0.22078,0.2208 -0.22082,0.716 0,0.93681 0.22078,0.22083 0.71598,-0.22081 0.9368,0 0.22083,0.22083 -0.22082,0.71603 0,0.93683 0.22083,0.22081 0.71602,-0.2208 0.93685,0 0.22082,0.22081 -0.22083,0.71601 0,0.93684 0.22082,0.2208 0.71602,-0.22083 0.93679,0 0.22083,0.2208 -0.22077,0.71601 0,0.93681 0.22083,0.22083 0.71603,-0.2208 0.93685,0 0.22082,0.22083 -0.22082,0.71603 0,0.93683 0.22082,0.22083 0.71602,-0.2208 0.9368,0 0.22087,0.22083 -0.22078,0.71601 0,0.93684 0.22087,0.2208 0.71607,-0.22083 0.93684,0 0.22083,0.2208 -0.22077,0.71601 0,0.93684 0.22083,0.2208 0.71602,-0.22083 0.93685,0 0.22082,0.2208 -0.13966,0.6575 0,0.93681 0.1975,0.39501 0.73935,0.54184 0.93685,0.93683 0.13961,0.2793 -0.22083,0.71601 0,0.93683 0.22077,0.22081 0.71597,-0.22082 0.93679,0 0.22083,0.22081 -0.22082,0.71601 0,0.93682 0.22083,0.22083 0.71602,-0.22081 0.93685,0 0.22077,0.22083 -0.22083,0.71603 0,0.93683 0.22077,0.22081 0.65752,-0.13966 0.93685,0 0.92183,0.46094 2.82544,3.28638 3.74728,3.74732 0.27932,0.13966 0.71602,-0.22081 0.93685,0 0.22082,0.2208 -0.22083,0.716 0,0.93683 0.22082,0.22081 0.71602,-0.22083 0.93679,0 0.22083,0.22081 -0.22077,0.71601 0,0.93682 0.22083,0.22082 0.62455,0 0.93685,0 0,0.31228 -0.13966,0.65753 0,0.93683 0.62393,1.24784 1.24971,0.62581 1.87364,1.87365 0.13966,0.27932 -0.13966,0.65753 0,0.93683 0.1975,0.39501 0.73935,0.54182 0.93685,0.93684 0.13961,0.2793 0,0.62454 0,0.93683 0.31225,0.31226 0.7393,0.54182 0.93679,0.93681 0.27933,0.55863 -0.44159,1.43204 0,1.87367 0.22083,0.22081 0.71603,-0.22082 0.93685,0 0.44165,0.44161 -0.44165,1.43202 0,1.87365 0.22083,0.22081 0.71602,-0.2208 0.93685,0 0.4684,0.4684 -0.4684,2.34208 0,2.81048 0.22077,0.22083 0.71602,-0.2208 0.93685,0 0.22077,0.22083 -0.13967,0.65753 0,0.93684 0.19744,0.39499 0.73929,0.54182 0.93679,0.93683 0.27932,0.5586 -0.4416,1.43202 0,1.87365 0.22083,0.2208 0.71602,-0.2208 0.93685,0 0.22077,0.2208 -0.22083,0.71601 0,0.93683 0.22077,0.22081 0.71597,-0.22082 0.93679,0 0.22083,0.22081 -0.22082,0.71601 0,0.93681 0.22083,0.22083 0.71603,-0.2208 0.93685,0 0.22082,0.22083 -0.22082,0.71604 0,0.93684 0.22082,0.22082 0.9368,-0.31226 0.9368,0 0,0.31228 -1.2491,0 -0.9368,0 1.87364,0 3.74729,0 5.62098,0 0.6516,0 4.34534,0.1694 4.68413,0 0.39499,-0.19751 0.5418,-0.73933 0.93685,-0.93684 0.50816,-0.25409 3.49093,0.25636 3.74728,0 0.22083,-0.2208 -0.22082,-0.716 0,-0.93681 0.4684,-0.46843 2.34204,0.46841 2.81049,0 0.22083,-0.22082 0,-0.62455 0,-0.93683 0.31225,0 0.65752,0.13966 0.9368,0 0.39504,-0.19751 0.6246,-1.2491 0.93684,-0.93684 0.3123,0.31229 -1.37844,0.93684 -0.93684,0.93684 0.69831,0 1.37992,-0.44308 1.87369,-0.93684 0.22077,-0.2208 -0.22082,-0.716 0,-0.93681 0.22077,-0.22083 0.71602,0.22081 0.93685,0 0.22077,-0.22083 0.31225,-0.93683 0,-0.93683 -0.44165,0 -1.3785,0.93683 -0.93685,0.93683 4.73268,0 0.71995,-0.71998 1.87364,-1.87367 0.22083,-0.2208 0.71602,0.22083 0.93685,0 0.22077,-0.2208 -0.22083,-0.71601 0,-0.93683 0.22077,-0.22081 0.71597,0.22082 0.93679,0 0.44165,-0.44161 -0.44159,-1.43202 0,-1.87365 0.22083,-0.2208 0.71603,0.22081 0.93685,0 0.4416,-0.44163 -0.4416,-1.43204 0,-1.87365 0.22083,-0.22082 0.62455,0 0.93685,0 0.31225,0 0.93679,-0.31228 0.93679,0 0,0.31227 -1.24909,0 -0.93679,0 0.62454,0 1.24909,0 1.87364,0 0.31225,0 0.71602,-0.22082 0.9368,0 0.22082,0.22081 -0.22078,0.71601 0,0.93681 0.44165,0.44163 1.43204,-0.4416 1.87369,0 0.22082,0.22083 -0.22083,0.71604 0,0.93684 0.4416,0.44163 1.31505,-0.2793 1.87364,0 0.395,0.19751 0.5418,0.73932 0.93685,0.93684 0.55859,0.2793 1.43199,-0.44164 1.87364,0 0.22083,0.2208 -0.22082,0.716 0,0.93681 0.22083,0.22082 0.65752,-0.13964 0.93685,0 0.39499,0.19751 0.5418,0.73932 0.93679,0.93683 0.27933,0.13966 0.71603,-0.2208 0.93685,0 0.22083,0.22083 -0.22082,0.71603 0,0.93684 0.4416,0.44163 1.43204,-0.44163 1.87364,0 0.22083,0.2208 -0.22082,0.716 0,0.93683 0.4684,0.46841 2.34204,-0.46843 2.81049,0 0.22083,0.22081 -0.22082,0.71601 0,0.93681 0.4684,0.46843 2.34209,-0.4684 2.81049,0 0.220833,0.22083 -0.22082,0.71604 0,0.93684 0.256353,0.25633 3.239073,-0.25412 3.747343,0 0.39499,0.19751 0.5418,0.73932 0.93679,0.93683 0.37146,0.18572 2.61897,-0.19153 2.81049,0 0.22083,0.22081 -0.22082,0.71601 0,0.93681 0.4416,0.44164 1.31505,-0.2793 1.87365,0 0.39499,0.19751 0.54185,0.73933 0.93684,0.93684 0.27933,0.13966 0.71602,-0.2208 0.9368,0 0.22082,0.22082 -0.22078,0.71601 0,0.93683 0.31271,0.31266 1.56103,-0.31266 1.87369,0 0.22077,0.2208 -0.22082,0.716 0,0.93683 0.31235,0.31236 1.56129,-0.31238 1.87364,0 0.22083,0.22081 -0.22082,0.71601 0,0.93681 0.46845,0.46843 2.3421,-0.4684 2.81049,0 0.22083,0.22083 -0.22082,0.71604 0,0.93684 0.19153,0.19153 2.43903,-0.18572 2.81049,0 0.395,0.19751 0.5418,0.73932 0.9368,0.93683 0.55865,0.2793 1.31504,-0.27932 1.87369,0 0.395,0.19749 0.5418,0.73933 0.9368,0.93682 1.29223,0.64611 0.83797,-1.13456 1.87369,0.93683 0.13961,0.2793 -0.22082,0.71601 0,0.93684 0.22077,0.2208 0.71602,-0.22083 0.9368,0 0.22082,0.2208 -0.22078,0.716 0,0.93681 0.22082,0.22083 0.71602,-0.22081 0.93684,0 0.22078,0.22083 -0.22082,0.71603 0,0.93683 0.22078,0.22083 0.71603,-0.2208 0.93685,0 0.22077,0.22083 -0.22082,0.71604 0,0.93683 0.22077,0.22081 0.71597,-0.22079 0.9368,0 0.22082,0.22081 -0.22083,0.71602 0,0.93684 0.22082,0.22081 0.71602,-0.22082 0.93684,0 0.22083,0.22081 -0.22082,0.71601 0,0.93681 0.4416,0.44164 1.43205,-0.44161 1.87364,0 0.22083,0.22083 -0.13966,0.65754 0,0.93684 1.94945,3.89886 -0.0647,-1.0015 1.87365,0.93684 0.22082,0.22079 -0.22078,0.716 0,0.93681 0.31235,0.31237 1.56129,-0.31236 1.87364,0 0.22083,0.22082 -0.22077,0.71602 0,0.93683 0.3124,0.31235 1.56134,-0.31236 1.87369,0 0.22083,0.2208 -0.22082,0.71601 0,0.93683 0.31235,0.31236 1.56129,-0.31235 1.87364,0 0.22083,0.22081 -0.22082,0.71601 0,0.93684 0.31271,0.31266 1.56099,-0.31268 1.8737,0 0.22077,0.22081 -0.22083,0.71601 0,0.93681 0.22077,0.22083 0.65747,-0.13964 0.93679,0 0.395,0.19751 0.54186,0.73933 0.93685,0.93684 0.5586,0.2793 1.43204,-0.44164 1.87364,0 0.22083,0.2208 -0.22082,0.71601 0,0.93683 0.31235,0.31236 1.56129,-0.31238 1.87364,0 0.22083,0.2208 -0.22077,0.71601 0,0.93681 0.22083,0.22083 0.65753,-0.13963 0.93685,0 0.395,0.19751 0.5418,0.73933 0.9368,0.93684 0.27932,0.13966 0.71607,-0.22081 0.93684,0 0.22083,0.2208 -0.22077,0.716 0,0.93683 0.44165,0.44163 1.43205,-0.44163 1.87365,0 0.22082,0.22081 -0.22083,0.71601 0,0.93682 0.22082,0.22082 0.71602,-0.22081 0.93684,0 0.22083,0.22082 -0.22082,0.71603 0,0.93683 0.22083,0.22083 0.71603,-0.2208 0.93685,0 0.22077,0.22083 -0.22082,0.71603 0,0.93683 0.4416,0.44164 1.43199,-0.44163 1.87364,0 0.22083,0.22081 -0.22082,0.71601 0,0.93684 0.22083,0.2208 0.71602,-0.22083 0.9368,0 0.22082,0.2208 -0.22078,0.71601 0,0.93681 0.22082,0.22083 0.71602,-0.2208 0.93685,0 0.22082,0.22083 -0.22083,0.71603 0,0.93684 0.22082,0.2208 0.71602,-0.22081 0.93684,0 0.22083,0.2208 0.31225,0.93683 0,0.93683 -0.3123,0 -0.3123,-0.93683 0,-0.93683 0.30204,0 1.35313,1.61339 1.87364,1.87364 0.27933,0.13967 0.62455,0 0.93685,0 0.31225,0 0.65752,0.13967 0.9368,0 0.39504,-0.19748 0.5418,-0.73932 0.93684,-0.93681 0.27928,-0.13966 0.71603,0.2208 0.93685,0 1.93832,-1.93833 -2.96204,0.0758 0.9368,-1.87367 0.27932,-0.13964 0.71602,0.22083 0.93684,0 0.22078,-0.2208 -0.22082,-0.71601 0,-0.93681 0.22078,-0.22083 0.71597,0.2208 0.93685,0 0.22077,-0.22083 -0.22088,-0.71603 0,-0.93684 1.93832,-1.93832 -0.0758,2.96203 1.87364,-0.93683 0.13966,-0.2793 -0.22082,-0.71601 0,-0.93683 1.93832,-1.93834 -0.0758,2.96202 1.87364,-0.93682 0.13967,-0.2793 0,-0.62455 0,-0.93683 0,-0.31229 0,-0.62455 0,-0.93684 0,-1.56136 0,-3.12274 0,-4.68413 0,-0.31228 -0.31229,-0.93683 0,-0.93683 0.31225,0 0,0.62455 0,0.93683 1.5614,0.93684 3.12274,1.87365 4.68414,2.81049 0,0.31228 -0.22083,0.71601 0,0.93683 0.44165,0.44161 1.43204,-0.44163 1.87369,0 0.22077,0.2208 -0.22082,0.71601 0,0.93681 0.22077,0.22083 0.65747,-0.13963 0.9368,0 0.39499,0.19751 0.5418,0.73933 0.93684,0.93684 0.5586,0.2793 1.43205,-0.44163 1.87365,0 0.22082,0.2208 -0.22083,0.716 0,0.93683 0.4416,0.44163 1.31504,-0.2793 1.87364,0 0.39499,0.19749 0.54185,0.73933 0.93685,0.93682 0.37146,0.18574 2.61896,-0.19151 2.81049,0 0.22077,0.22082 -0.22083,0.71603 0,0.93683 0.19152,0.19153 2.43902,-0.18572 2.81049,0 0.39499,0.19751 0.5418,0.73933 0.93679,0.93683 0.55865,0.27931 1.43204,-0.44163 1.87369,0 0.22078,0.22081 -0.22082,0.71601 0,0.93684 0.4684,0.4684 2.34204,-0.46843 2.81044,0 0.22083,0.2208 -0.22077,0.71601 0,0.93681 0.25636,0.25633 3.23913,-0.25409 3.74734,0 0.39499,0.19751 0.5418,0.73933 0.93679,0.93684 0.50827,0.25411 3.49099,-0.25633 3.74734,0 0.22083,0.2208 -0.22082,0.716 0,0.93683 0.46845,0.46841 2.34209,-0.46843 2.81049,0 0.22082,0.2208 -0.22082,0.71601 0,0.93681 0.4684,0.46843 2.34209,-0.4684 2.81049,0 0.22082,0.22083 -0.22083,0.71603 0,0.93684 0.31266,0.31266 1.56099,-0.31266 1.87364,0 0.22083,0.2208 -0.22077,0.716 0,0.93683 0.31235,0.31236 1.56129,-0.31235 1.87364,0 0.22083,0.22081 -0.22077,0.71601 0,0.93683 0.44165,0.44161 1.31505,-0.27932 1.8737,0 0.39499,0.19749 0.5418,0.73933 0.93679,0.93682 0.27933,0.13966 0.65753,-0.13964 0.93685,0 0.39499,0.19751 0.5418,0.73933 0.93685,0.93683 0.55859,0.27931 1.43204,-0.44163 1.87364,0 0.22082,0.22081 -0.22083,0.71601 0,0.93684 0.4416,0.44161 1.31505,-0.27932 1.87364,0 0.395,0.19748 0.54186,0.73933 0.93685,0.93681 0.5586,0.27932 1.43204,-0.44161 1.87364,0 0.22083,0.22083 -0.22082,0.71603 0,0.93684 0.44165,0.44163 1.31505,-0.27931 1.87364,0 0.39505,0.1975 0.54186,0.73932 0.93685,0.93683 0.5586,0.2793 1.43204,-0.44163 1.87364,0 0.22083,0.2208 -0.22082,0.71601 0,0.93681 0.0378,0.0377 3.40329,0 3.74734,0 2.18594,0 4.37183,0 6.55777,0 0.93685,0 1.87365,0 2.81049,0 0.3123,0 0.93685,-0.31226 0.93685,0 0,0.31229 -1.2491,0 -0.93685,0 0.62455,0 1.2491,0 1.8737,0 0.31224,0 0.71597,-0.2208 0.93679,0 0.22083,0.22083 -0.22082,0.71603 0,0.93684 0.4684,0.46842 2.34209,-0.46841 2.81049,0 0.22083,0.22083 -0.22082,0.71603 0,0.93683 0.22542,0.22543 3.52187,-0.22542 3.74729,0 0.22087,0.22081 -0.22078,0.71601 0,0.93684 0.0301,0.0301 2.58328,0 2.81049,0 1.87369,0 3.74733,0 5.62097,0 0.3123,0 0.71603,0.2208 0.93685,0 0.22083,-0.22083 -0.22082,-0.71603 0,-0.93684 0.0378,-0.0377 3.40329,0 3.74729,0 0.3123,0 0.62454,0 0.93684,0 0.31225,0 0.71602,-0.2208 0.93685,0 0.22082,0.22081 -0.22083,0.71601 0,0.93684 0.4684,0.4684 2.34204,-0.46843 2.81049,0 0.22077,0.2208 -0.3123,0.93681 0,0.93681 1.28753,0 2.49819,-0.62455 3.74728,-0.93681 z'}));SVGs.swamps=_react2.default.createElement('g',{transform:'matrix(0.78022227,0,0,0.78022227,-3389.5587,-1550.7207)',style:boldStyle},_react2.default.createElement('path',{d:'m 4557.5242,2519.2491 c -0.946,-3.7837 -2.0729,-7.5268 -2.8378,-11.3512 -1.8919,-9.4594 2.8378,2.8378 -2.8378,-2.8378 -0.9465,-0.9465 0.9465,-4.7292 0,-5.6757 -0.6689,-0.6688 -2.169,0.6689 -2.8378,0 -1.419,-1.4189 1.4189,-7.0945 0,-8.5134 -0.6689,-0.6689 -2.169,0.6689 -2.8379,0 -1.4189,-1.4189 1.4189,-7.0945 0,-8.5134 -3.7837,-3.7838 -2.8378,4.7297 -2.8378,-2.8378 0,-1.8919 0,-7.5675 0,-5.6757 0,6.4938 0.5983,10.9065 -2.8378,-2.8378 -0.2913,-1.1651 0.344,-5.3316 0,-5.6756 -0.6689,-0.6689 -2.1689,0.6689 -2.8378,0 -1.3377,-1.3377 1.3378,-4.3378 0,-5.6756 -0.6689,-0.6689 -1.8919,0 -2.8378,0 -3.7838,0 -7.5675,0 -11.3512,0 -0.946,0 -1.8919,0 -2.8379,0 -0.9459,0 -2.8378,0.9459 -2.8378,0 0,-0.9459 2.8378,0.9459 2.8378,0 0,-5.9051 -3.9796,-1.1419 -5.6756,-2.8378 -0.6689,-0.6689 0.6689,-2.1689 0,-2.8378 -7.5675,0 0.946,0.9459 -2.8378,-2.8378 -0.6689,-0.6689 -2.1689,0.6688 -2.8378,0 -1.3378,-1.3378 1.3378,-4.3379 0,-5.6757 -0.6689,-0.6688 -2.1689,0.6689 -2.8378,0 -0.9456,-0.9455 0.9456,-4.73 0,-5.6756 -0.6689,-0.6689 -1.8919,0 -2.8378,0 0,-0.9459 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -2.169,0.6689 -2.8378,0 -1.3378,-1.3377 1.3377,-4.3379 0,-5.6756 -0.6689,-0.6689 -2.169,0.6689 -2.8378,0 -0.6689,-0.6689 0.6688,-2.1689 0,-2.8378 -0.6689,-0.6689 -2.169,0.6689 -2.8379,0 -0.6688,-0.6689 0.6689,-2.169 0,-2.8378 -0.6688,-0.6689 -2.1689,0.6688 -2.8378,0 -0.6688,-0.6689 0.4231,-1.9918 0,-2.8378 -0.5982,-1.1966 -2.2395,-1.6413 -2.8378,-2.8379 -0.423,-0.846 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6688 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6688 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6689 0.423,-1.9917 0,-2.8378 -0.5983,-1.1965 -2.2395,-1.6413 -2.8378,-2.8378 -0.423,-0.8461 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6689 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -2.169,0.6689 -2.8378,0 -0.6689,-0.6689 0.6688,-2.169 0,-2.8378 -0.6689,-0.6689 -2.169,0.6688 -2.8378,0 -1.3378,-1.3378 1.3377,-4.3379 0,-5.6757 -0.6689,-0.6688 -2.169,0.6689 -2.8379,0 -1.3377,-1.3377 0.8461,-3.9834 0,-5.6756 -0.5982,-1.1965 -2.2395,-1.6413 -2.8378,-2.8378 -0.846,-1.6921 1.3378,-4.3379 0,-5.6756 -0.6688,-0.6689 -2.1689,0.6689 -2.8378,0 -1.4189,-1.4189 1.4189,-7.0945 0,-8.5134 -0.6689,-0.6689 -2.1689,0.6688 -2.8378,0 -0.6689,-0.6689 0.4231,-1.9918 0,-2.8379 -9.4118,-9.4118 1.3378,2.6756 -2.8378,-5.6756 -0.5983,-1.1965 -2.2395,-1.6413 -2.8378,-2.8378 -0.423,-0.8461 0,-1.8919 0,-2.8378 -0.9459,-0.9459 -2.2396,-1.6413 -2.8378,-2.8378 -0.4231,-0.8461 0.423,-1.9917 0,-2.8378 -0.5983,-1.1965 -2.2396,-1.6413 -2.8378,-2.8378 -0.4231,-0.8461 0.6689,-2.169 0,-2.8378 -0.6689,-0.6689 -2.169,0.6688 -2.8378,0 -0.9456,-0.9456 0.9455,-4.7301 0,-5.6757 -0.6689,-0.6688 -2.169,0.6689 -2.8378,0 -0.9465,-0.9465 0.9464,-4.7291 0,-5.6756 -0.6689,-0.6689 -2.169,0.6689 -2.8379,0 -0.9455,-0.9456 0.9456,-4.73 0,-5.6756 -0.6688,-0.6689 -2.1689,0.6689 -2.8378,0 -0.6688,-0.6689 0.6689,-2.1689 0,-2.8378 -0.6688,-0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0,1.8919 0,2.8378 5.6756,0 11.3513,0 17.0269,0 0.9459,0 3.7837,0 2.8378,0 -1.8919,0 -7.5675,0 -5.6756,0 3.7837,0 7.5675,0 11.3512,0 0.946,0 1.8919,0 2.8378,0 0.946,0 2.169,0.6689 2.8378,0 0.6689,-0.6689 -0.6688,-2.1689 0,-2.8378 0.6689,-0.6689 1.8919,0 2.8378,0 0.946,0 1.8919,0 2.8379,0 0.9459,0 3.7837,0 2.8378,0 -15.3996,0 1.2705,-2.8378 5.6756,-2.8378 0.6882,0 8.4222,0.091 8.5134,0 0.6689,-0.6689 -0.6689,-2.169 0,-2.8378 0.6689,-0.6689 2.169,0.6688 2.8378,0 0.6689,-0.6689 -0.423,-1.9918 0,-2.8378 0.5983,-1.1966 2.2396,-1.6413 2.8378,-2.8379 0.4231,-0.846 -0.6688,-2.1689 0,-2.8378 0.6689,-0.6688 2.169,0.6689 2.8379,0 0.6688,-0.6688 -0.6689,-2.1689 0,-2.8378 0.6688,-0.6689 2.1689,0.6689 2.8378,0 0.6688,-0.6689 -0.6689,-2.1689 0,-2.8378 0.6688,-0.6689 2.1689,0.6689 2.8378,0 0.6689,-0.6689 -0.6689,-2.1689 0,-2.8378 0.6689,-0.6689 1.9917,0.423 2.8378,0 1.1965,-0.5983 1.6413,-2.2395 2.8378,-2.8378 0.8461,-0.423 2.1689,0.6689 2.8378,0 0.6689,-0.6689 -0.6689,-2.1689 0,-2.8378 0.6689,-0.6689 2.1689,0.6689 2.8378,0 0.6689,-0.6689 -0.6689,-2.169 0,-2.8378 0.6689,-0.6689 2.169,0.6688 2.8378,0 0.6689,-0.6689 -0.6688,-2.169 0,-2.8378 0.6689,-0.6689 2.169,0.6688 2.8378,0 0.6689,-0.6689 -0.6688,-2.169 0,-2.8379 0.6689,-0.6688 2.169,0.6689 2.8379,0 0.6688,-0.6688 -0.4231,-1.9917 0,-2.8378 0.5982,-1.1965 2.2395,-1.6413 2.8378,-2.8378 0.423,-0.846 0.6688,-3.5067 0,-2.8378 -1.4957,1.4957 -4.953,5.6756 -2.8378,5.6756 15.594,0 2.4054,-5.2432 5.6756,-8.5134 0.6689,-0.6689 2.1689,0.6689 2.8378,0 0.6689,-0.6689 -0.6689,-2.1689 0,-2.8378 1.3377,-1.3378 4.3379,1.3377 5.6756,0 0.6689,-0.6689 0,-1.8919 0,-2.8378 0.9459,0 1.9917,0.423 2.8378,0 1.1965,-0.5983 1.6413,-2.2396 2.8378,-2.8378 0.8461,-0.4231 2.169,0.6688 2.8378,0 0.6689,-0.6689 -0.6688,-2.169 0,-2.8378 1.3378,-1.3378 3.9835,0.846 5.6757,0 1.1965,-0.5983 1.6412,-2.2396 2.8378,-2.8379 1.6921,-0.846 4.3378,1.3378 5.6756,0 0.6689,-0.6688 -0.6689,-2.1689 0,-2.8378 1.3378,-1.3377 4.3379,1.3378 5.6756,0 0.6689,-0.6688 -0.6689,-2.1689 0,-2.8378 0.6689,-0.6689 1.8919,0 2.8378,0 0.946,0 1.8919,0 2.8378,0 0.946,0 2.8378,-0.9459 2.8378,0 0,0.946 -3.7837,0 -2.8378,0 2.8378,0 5.6757,0 8.5135,0 0.9459,0 2.8378,0.946 2.8378,0 0,-1.3377 -1.8919,-1.8918 -2.8378,-2.8378 3.7837,1.8919 7.5675,3.7838 11.3512,5.6756 0,0.946 -0.6689,2.169 0,2.8378 0.6689,0.6689 2.1689,-0.6688 2.8378,0 0.6689,0.6689 -0.6689,2.169 0,2.8379 1.3378,1.3377 4.3379,-1.3378 5.6756,0 0.6689,0.6688 -0.6688,2.1689 0,2.8378 1.3378,1.3377 4.3379,-1.3378 5.6757,0 0.6688,0.6688 -0.6689,2.1689 0,2.8378 1.3377,1.3377 4.3378,-1.3378 5.6756,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 1.4189,1.4189 7.0945,-1.4189 8.5134,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 0.6829,0.6829 10.6684,-0.6829 11.3513,0 0.6688,0.6689 -0.6689,2.1689 0,2.8378 0.6688,0.6689 1.8918,0 2.8378,0 1.338,0 14.0604,-0.1286 14.189,0 0.6689,0.6689 -0.6688,2.1689 0,2.8378 1.3378,1.3378 4.3379,-1.3377 5.6757,0 0.6688,0.6689 -0.6689,2.169 0,2.8378 1.3377,1.3378 4.3378,-1.3377 5.6756,0 0.6689,0.6689 -0.6689,2.169 0,2.8378 7.5675,0 -0.946,-0.9459 2.8378,2.8379 1.3377,1.3377 4.3378,-1.3378 5.6756,0 0.6689,0.6688 -0.6689,2.1689 0,2.8378 1.3378,1.3377 5.6756,-1.8919 5.6756,0 0,0.9459 -2.8378,-0.946 -2.8378,0 0,5.9051 3.9797,1.1418 5.6756,2.8378 0.6689,0.6689 0.946,2.8378 0,2.8378 -0.9459,0 -0.9459,-2.8378 0,-2.8378 1.3378,0 1.5001,2.8378 2.8378,2.8378 0.946,0 -0.6688,-2.1689 0,-2.8378 0.9471,-0.9471 4.7286,0.9471 5.6757,0 0.6688,-0.6689 -0.6689,-2.169 0,-2.8378 0.6688,-0.6689 2.8378,-0.946 2.8378,0 0,0.9459 -3.7838,0 -2.8378,0 1.8918,0 3.9834,0.846 5.6756,0 0.8461,-0.4231 -0.6689,-2.169 0,-2.8378 0.6689,-0.6689 1.8919,0 2.8378,0 0.9459,0 2.1689,-0.6689 2.8378,0 0.6689,0.6688 -0.423,1.9917 0,2.8378 5.9052,11.8103 -0.1959,-3.0338 5.6756,2.8378 0.6689,0.6689 -0.6688,2.1689 0,2.8378 0.6689,0.6689 2.169,-0.6689 2.8378,0 0.6689,0.6689 -0.6688,2.1689 0,2.8378 0.6689,0.6689 1.9918,-0.423 2.8379,0 1.1965,0.5983 1.6412,2.2395 2.8378,2.8378 0.846,0.423 2.1689,-0.6689 2.8378,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 1.3377,1.3378 4.3378,-1.3377 5.6756,0 3.7837,3.7838 -4.7297,2.8378 2.8378,2.8378 1.0422,0 11.2371,-0.1142 11.3513,0 0.6688,0.6689 0.9459,2.8378 0,2.8378 -0.946,0 -0.946,-2.8378 0,-2.8378 1.3377,0 2.8378,1.5001 2.8378,2.8378 0,0.946 -1.8919,0 -2.8378,0 -1.4502,-17.1294 10.7784,0.5728 14.189,-2.8378 0.6689,-0.6688 -0.6689,-2.1689 0,-2.8378 1.4189,-1.4189 7.0945,1.4189 8.5134,0 0.6689,-0.6689 -0.6688,-2.1689 0,-2.8378 1.3378,-1.3377 3.9835,0.8461 5.6757,0 1.1965,-0.5983 1.6412,-2.2395 2.8378,-2.8378 1.1251,-0.5626 7.9333,0.5802 8.5134,0 0.6689,-0.6689 -0.6689,-2.1689 0,-2.8378 1.4189,-1.4189 7.0945,1.4189 8.5134,0 0.6689,-0.6689 -0.6688,-2.1689 0,-2.8378 0.6689,-0.6689 1.9918,0.423 2.8378,0 1.1966,-0.5983 1.6413,-2.2396 2.8379,-2.8378 0.846,-0.4231 2.1689,0.6688 2.8378,0 0.6689,-0.6689 -0.6689,-2.169 0,-2.8378 0.6689,-0.6689 1.9917,0.423 2.8378,0 1.1965,-0.5983 1.6413,-2.2396 2.8378,-2.8379 0.8461,-0.423 2.1689,0.6689 2.8378,0 0.6689,-0.6688 -0.6689,-2.1689 0,-2.8378 0.6689,-0.6688 2.8378,-0.9459 2.8378,0 0,0.946 -1.8919,0 -2.8378,0'}),_react2.default.createElement('path',{d:'m 4798.7381,2286.5486 c 20.0663,2.6361 -4.0133,-13.0136 0,-17.0268 0.6689,-0.6689 2.1689,0.6688 2.8378,0 1.3378,-1.3378 -1.3377,-4.3379 0,-5.6757 0.6689,-0.6688 2.1689,0.6689 2.8378,0 1.3378,-1.3377 -1.3377,-4.3378 0,-5.6756 0.6689,-0.6689 2.169,0.6689 2.8378,0 0.6689,-0.6689 -0.6688,-2.1689 0,-2.8378 0.6689,-0.6689 2.169,0.6689 2.8378,0 0.6689,-0.6689 -0.423,-1.9917 0,-2.8378 0.5983,-1.1965 2.2396,-1.6413 2.8379,-2.8378 0.423,-0.8461 -0.946,-2.8378 0,-2.8378 0.9459,0 -0.946,2.8378 0,2.8378 10.008,0 -4.3304,-5.6756 5.6756,-5.6756 6.6552,0 -1.3378,-0.6689 5.6756,2.8378 0.8461,0.423 2.1689,-0.6689 2.8378,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 1.3378,1.3378 4.3379,-1.3378 5.6756,0 0.6689,0.6689 -0.6688,2.1689 0,2.8378 0.6689,0.6689 1.8919,0 2.8378,0 0,0.9459 -0.6688,2.1689 0,2.8378 1.3378,1.3378 4.3379,-1.3377 5.6757,0 0.6688,0.6689 -0.6689,2.1689 0,2.8378 1.4189,1.4189 7.0945,-1.4189 8.5134,0 0.6689,0.6689 -0.6689,2.169 0,2.8378 1.3378,1.3378 4.3379,-1.3377 5.6756,0 0.6689,0.6689 -0.6689,2.169 0,2.8378 1.3378,1.3378 4.3379,-1.3377 5.6756,0 0.6689,0.6689 -0.6688,2.169 0,2.8379 1.3378,1.3377 4.3379,-1.3378 5.6757,0 0.6688,0.6688 -0.6689,2.1689 0,2.8378 1.3377,1.3377 4.3378,-1.3378 5.6756,0 0.6689,0.6688 -0.6689,2.1689 0,2.8378 1.3377,1.3377 3.9835,-0.8461 5.6756,0 1.1965,0.5982 1.6413,2.2395 2.8378,2.8378 1.6922,0.8461 4.3379,-1.3378 5.6756,0 0.6689,0.6689 -0.6688,2.1689 0,2.8378 0.6795,0.6794 11.3513,-0.6451 11.3513,0 0,0.9459 -3.7838,0 -2.8378,0 1.8918,0 3.7837,0 5.6756,0 0.9459,0 2.8378,-0.9459 2.8378,0 0,0.9459 -3.7837,0 -2.8378,0 1.8919,0 3.7837,0 5.6756,0 0.946,0 2.1689,0.6689 2.8378,0 0.6689,-0.6689 -0.6689,-2.1689 0,-2.8378 0.6689,-0.6689 2.169,0.6689 2.8378,0 1.3378,-1.3378 -0.846,-3.9835 0,-5.6756 0.5983,-1.1966 2.2396,-1.6413 2.8378,-2.8378 0.4231,-0.8461 -0.6688,-2.169 0,-2.8379 0.6689,-0.6688 2.169,0.6689 2.8379,0 0.6688,-0.6688 -0.6689,-2.1689 0,-2.8378 0.6688,-0.6688 2.1689,0.6689 2.8378,0 0.6688,-0.6688 -0.6689,-2.1689 0,-2.8378 0.6688,-0.6689 2.1689,0.6689 2.8378,0 0.6689,-0.6689 -0.6689,-2.1689 0,-2.8378 0.6689,-0.6689 2.1689,0.6689 2.8378,0 0.6689,-0.6689 -0.6689,-2.1689 0,-2.8378 7.5675,0 -0.9459,0.9459 2.8378,-2.8378 0.6689,-0.6689 2.1689,0.6689 2.8378,0 0.6689,-0.6689 -0.6689,-2.1689 0,-2.8378 0.6689,-0.6689 1.8919,0 2.8378,0 0.946,0 1.8919,0 2.8378,0 3.7838,0 7.5675,0 11.3513,0 0.9459,0 1.8919,0 2.8378,0 0.9459,0 2.8378,-0.946 2.8378,0 0,0.9459 -3.7837,0 -2.8378,0 1.8919,0 3.7837,0 5.6756,0 0.9459,0 2.1689,0.6689 2.8378,0 0.6689,-0.6689 -0.6689,-2.1689 0,-2.8378 1.3378,-1.3378 4.3379,1.3377 5.6756,0 0.6689,-0.6689 -0.6688,-2.169 0,-2.8378 0.6689,-0.6689 2.8379,-0.946 2.8379,0 0,0.9459 -3.7838,0 -2.8379,0 16.081,0 0.946,1.8918 5.6757,-2.8378 1.3377,-1.3378 4.3378,1.3377 5.6756,0 0.6689,-0.6689 -0.6689,-2.169 0,-2.8379 1.3377,-1.3377 4.3379,1.3378 5.6756,0 0.6689,-0.6688 -0.6689,-2.1689 0,-2.8378 0.6689,-0.6688 1.9917,0.4231 2.8378,0 1.1965,-0.5982 1.6413,-2.2395 2.8378,-2.8378 0.8461,-0.423 2.169,0.6689 2.8378,0 0.6689,-0.6689 -0.6688,-2.1689 0,-2.8378 0.6689,-0.6689 2.169,0.6689 2.8379,0 0.6688,-0.6689 -0.6689,-2.1689 0,-2.8378 0.6688,-0.6689 2.1689,0.6689 2.8378,0 0.9455,-0.9456 -0.9456,-4.7301 0,-5.6756 0.6688,-0.6689 2.1689,0.6689 2.8378,0 1.4189,-1.4189 -1.4189,-7.0946 0,-8.5135 2.2184,-2.2183 4.9368,2.4684 5.6756,2.8379 1.6921,0.846 4.3379,-1.3378 5.6756,0 0.6689,0.6688 -0.6689,2.1689 0,2.8378 0.6689,0.6688 2.1689,-0.6689 2.8378,0 0.6689,0.6688 -0.6689,2.1689 0,2.8378 0.9462,0.9461 4.7295,-0.9462 5.6756,0 0.6689,0.6689 -0.6688,2.1689 0,2.8378 0.6689,0.6689 2.169,-0.6689 2.8379,0 0.6688,0.6689 -0.6689,2.1689 0,2.8378 0.6688,0.6689 2.1689,-0.6689 2.8378,0 0.6688,0.6689 -0.6689,2.1689 0,2.8378 0.6688,0.6689 2.1689,-0.6689 2.8378,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 0.6689,0.6689 2.1689,-0.6689 2.8378,0 0.6689,0.6689 -0.6689,2.169 0,2.8378 0.6689,0.6689 2.1689,-0.6688 2.8378,0 0.6689,0.6689 0.9459,2.8378 0,2.8378 -0.9459,0 0,-3.7837 0,-2.8378 0,28.0485 0,39.2305 0,56.7562 0,3.7838 0,7.5675 0,11.3513 0,0.9459 0,1.8919 0,2.8378 0,0.9459 0.9459,2.8378 0,2.8378 -0.9459,0 0,-3.7837 0,-2.8378 0,1.8919 0,3.7837 0,5.6756 0,0.946 -0.423,1.9918 0,2.8378 5.9051,11.8103 -0.1959,-3.0337 5.6756,2.8378 0.6689,0.6689 -0.6689,2.169 0,2.8379 0.6689,0.6688 1.9918,-0.4231 2.8378,0 1.1966,0.5982 1.6413,2.2395 2.8378,2.8378 0.8461,0.423 2.169,-0.6689 2.8379,0 0.6688,0.6688 -0.6689,2.1689 0,2.8378 0.6688,0.6689 2.1689,-0.6689 2.8378,0 0.6688,0.6689 -0.4231,1.9917 0,2.8378 0.5982,1.1965 2.2395,1.6413 2.8378,2.8378 0.423,0.8461 -0.6689,2.1689 0,2.8378 0.6689,0.6689 2.1689,-0.6689 2.8378,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 0.6689,0.6689 2.1689,-0.6689 2.8378,0 1.3378,1.3378 -1.3378,4.3379 0,5.6756 0.6689,0.6689 2.8378,-0.9459 2.8378,0 0,0.946 -2.8378,-0.9459 -2.8378,0 0,1.3378 2.2395,1.6413 2.8378,2.8379 0.423,0.846 -0.6689,2.1689 0,2.8378 0.6689,0.6688 2.1689,-0.6689 2.8378,0 0.6689,0.6688 0,1.8918 0,2.8378 0,0.9459 0.946,2.8378 0,2.8378 -0.9459,0 0,-3.7838 0,-2.8378 0,10.4053 0,20.8106 0,31.2159 0,0.9459 0,1.8919 0,2.8378 0,0.9459 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0,1.8919 0,2.8378 0,0.946 0,1.8919 0,2.8378 0,6.6216 0,13.2432 0,19.8647 0,0.9459 -0.6689,2.1689 0,2.8378 0.6689,0.6689 2.1689,-0.6689 2.8378,0 0.091,0.091 0,7.8252 0,8.5135 0,12.2971 0,24.5943 0,36.8915 0,0.9459 0,1.8919 0,2.8378 0,0.9459 -0.6689,2.1689 0,2.8378 0.6689,0.6689 2.169,-0.6689 2.8378,0 0.9465,0.9465 -0.9465,4.7291 0,5.6756 0.6689,0.6689 1.8919,0 2.8378,0 0,0.946 -0.6688,2.169 0,2.8378 0.6689,0.6689 2.169,-0.6688 2.8379,0 0.6688,0.6689 -0.4231,1.9918 0,2.8379 0.5982,1.1965 2.2395,1.6412 2.8378,2.8378 0.423,0.846 -0.6689,2.1689 0,2.8378 0.6688,0.6689 2.1689,-0.6689 2.8378,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 0.6689,0.6689 2.1689,-0.6689 2.8378,0 1.3377,1.3377 -1.3378,4.3379 0,5.6756 0.6689,0.6689 2.1689,-0.6689 2.8378,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 0.6689,0.6689 2.1689,-0.6689 2.8378,0 0.6689,0.6689 -0.6689,2.169 0,2.8378 0.6689,0.6689 2.1689,-0.6688 2.8378,0 0.6689,0.6689 -0.423,1.9918 0,2.8378 0.5983,1.1966 2.2396,1.6413 2.8378,2.8379 0.4231,0.846 -0.6688,2.1689 0,2.8378 0.6689,0.6688 2.169,-0.6689 2.8378,0 0.6689,0.6688 -0.6688,2.1689 0,2.8378 1.3378,1.3377 4.3379,-1.3378 5.6757,0 5.8715,5.8715 -8.9725,-0.2295 2.8378,5.6756 7.5675,0 -0.946,-0.9459 2.8378,2.8378 0.6689,0.6689 2.1689,-0.6689 2.8378,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 0.6689,0.6689 2.1689,-0.6689 2.8378,0 0.6689,0.6689 -0.6689,2.169 0,2.8378 0.6689,0.6689 2.1689,-0.6688 2.8378,0 0.6689,0.6689 -0.6689,2.169 0,2.8378 0.6689,0.6689 1.8919,0 2.8378,0 0.946,0 1.8919,0 2.8378,0 0.946,0 3.7838,0 2.8378,0 -1.8918,0 -7.5674,0 -5.6756,0 2.8378,0 5.8213,-0.8974 8.5135,0 0.8974,0.2992 -0.6689,2.169 0,2.8379 0.1142,0.1142 10.3091,0 11.3512,0 1.338,0 14.0604,-0.1287 14.1891,0 0.6688,0.6688 -0.6689,2.1689 0,2.8378 0.5801,0.5801 7.3882,-0.5626 8.5134,0 1.1965,0.5982 1.6413,2.2395 2.8378,2.8378 1.1252,0.5626 7.9333,-0.5802 8.5134,0 0.6689,0.6689 -0.6688,2.1689 0,2.8378 1.3378,1.3377 4.3379,-1.3378 5.6757,0 0.6688,0.6689 -0.6689,2.1689 0,2.8378 0.9461,0.9462 4.7294,-0.9462 5.6756,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 1.3377,1.3378 4.3378,-1.3377 5.6756,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 0.9462,0.9462 4.7295,-0.9461 5.6756,0 0.6689,0.6689 -0.6689,2.169 0,2.8378 0.6689,0.6689 2.169,-0.6688 2.8378,0 0.6689,0.6689 -0.6688,2.169 0,2.8378 0.6689,0.6689 1.9918,-0.423 2.8378,0 9.4119,9.4119 -2.6755,-1.3377 5.6757,2.8379 1.1965,0.5982 1.6412,2.2395 2.8378,2.8378 1.6921,0.846 4.3378,-1.3378 5.6756,0 0.6689,0.6688 -0.6689,2.1689 0,2.8378 1.3378,1.3377 4.3379,-1.3378 5.6756,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 1.3378,1.3377 4.3379,-1.3378 5.6756,0 0.6689,0.6689 -0.6688,2.1689 0,2.8378 0.6689,0.6689 1.8919,0 2.8378,0 0,0.9459 -0.6688,2.1689 0,2.8378 1.3378,1.3378 4.3379,-1.3378 5.6757,0 0.6688,0.6689 -0.6689,2.1689 0,2.8378 1.3377,1.3378 4.3378,-1.3377 5.6756,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 1.3377,1.3378 3.9835,-0.846 5.6756,0 3.939,1.9695 2.8378,5.0494 2.8378,8.5135 0,0.9459 -0.6689,2.1689 0,2.8378 0.6689,0.6688 2.169,-0.6689 2.8378,0 0.6689,0.6688 0,1.8918 0,2.8378 0,0.9459 0.946,2.8378 0,2.8378 -0.9459,0 0,-3.7838 0,-2.8378 0,1.8919 0,3.7837 0,5.6756 0,0.9459 0.946,2.8378 0,2.8378 -0.9459,0 0.946,-2.8378 0,-2.8378 -5.9051,0 -1.1418,3.9797 -2.8378,5.6756 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.169 0,2.8378 -1.3377,1.3378 -4.3379,-1.3377 -5.6756,0 -0.6689,0.6689 0.6689,2.169 0,2.8378 -0.6689,0.6689 -2.1689,-0.6688 -2.8378,0 -0.6689,0.6689 0.6689,2.169 0,2.8379 -0.6689,0.6688 -2.169,-0.6689 -2.8378,0 -0.6689,0.6688 0.6688,2.1689 0,2.8378 -0.6689,0.6688 -2.169,-0.6689 -2.8378,0 -0.6689,0.6688 0.6688,2.1689 0,2.8378 -0.6689,0.6689 -2.169,-0.6689 -2.8379,0 -0.6688,0.6689 0.6689,2.1689 0,2.8378 -0.6688,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6688,0.6689 0.6689,2.1689 0,2.8378 -0.947,0.9471 -4.7285,-0.9471 -5.6756,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.169 0,2.8378 -0.6689,0.6689 -2.1689,-0.6688 -2.8378,0 -0.6689,0.6689 0.6689,2.169 0,2.8378 -0.6689,0.6689 -1.9918,-0.423 -2.8378,0 -1.1966,0.5983 -1.6413,2.2396 -2.8378,2.8379 -1.0263,0.5131 -12.2153,0 -14.1891,0 -2.7973,0 -8.4729,0 -5.6756,0 17.6307,0 -11.5814,0 -14.1891,0 -3.7837,0 -7.5675,0 -11.3512,0 -0.946,0 -1.8919,0 -2.8378,0 -0.946,0 -2.8378,0.9459 -2.8378,0 0,-0.946 3.7837,0 2.8378,0 -1.8919,0 -3.7838,0 -5.6757,0 -0.9459,0 -2.8378,0.9459 -2.8378,0 0,-0.946 2.8378,-0.946 2.8378,0 0,1.3377 -1.6412,2.2395 -2.8378,2.8378 -0.846,0.423 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6688 -0.9459,2.8378 0,2.8378 1.3378,0 2.8378,-4.1756 2.8378,-2.8378 0,2.1151 -2.1689,3.669 -2.8378,5.6756 -0.5982,1.7948 0,3.7837 0,5.6756 0,4.7297 0,9.4594 0,14.1891 0,0.9459 0.946,2.8378 0,2.8378 -4.0202,0 8.0405,-13.2431 0,2.8378 -0.423,0.8461 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0,1.8919 0,2.8378 0,1.278 -0.4318,7.6498 0,8.5134 0.5983,1.1966 2.2396,1.6413 2.8378,2.8378 0.8616,1.7232 -0.8616,15.3037 0,17.0269 0.5983,1.1965 2.2396,1.6413 2.8378,2.8378 0.4231,0.8461 0,1.8919 0,2.8378 0,5.6756 0,11.3513 0,17.0269 0,0.9459 0.6689,2.1689 0,2.8378 -0.6688,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -1.3377,1.3378 0.8461,3.9835 0,5.6756 -0.5982,1.1966 -2.2395,1.6413 -2.8378,2.8378 -0.8461,1.6922 1.3378,4.3379 0,5.6757 -0.6689,0.6688 -2.1689,-0.6689 -2.8378,0 -1.4189,1.4189 1.4189,7.0945 0,8.5134 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -1.3378,1.3378 0.8461,3.9835 0,5.6756 -0.5983,1.1965 -2.2396,1.6413 -2.8378,2.8378 -0.4231,0.8461 0.6688,2.169 0,2.8378 -0.6689,0.6689 -2.169,-0.6688 -2.8378,0 -0.6689,0.6689 0.6688,2.169 0,2.8379 -0.6689,0.6688 -2.169,-0.6689 -2.8379,0 -0.6688,0.6688 0.6689,2.1689 0,2.8378 -0.6688,0.6688 -1.9917,-0.4231 -2.8378,0 -2.393,1.1965 -3.2825,4.4791 -5.6756,5.6756 -0.8461,0.423 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -1.4189,1.4189 -7.0945,-1.4189 -8.5134,0 -0.6689,0.6689 0.6688,2.1689 0,2.8378 -1.3378,1.3378 -4.3379,-1.3377 -5.6757,0 -0.6688,0.6689 0.6689,2.169 0,2.8378 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -0.6689,0.6689 0.6689,2.169 0,2.8378 -0.6689,0.6689 -2.1689,-0.6688 -2.8378,0 -0.6689,0.6689 0.6689,2.169 0,2.8379 -0.6689,0.6688 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6688 0.6689,2.1689 0,2.8378 -0.6689,0.6688 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6688 0.6689,2.1689 0,2.8378 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -0.6689,0.6689 0.6688,2.1689 0,2.8378 -0.6689,0.6689 -2.169,-0.6689 -2.8378,0 -0.6689,0.6689 0.6688,2.1689 0,2.8378 -0.6689,0.6689 -2.169,-0.6689 -2.8379,0 -0.6688,0.6689 0.6689,2.1689 0,2.8378 -0.6688,0.6689 -1.9917,-0.423 -2.8378,0 -1.1965,0.5983 -1.6413,2.2396 -2.8378,2.8378 -0.8461,0.4231 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.169 0,2.8378 -0.6689,0.6689 -2.1689,-0.6688 -2.8378,0 -0.6689,0.6689 0.6689,2.169 0,2.8378 -0.6689,0.6689 -2.1689,-0.6688 -2.8378,0 -0.6689,0.6689 0.6689,2.169 0,2.8379 -0.9462,0.9461 -4.7295,-0.9462 -5.6756,0 -0.6689,0.6688 0.6688,2.1689 0,2.8378 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -0.6688,0.6688 0.6689,2.1689 0,2.8378 -0.947,0.9471 -4.7285,-0.9471 -5.6756,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -1.8919,0 -2.8378,0 -0.9459,0 -2.8378,0.9459 -2.8378,0 0,-0.9459 2.8378,-0.9459 2.8378,0 0,5.9051 -3.9797,1.1418 -5.6756,2.8378 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -0.091,0.091 0,7.8252 0,8.5134 0,0.946 0,3.7838 0,2.8379 0,-1.8919 -1.8919,-5.6757 0,-5.6757 3.2608,0 2.8378,6.4771 2.8378,8.5135 0,0.9459 -0.4231,1.9917 0,2.8378 0.3694,0.7388 5.0562,3.4572 2.8378,5.6756 -0.6689,0.6689 -2.169,-0.6689 -2.8378,0 -0.6689,0.6689 0.6688,2.1689 0,2.8378 -0.6689,0.6689 -1.8919,0 -2.8378,0 0,0.9459 0.6688,2.1689 0,2.8378 -0.6689,0.6689 -2.169,-0.6689 -2.8379,0 -0.6688,0.6689 0.6689,2.169 0,2.8378 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -0.6689,0.6689 0.6689,2.169 0,2.8378 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -0.6689,0.6689 0.6689,2.169 0,2.8379 -1.3378,1.3377 -4.3379,-1.3378 -5.6756,0 -0.6689,0.6688 0.6689,2.1689 0,2.8378 -0.6689,0.6688 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6688 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -1.8919,0 -2.8378,0 0,0.9459 0.6688,2.1689 0,2.8378 -0.6689,0.6689 -2.169,-0.6689 -2.8378,0 -0.6689,0.6689 0.6688,2.1689 0,2.8378 -0.6689,0.6689 -2.169,-0.6689 -2.8379,0 -0.9467,0.9467 0.9468,4.7289 0,5.6756 -0.6688,0.6689 -1.8918,0 -2.8378,0 0,0.946 0.6689,2.169 0,2.8378 -0.6688,0.6689 -2.1689,-0.6688 -2.8378,0 -1.3377,1.3378 1.3378,4.3379 0,5.6757 -0.6689,0.6688 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6688 0,1.8918 0,2.8378 0,0.9459 0,1.8918 0,2.8378 0,10.4053 0,20.8106 0,31.2159 0,0.9459 0,1.8919 0,2.8378 0,0.9459 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -5.8715,5.8715 8.9725,-0.2295 -2.8378,5.6756 -1.9602,0.9801 -13.1929,-0.9961 -14.1891,0 -0.6688,0.6689 0.6689,2.169 0,2.8378 -1.4189,1.419 -7.0945,-1.4189 -8.5134,0 -0.6689,0.6689 0.6689,2.169 0,2.8379 -1.3378,1.3377 -3.9835,-0.8461 -5.6756,0 -1.1965,0.5982 -1.6413,2.2395 -2.8378,2.8378 -1.6922,0.846 -3.9835,-0.8461 -5.6757,0 -1.1965,0.5982 -1.6412,2.2395 -2.8378,2.8378 -1.5394,0.7697 -10.5747,-0.7765 -11.3512,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -2.8378,0.9459 -2.8378,0 0,-0.9459 3.7837,0 2.8378,0 -1.8919,0 -3.9835,-0.8461 -5.6756,0 -0.8461,0.423 0.9459,2.8378 0,2.8378 -0.946,0 -0.946,-2.8378 0,-2.8378 1.3377,0 1.6413,2.2395 2.8378,2.8378 1.5395,0.7697 10.5747,-0.7765 11.3512,0 1.3378,1.3378 -1.3377,4.3379 0,5.6756 0.6689,0.6689 2.169,-0.6689 2.8378,0 0.6689,0.6689 -0.6688,2.169 0,2.8378 1.3378,1.3378 4.3379,-1.3377 5.6757,0 0.6688,0.6689 -0.6689,2.169 0,2.8378 0.6688,0.6689 2.1689,-0.6688 2.8378,0 1.3377,1.3378 -1.3378,4.3379 0,5.6757 0.6688,0.6688 2.1689,-0.6689 2.8378,0 0.6689,0.6688 -0.6689,2.1689 0,2.8378 0.6689,0.6689 2.1689,-0.6689 2.8378,0 0.2838,0.2838 0.2838,8.2296 0,8.5134 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -1.3378,1.3378 1.3377,4.3379 0,5.6756 -0.6689,0.6689 -2.169,-0.6688 -2.8378,0 -0.6689,0.6689 0.6688,2.169 0,2.8378 -1.4189,1.4189 -7.0946,-1.4189 -8.5135,0 -0.6688,0.6689 0.6689,2.169 0,2.8379 -0.6688,0.6688 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6688 0.6689,2.1689 0,2.8378 -0.6689,0.6688 -1.8919,0 -2.8378,0 0,0.9459 0.6689,2.1689 0,2.8378 -1.3377,1.3377 -4.3379,-1.3378 -5.6756,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -0.9462,0.9461 -4.7295,-0.9462 -5.6756,0 -0.6689,0.6689 0.6688,2.1689 0,2.8378 -0.6689,0.6689 -1.8919,0 -2.8378,0 -0.946,0 -3.7838,0 -2.8379,0 1.8919,0 7.5675,0 5.6757,0 -3.7838,0 -7.5675,0 -11.3513,0 -0.9459,0 -3.7837,0 -2.8378,0 1.8919,0 7.0134,1.3378 5.6756,0 -3.5149,-3.5149 -9.6884,-2.8378 -14.189,-2.8378 -2.7973,0 -8.4729,0 -5.6756,0 4.4958,0 11.0516,0.8461 0,-2.8378 -1.5646,-0.5215 -10.7446,0.6067 -11.3513,0 -0.6689,-0.6689 0.6689,-2.169 0,-2.8378 -1.3377,-1.3378 -3.9835,0.846 -5.6756,0 -1.1965,-0.5983 -1.6413,-2.2396 -2.8378,-2.8378 -1.6922,-0.8461 -4.3379,1.3377 -5.6756,0 -0.6689,-0.6689 0.6688,-2.169 0,-2.8379 -0.6689,-0.6688 -1.9918,0.4231 -2.8378,0 -1.1966,-0.5982 -1.6413,-2.2395 -2.8379,-2.8378 -0.846,-0.423 -2.1689,0.6689 -2.8378,0 -0.6688,-0.6688 0.6689,-2.1689 0,-2.8378 -0.6688,-0.6689 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6689 0.4231,-1.9917 0,-2.8378 -0.5982,-1.1965 -2.2395,-1.6413 -2.8378,-2.8378 -0.423,-0.8461 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -2.1689,0.6689 -2.8378,0 -1.3378,-1.3378 1.3378,-4.3379 0,-5.6756 -0.6689,-0.6689 -2.1689,0.6688 -2.8378,0 -0.6689,-0.6689 0,-1.8919 0,-2.8378 0,-0.946 0,-1.8919 0,-2.8379 0,-7.5675 0,-15.1349 0,-22.7024 0,-0.946 0,-1.8919 0,-2.8379 0,-0.9459 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6688 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6688 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -2.169,0.6689 -2.8378,0 -0.6689,-0.6689 0.6688,-2.1689 0,-2.8378 -1.3378,-1.3377 -4.3379,1.3378 -5.6757,0 -0.6688,-0.6689 0.6689,-2.1689 0,-2.8378 -1.3377,-1.3378 -4.3378,1.3378 -5.6756,0 -0.6689,-0.6689 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -1.8919,0 -2.8378,0 -0.9459,0 -1.8919,0 -2.8378,0 -0.9459,0 -3.7837,0 -2.8378,0 1.8919,0 7.5675,0 5.6756,0 -2.8378,0 -5.6756,0 -8.5134,0 -0.946,0 -1.8919,0 -2.8378,0 -0.946,0 -2.169,-0.6689 -2.8378,0 -0.6689,0.6689 0.6688,2.1689 0,2.8378 -0.6829,0.6829 -10.6684,-0.6829 -11.3513,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -0.1142,0.1142 -10.3091,0 -11.3512,0 -0.6883,0 -8.4222,-0.091 -8.5135,0 -0.6688,0.6689 0.6689,2.1689 0,2.8378 -1.3377,1.3378 -4.3378,-1.3377 -5.6756,0 -0.6689,0.6689 0.6689,2.169 0,2.8378 -1.4189,1.4189 -7.0945,-1.4189 -8.5134,0 -0.6689,0.6689 0.6689,2.169 0,2.8378 -0.8787,0.8788 -13.3103,-0.8787 -14.1891,0 -0.6688,0.6689 0.6689,2.169 0,2.8379 -1.4189,1.4189 -7.0945,-1.4189 -8.5134,0 -0.6689,0.6688 0.6689,2.1689 0,2.8378 -1.4189,1.4189 -7.0945,-1.4189 -8.5134,0 -0.6689,0.6688 0.6688,2.1689 0,2.8378 -1.4189,1.4189 -7.0946,-1.4189 -8.5135,0 -0.6688,0.6689 0.6689,2.1689 0,2.8378 -0.6688,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.169 0,2.8378 -0.6689,0.6689 -2.1689,-0.6688 -2.8378,0 -0.6689,0.6689 0,1.8919 0,2.8378 -0.946,0 -1.9918,-0.423 -2.8378,0 -11.8103,5.9052 3.0337,-0.1959 -2.8378,5.6757 -0.6689,0.6688 -2.8379,0.9459 -2.8379,0 0,-0.946 2.8379,-0.946 2.8379,0 0,0.915 -4.8873,4.0988 -5.6757,5.6756 -0.846,1.6921 1.3378,4.3379 0,5.6756 -0.6688,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.946,2.8378 0,2.8378 -4.0202,0 8.0405,-13.2431 0,2.8378 -0.423,0.8461 -2.1689,-0.6688 -2.8378,0 -0.4002,0.4002 -0.291,7.9313 0,8.5135 0.5983,1.1965 2.2396,1.6412 2.8378,2.8378 0.4231,0.846 -0.6689,2.1689 0,2.8378 0.6689,0.6689 2.169,-0.6689 2.8378,0 0.6689,0.6689 -0.6688,2.1689 0,2.8378 0.6689,0.6689 2.169,-0.6689 2.8378,0 0.6689,0.6689 -0.6688,2.1689 0,2.8378 0.6689,0.6689 2.169,-0.6689 2.8379,0 0.6688,0.6689 -0.6689,2.1689 0,2.8378 1.4189,1.4189 7.0945,-1.4189 8.5134,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 1.3377,1.3378 4.3379,-1.3377 5.6756,0 0.6689,0.6689 -0.6689,2.169 0,2.8378 1.3378,1.3378 3.9835,-0.846 5.6756,0 1.1966,0.5983 1.6413,2.2396 2.8378,2.8378 0.8461,0.4231 2.169,-0.6688 2.8379,0 0.6688,0.6689 -0.6689,2.169 0,2.8379 0.6688,0.6688 2.1689,-0.6689 2.8378,0 0.6688,0.6688 -0.6689,2.1689 0,2.8378 1.3377,1.3377 4.3378,-1.3378 5.6756,0 0.6689,0.6688 -0.6689,2.1689 0,2.8378 0.6689,0.6689 2.1689,-0.6689 2.8378,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 1.3378,1.3377 4.3379,-1.3378 5.6756,0 0.6689,0.6689 -0.6689,2.1689 0,2.8378 7.5675,0 -0.9459,-0.9459 2.8378,2.8378 0.6689,0.6689 2.169,-0.6689 2.8378,0 0.6689,0.6689 -0.6688,2.1689 0,2.8378 1.3378,1.3378 4.3379,-1.3377 5.6757,0 0.6688,0.6689 0,1.8919 0,2.8378 0,0.946 0,1.8919 0,2.8378 -28.2833,1e-4 -3.1624,-2.6755 -14.1891,2.8379 -1.6921,0.846 -4.3379,-1.3378 -5.6756,0 -0.6689,0.6688 0.6689,2.1689 0,2.8378 -1.4189,1.4189 -7.0945,-1.4189 -8.5134,0 -0.6689,0.6688 0.6688,2.1689 0,2.8378 -1.3378,1.3377 -4.3379,-1.3378 -5.6757,0 -0.6688,0.6689 0.6689,2.1689 0,2.8378 -0.6688,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -0.6689,0.6689 -2.1689,-0.6689 -2.8378,0 -0.6689,0.6689 0.6689,2.1689 0,2.8378 -1.3378,1.3378 -4.3379,-1.3377 -5.6756,0 -0.6689,0.6689 0.6689,2.169 0,2.8378 -1.4189,1.4189 -7.0945,-1.4189 -8.5135,0 -0.6688,0.6689 0.6689,2.169 0,2.8378 -0.6688,0.6689 -1.8918,0 -2.8378,0 -0.9459,0 -1.8918,0 -2.8378,0 -7.5675,0 -15.135,0 -22.7025,0 -11.3512,0 -22.7024,0 -34.0537,0 -3.7837,0 -7.5675,0 -11.3512,0 -2.7973,0 -8.4729,0 -5.6757,0 1.8919,0 5.6757,1.8919 5.6757,0 0,-7.8143 -6.4771,-0.8014 -8.5135,-2.8378 -0.6688,-0.6688 -0.9459,-2.8378 0,-2.8378 0.946,0 0,3.7838 0,2.8378 0,-2.8378 0,-5.6756 0,-8.5134 0,-1.0421 0.1142,-11.237 0,-11.3512 -0.6688,-0.6689 -2.1689,0.6688 -2.8378,0 -0.6689,-0.6689 0.6689,-2.169 0,-2.8379 -1.3377,-1.3377 -4.3378,1.3378 -5.6756,0 -0.6689,-0.6688 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6688 -1.8919,0 -2.8378,0 -0.9459,0 -1.8919,0 -2.8378,0 -7.5675,0 0.9459,0.946 -2.8378,-2.8378 -0.6689,-0.6689 -1.8919,0 -2.8378,0 -0.946,0 -1.8919,0 -2.8379,0 -1.0421,0 -11.237,0.1142 -11.3512,0 -0.6689,-0.6689 0.6689,-2.1689 0,-2.8378 -1.4189,-1.4189 -7.0945,1.4189 -8.5134,0 -0.6689,-0.6689 0.6688,-2.1689 0,-2.8378 -1.3378,-1.3378 -4.3379,1.3378 -5.6757,0 -0.6688,-0.6689 0.6689,-2.1689 0,-2.8378 -1.3377,-1.3378 -4.3378,1.3377 -5.6756,0 -0.6689,-0.6689 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6689 0.6689,-2.169 0,-2.8378 -0.9461,-0.9462 -4.7295,0.9461 -5.6756,0 -0.6689,-0.6689 0.6689,-2.169 0,-2.8378 -0.6689,-0.6689 -2.1689,0.6688 -2.8378,0 -0.6689,-0.6689 0.6689,-2.169 0,-2.8379 -1.3378,-1.3377 -4.3379,1.3378 -5.6756,0 -0.6689,-0.6688 0,-1.8918 0,-2.8378 0,-1.4839 -0.3731,-10.605 0,-11.3512 0.5982,-1.1965 2.2395,-1.6413 2.8378,-2.8378 0.846,-1.6922 -1.3378,-4.3379 0,-5.6756 0.6689,-0.6689 2.1689,0.6688 2.8378,0 0.9465,-0.9465 -0.9465,-4.7292 0,-5.6757 0.6689,-0.6688 2.1689,0.6689 2.8378,0 0.9456,-0.9455 -0.9456,-4.73 0,-5.6756 0.6689,-0.6689 2.1689,0.6689 2.8378,0 1.3378,-1.3377 -1.3378,-4.3378 0,-5.6756 0.6689,-0.6689 2.1689,0.6689 2.8378,0 0.9465,-0.9465 -0.9465,-4.7291 0,-5.6756 0.6689,-0.6689 2.1689,0.6689 2.8378,0 0.6689,-0.6689 0,-1.8919 0,-2.8378 0,-0.6883 -0.091,-8.4222 0,-8.5135 0.6689,-0.6688 1.8919,0 2.8378,0 3.3037,-22.2072 -10.587,-2.0736 -14.189,-5.6756 -0.6689,-0.6689 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -1.9918,0.423 -2.8378,0 -2.3931,-1.1965 -3.2826,-4.4791 -5.6756,-5.6756 -0.8461,-0.4231 -2.169,0.6689 -2.8379,0 -0.6688,-0.6689 0.6689,-2.169 0,-2.8378 -0.6688,-0.6689 -2.1689,0.6688 -2.8378,0 -0.6688,-0.6689 0.4231,-1.9918 0,-2.8378 -0.5982,-1.1966 -1.8918,-1.8919 -2.8378,-2.8379 -0.9459,-0.9459 -1.6413,-2.2395 -2.8378,-2.8378 -0.8461,-0.423 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6688 0.6689,-2.1689 0,-2.8378 -1.3378,-1.3377 -4.3379,1.3378 -5.6756,0 -0.6689,-0.6689 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -1.8919,0 -2.8378,0 0,-0.9459 0.6688,-2.1689 0,-2.8378 -1.3378,-1.3378 -4.3379,1.3378 -5.6757,0 -0.6688,-0.6689 0.6689,-2.1689 0,-2.8378 -0.6688,-0.6689 -1.9917,0.423 -2.8378,0 -1.1965,-0.5983 -1.6413,-2.2396 -2.8378,-2.8378 -0.8461,-0.4231 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6689 0.6689,-2.169 0,-2.8378 -0.6689,-0.6689 -1.9917,0.423 -2.8378,0 -1.1965,-0.5983 -1.6413,-2.2396 -2.8378,-2.8378 -0.8461,-0.4231 -2.1689,0.6688 -2.8378,0 -0.6689,-0.6689 0.6689,-2.169 0,-2.8379 -1.3378,-1.3377 -3.9835,0.8461 -5.6756,0 -1.1966,-0.5982 -1.6413,-2.2395 -2.8379,-2.8378 -0.846,-0.423 -2.1689,0.6689 -2.8378,0 -0.091,-0.091 0,-7.8252 0,-8.5134 0,-6.6216 0,-13.2431 0,-19.8647 0,-0.9459 -0.6688,-2.1689 0,-2.8378 0.6689,-0.6689 2.169,0.6689 2.8378,0 0.091,-0.091 0,-7.8252 0,-8.5134 0,-7.5675 0,-15.135 0,-22.7025 0,-0.9459 0,-1.8919 0,-2.8378 0,-0.9459 -0.6688,-2.1689 0,-2.8378 0.6689,-0.6689 2.169,0.6689 2.8379,0 0.6688,-0.6689 0,-1.8919 0,-2.8378 0,-4.7297 0,-9.4594 0,-14.1891 0,-5.6756 0,-11.3512 0,-17.0269 0,-0.9459 0.6688,-2.1689 0,-2.8378 -0.6689,-0.6688 -2.169,0.6689 -2.8379,0 -0.6688,-0.6688 0,-1.8918 0,-2.8378 0,-0.9459 0,-3.7837 0,-2.8378 0,1.8919 0,7.5675 0,5.6756 0,-26.4862 2.8379,-2.8378 -2.8378,-8.5134 -0.6688,-0.6689 0.6689,-2.1689 0,-2.8378 -0.6688,-0.6689 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6689 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6689 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6689 0.6689,-2.169 0,-2.8378 -0.6689,-0.6689 -2.1689,0.6688 -2.8378,0 -0.6689,-0.6689 0.6689,-2.169 0,-2.8378 -0.6689,-0.6689 -2.1689,0.6688 -2.8378,0 -0.6689,-0.6689 0,-1.8919 0,-2.8379 0,-0.9459 0,-1.8918 0,-2.8378 0,-0.9459 -0.946,-2.8378 0,-2.8378 0.9459,0 0,3.7838 0,2.8378 0,-2.8378 0,-5.6756 0,-8.5134 0,-0.9459 -0.6689,-2.1689 0,-2.8378 0.6689,-0.6689 2.1689,0.6689 2.8378,0 1.3377,-1.3378 -1.3378,-4.3379 0,-5.6756 0.6689,-0.6689 2.1689,0.6688 2.8378,0 0.6689,-0.6689 -0.423,-1.9918 0,-2.8378 0.5983,-1.1966 2.2396,-1.6413 2.8378,-2.8379 0.423,-0.846 -0.6689,-2.1689 0,-2.8378 7.5675,0 -0.9459,0.946 2.8378,-2.8378 0.6689,-0.6689 2.169,0.6689 2.8378,0 0.6689,-0.6689 -0.6688,-2.1689 0,-2.8378 0.6689,-0.6689 1.9918,0.423 2.8378,0 11.8103,-5.9051 -3.0337,0.1959 2.8379,-5.6756 0.6688,-0.6689 2.1689,0.6689 2.8378,0 0.6688,-0.6689 -0.6689,-2.1689 0,-2.8378 0.6688,-0.6689 2.1689,0.6689 2.8378,0 0.6689,-0.6689 -0.946,-2.8378 0,-2.8378 0.9459,0 0,3.7837 0,2.8378 0,-1.1218 0.606,-12.9771 0,-14.1891 -0.5983,-1.1965 -2.2396,-1.6413 -2.8378,-2.8378 -0.7698,-1.5395 0.7765,-10.5747 0,-11.3512 -0.6689,-0.6689 -2.169,0.6688 -2.8378,0 -0.091,-0.091 0,-7.8252 0,-8.5135 0,-0.9459 -0.946,-2.8378 0,-2.8378 0.9459,0 0,3.7838 0,2.8378 0,-1.8918 -0.8461,-3.9834 0,-5.6756 0.423,-0.8461 2.1689,0.6689 2.8378,0 0.6688,-0.6689 -0.6689,-2.1689 0,-2.8378 7.5675,0 -0.946,0.9459 2.8378,-2.8378 0.6689,-0.6689 2.1689,0.6689 2.8378,0 0.6689,-0.6689 -0.6689,-2.1689 0,-2.8378 0.9471,-0.9471 4.7285,0.9471 5.6756,0 0.6689,-0.6689 -0.6689,-2.169 0,-2.8378 0.6689,-0.6689 2.1689,0.6688 2.8378,0 0.6689,-0.6689 -0.6689,-2.169 0,-2.8378 0.6689,-0.6689 2.169,0.6688 2.8378,0 0.6689,-0.6689 -0.6688,-2.169 0,-2.8379 0.6689,-0.6688 2.169,0.6689 2.8378,0 0.6689,-0.6688 -0.6688,-2.1689 0,-2.8378 1.3378,-1.3377 4.3379,1.3378 5.6757,0 0.6688,-0.6688 -0.6689,-2.1689 0,-2.8378 1.3377,-1.3377 4.3378,1.3378 5.6756,0 0.6689,-0.6689 -0.6689,-2.1689 0,-2.8378 1.3377,-1.3377 4.3379,1.3378 5.6756,0 0.6689,-0.6689 -0.6689,-2.1689 0,-2.8378 0.6689,-0.6689 1.9917,0.423 2.8378,0 1.1965,-0.5983 1.6413,-2.2395 2.8378,-2.8378 0.8461,-0.423 2.169,0.6689 2.8378,0 0.6689,-0.6689 -0.6688,-2.1689 0,-2.8378 0.6689,-0.6689 2.169,0.6689 2.8379,0 0.6688,-0.6689 -0.6689,-2.1689 0,-2.8378 0.6688,-0.6689 2.1689,0.6689 2.8378,0 0.6688,-0.6689 -0.6689,-2.169 0,-2.8378 0.6688,-0.6689 1.9917,0.423 2.8378,0 2.393,-1.1966 3.2825,-4.4791 5.6756,-5.6757 0.8461,-0.423 2.1689,0.6689 2.8378,0 0.6689,-0.6688 -0.6689,-2.1689 0,-2.8378 0.6689,-0.6688 2.1689,0.6689 2.8378,0 0.6689,-0.6688 -0.6689,-2.1689 0,-2.8378 0.6689,-0.6689 1.9918,0.4231 2.8378,0 3.7748,-1.8874 1.9008,-3.7882 5.6756,-5.6756 0.8461,-0.423 2.169,0.6689 2.8379,0 0.6688,-0.6689 -0.6689,-2.1689 0,-2.8378 0.6688,-0.6689 2.1689,0.6689 2.8378,0 0.6688,-0.6689 -0.6689,-2.1689 0,-2.8378 0.6688,-0.6689 2.1689,0.6689 2.8378,0 0.6689,-0.6689 -0.6689,-2.169 0,-2.8378 0.6689,-0.6689 2.1689,0.6688 2.8378,0 0.6689,-0.6689 -0.6689,-2.169 0,-2.8378 0.6689,-0.6689 2.1689,0.6688 2.8378,0 0.6689,-0.6689 -0.6689,-2.169 0,-2.8379 7.5675,0 -0.9459,0.946 2.8378,-2.8378 0.6689,-0.6688 2.1689,0.6689 2.8378,0 1.3378,-1.3377 -0.846,-3.9834 0,-5.6756 0.5983,-1.1965 2.2396,-1.6413 2.8378,-2.8378 0.4231,-0.8461 0,-1.8919 0,-2.8378 0,-0.9459 0,-1.8919 0,-2.8378 0,-0.946 0,-3.7838 0,-2.8378 0,1.8918 0,7.5675 0,5.6756 0,-2.8378 0,-5.6756 0,-8.5134 0,-0.946 0.6689,-2.169 0,-2.8379 -0.6688,-0.6688 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6688 0,-1.8918 0,-2.8378 0,-4.7296 0,-9.4593 0,-14.189 0,-0.946 0.6689,-2.169 0,-2.8378 -0.6689,-0.6689 -2.1689,0.6688 -2.8378,0 -1.4189,-1.4189 1.4189,-7.0946 0,-8.5135 -0.6689,-0.6688 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6688 0,-1.8918 0,-2.8378 0,-1.0421 -0.1142,-11.237 0,-11.3512 0.6689,-0.6689 2.1689,0.6689 2.8378,0 0.091,-0.091 0,-7.8252 0,-8.5134 0,-0.946 0,-1.8919 0,-2.8379 0,-12.4863 0,21.9458 0,-5.6756 0,-0.9459 0,-1.8919 0,-2.8378 0,-0.9459 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6689 0.6689,-2.1689 0,-2.8378 -0.6689,-0.6689 -2.1689,0.6689 -2.8378,0 -0.6689,-0.6689 0,-1.8919 0,-2.8378 -0.9459,0 -1.9917,0.423 -2.8378,0 -1.1965,-0.5983 -1.8919,-1.8919 -2.8378,-2.8378 -0.946,-0.946 -2.2396,-1.6413 -2.8378,-2.8378 -0.4231,-0.8461 0.6688,-2.169 0,-2.8379 -0.6689,-0.6688 -2.169,0.6689 -2.8379,0 -0.9467,-0.9467 0.9468,-4.7288 0,-5.6756 -0.6688,-0.6689 -1.8918,0 -2.8378,0 0,-0.9459 0.6689,-2.1689 0,-2.8378 -0.6688,-0.6689 -1.8918,0 -2.8378,0 -0.9459,0 -1.8918,0 -2.8378,0 -1.8935,0 -3.7821,0 -5.6756,0 -0.9459,0 -2.8378,0.9459 -2.8378,0 0,-0.9459 3.7837,0 2.8378,0 -6.6216,0 -5.6756,1.8919 -5.6756,-2.8378'}));exports.default=SVGs;

},{"react":231}]},{},[234])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
